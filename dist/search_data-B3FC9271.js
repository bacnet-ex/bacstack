searchData={"items":[{"type":"module","title":"BACnet","doc":"BACstack is a low-level Elixir implementation for the ASHRAE standard 135, BACnet - Building Automation and Controller network.\nThis implementation supports ASHRAE 135-xxxx and BACnet/IPv4. Support for other transport layers (such as BACnet/SC, BACnet/MSTP)\ncan be straight forward added on top of it.\n\nAs this is a low-level implementation, users of this library are required to do the heavy-lifting of the BACnet stack,\nsuch as automatically replying to Who-Is services, applying hard application timeout constraints, synchronizing time, etc.\n\nIf you're looking for a high level Elixir abstraction on top of this library, check out [BACnex].\nBACnex is a high level abstraction on top of this library, that offers the high level features of a regular BACnet stack.","ref":"BACnet.html"},{"type":"module","title":"Installation - BACnet","doc":"If [available in Hex](https://hex.pm/docs/publish), the package can be installed\nby adding `bacstack` to your list of dependencies in `mix.exs`:\n\n```elixir\ndef deps do\n  [\n    {:bacstack, \"~> 0.1.0\"}\n  ]\nend\n```\n\nDocumentation can be generated with [ExDoc](https://github.com/elixir-lang/ex_doc)\nand published on [HexDocs](https://hexdocs.pm). Once published, the docs can\nbe found at  .","ref":"BACnet.html#module-installation"},{"type":"module","title":"Character Sets - BACnet","doc":"This library uses the library [Codepagex](https://hex.pm/packages/codepagex) to implement character set conversion.\nBy default, Codepagex only generates conversion code for fast conversion algorithms to and from UTF-8 (such as ISO-8859-1).\n\nIf you need to use other character sets, such as CP932 (JIS-X-0208) or CP850 (DBCS), you will have to configure  Codepagex accordingly.\nRefer to their documentation for the necessary steps.","ref":"BACnet.html#module-character-sets"},{"type":"module","title":"Status of BACnet objects implementation - BACnet","doc":"| Object Type                  | Representation | Execute | Intrinsic Reporting |\n|------------------------------|----------------|---------|---------------------|\n| Accumulator                  |      Beta      |    -    |          -          |\n| Analog Input                 |      Beta      |    -    |          -          |\n| Analog Output                |      Beta      |    -    |          -          |\n| Analog Value                 |      Beta      |    -    |          -          |\n| Averaging                    |      Beta      |    -    |          -          |\n| Binary Input                 |      Beta      |    -    |          -          |\n| Binary Output                |      Beta      |    -    |          -          |\n| Binary Value                 |      Beta      |    -    |          -          |\n| Calendar                     |      Beta      |    -    |          -          |\n| Command                      |      Beta      |    -    |          -          |\n| Device                       |      Beta      |    -    |          -          |\n| Event Enrollment             |      Beta      |    -    |          -          |\n| File                         |      Beta      |    -    |          -          |\n| Group                        |      Beta      |    -    |          -          |\n| Life Safety Point            |       N/A      |    -    |          -          |\n| Life Safety Zone             |       N/A      |    -    |          -          |\n| Loop                         |      Beta      |    -    |          -          |\n| Multistate Input             |      Beta      |    -    |          -          |\n| Multistate Output            |      Beta      |    -    |          -          |\n| Multistate Value             |      Beta      |    -    |          -          |\n| Notification Class           |      Beta      |    -    |          -          |\n| Program                      |      Beta      |    -    |          -          |\n| Pulse Converter              |      Beta      |    -    |          -          |\n| Schedule                     |      Beta      |    -    |          -          |\n| Event Log                    |      Beta      |    -    |          -          |\n| Trend Log                    |      Beta      |    -    |          -          |\n| Trend Log Multiple           |      Beta      |    -    |          -          |\n| Load Control                 |        -       |    -    |          -          |\n| Access Point                 |       N/A      |    -    |          -          |\n| Access Zone                  |       N/A      |    -    |          -          |\n| Access User                  |       N/A      |    -    |          -          |\n| Access Rights                |       N/A      |    -    |          -          |\n| Access Credential            |       N/A      |    -    |          -          |\n| Credential Data Input        |       N/A      |    -    |          -          |\n| Structured View              |      Beta      |    -    |          -          |\n| Character String Value       |      Beta      |    -    |          -          |\n| DateTime Value               |      Beta      |    -    |          -          |\n| Large Analog Value           |      Beta      |    -    |          -          |\n| Bitstring                    |      Beta      |    -    |          -          |\n| Octet String Value           |      Beta      |    -    |          -          |\n| Time Value                   |      Beta      |    -    |          -          |\n| Integer Value                |      Beta      |    -    |          -          |\n| Positive Integer Value       |      Beta      |    -    |          -          |\n| Date Value                   |      Beta      |    -    |          -          |\n| DateTime Pattern Value       |      Beta      |    -    |          -          |\n| Time Pattern Value           |      Beta      |    -    |          -          |\n| Date Pattern Value           |      Beta      |    -    |          -          |\n| Network Security             |       N/A      |    -    |          -          |\n| Global Group                 |        -       |    -    |          -          |\n| Notification Forwarder       |        -       |    -    |          -          |\n| Alert Enrollment             |        -       |    -    |          -          |\n| Channel                      |        -       |    -    |          -          |\n| Lighting Output              |        -       |    -    |          -          |","ref":"BACnet.html#module-status-of-bacnet-objects-implementation"},{"type":"module","title":"Status of BACnet services implementation - BACnet","doc":"| Service Name                 | Receive | Send  | ACK (Pos/Neg)  |\n|------------------------------|---------|-------|----------------|\n| Confirmed COV                |    x    |   x   |  Simple/Error  |\n| Unconfirmed COV              |    x    |   x   |                |\n| Confirmed Event              |    x    |   x   |  Simple/Error  |\n| Unconfirmed Event            |    x    |   x   |                |\n| Acknowledge Alarm            |    x    |   x   |  Simple/Error  |\n| Get Alarm Summary            |    x    |   x   |     x/Error    |\n| Get Enrollment Summary       |    x    |   x   |     x/Error    |\n| Get Event Information        |    x    |   x   |     x/Error    |\n| Life Safety Operation        |    x    |   x   |  Simple/Error  |\n| Subscribe COV                |    x    |   x   |  Simple/Error  |\n| Subscribe COV Property       |    x    |   x   |  Simple/Error  |\n| Atomic Read File             |    x    |   x   |     x/Error    |\n| Atomic Write File            |    x    |   x   |     x/Error    |\n| Add List Element             |    x    |   x   |    Simple/x    |\n| Remove List Element          |    x    |   x   |    Simple/x    |\n| Create Object                |    x    |   x   |       x/x      |\n| Delete Object                |    x    |   x   |    Simple/x    |\n| Read Property                |    x    |   x   |     x/Error    |\n| Read Property Multiple       |    x    |   x   |     x/Error    |\n| Read Range                   |    x    |   x   |     x/Error    |\n| Write Property               |    x    |   x   |  Simple/Error  |\n| Write Property Multiple      |    x    |   x   |    Simple/x    |\n| Write Group                  |    x    |   x   |                |\n| Device Communication Control |    x    |   x   |  Simple/Error  |\n| Confirmed Private Transfer   |    x    |   x   |       x/x      |\n| Unconfirmed Private Transfer |    x    |   x   |                |\n| Reinitialize Device          |    x    |   x   |  Simple/Error  |\n| Confirmed Text Message       |    x    |   x   |  Simple/Error  |\n| Unconfirmed Text Message     |    x    |   x   |                |\n| Time Synchronization         |    x    |   x   |                |\n| UTC Time Synchronization     |    x    |   x   |                |\n| Who-Has                      |    x    |   x   |                |\n| I-Have                       |    x    |   x   |                |\n| Who-Is                       |    x    |   x   |                |\n| I-Am                         |    x    |   x   |                |\n| VT Open                      |   N/A   |  N/A  |                |\n| VT Close                     |   N/A   |  N/A  |                |\n| VT Data                      |   N/A   |  N/A  |                |","ref":"BACnet.html#module-status-of-bacnet-services-implementation"},{"type":"module","title":"Status of Event Algorithms Implementation - BACnet","doc":"| Event Algorithm            | Implemented |\n|----------------------------|-------------|\n| Buffer Ready               |     Beta    |\n| Change Of Bitstring        |     Beta    |\n| Change Of Character String |     Beta    |\n| Change Of Life Safety      |     Beta    |\n| Change Of State            |     Beta    |\n| Change Of Status Flags     |     Beta    |\n| Change Of Value            |     Beta    |\n| Command Failure            |     Beta    |\n| Complex Event Type         |     N/A     |\n| Double Out Of Range        |     Beta    |\n| Extended                   |     N/A     |\n| Floating Limit             |     Beta    |\n| Out Of Range               |     Beta    |\n| Signed Out Of Range        |     Beta    |\n| Unsigned Out Of Range      |     Beta    |\n| Unsigned Range             |     Beta    |","ref":"BACnet.html#module-status-of-event-algorithms-implementation"},{"type":"module","title":"Status of Fault Algorithms Implementation - BACnet","doc":"| Fault Algorithm        | Implemented |\n|------------------------|-------------|\n| Fault Character String |     Beta    |\n| Fault Extended         |     N/A     |\n| Fault Life Safety      |     Beta    |\n| Fault State            |     Beta    |\n| Fault Status Flags     |     Beta    |","ref":"BACnet.html#module-status-of-fault-algorithms-implementation"},{"type":"module","title":"BACnet.Protocol","doc":"This module is mostly used for basic decoding of BACnet frames (Protocol Data Units - PDU).\n\nThis module handles decoding of BVLL (and delegates specifics),\nNPCI, NSDU and APDU (and delegates specifics).\n\nFor BACnet Virtual Link Layer (BVLL), it will handle it and delegate,\nonce it determines it is a BVLC function. BVLC function codes\nsuch as distribute broadcast, original broad- and unicast and\nforwarded NPDU are handled by this module directly.\nCurrently only BVLL type 0x81 (BACnet/IPv4) is implemented.\n\nFor Network Protocol Control Information (NPCI),\nit will handle all decoding associated with it and handle field handling.\n\nFor Network Service Data Unit (NSDU), it will handle all decoding associated\nwith the regular BACnet types, excluding reserved and vendor proprietary.\n\nFor Application Data Unit (APDU), see the `BACnet.Protocol.APDU` module.\n\nSee also the following modules:\n- `BACnet.Protocol.APDU`\n- `BACnet.Protocol.BvlcFunction`\n- `BACnet.Protocol.NPCI`\n- `BACnet.Protocol.NetworkLayerProtocolMessage`","ref":"BACnet.Protocol.html"},{"type":"function","title":"BACnet.Protocol.decode_bvll/3","doc":"Decodes the BVLL header of a BACnet/IP packet.","ref":"BACnet.Protocol.html#decode_bvll/3"},{"type":"function","title":"BACnet.Protocol.decode_npci/1","doc":"Decodes the NPCI header of a BACnet packet.","ref":"BACnet.Protocol.html#decode_npci/1"},{"type":"function","title":"BACnet.Protocol.decode_npdu/2","doc":"Decodes the NPDU of a BACnet packet.\n\nFor network messages, it decodes the NSDU.\nFor application messages, it simply returns the APDU for further processing.","ref":"BACnet.Protocol.html#decode_npdu/2"},{"type":"function","title":"BACnet.Protocol.decode_nsdu/1","doc":"Decodes the NSDU of a BACnet packet.","ref":"BACnet.Protocol.html#decode_nsdu/1"},{"type":"type","title":"BACnet.Protocol.apdu/0","doc":"BACnet Application Data Units (APDU).","ref":"BACnet.Protocol.html#t:apdu/0"},{"type":"type","title":"BACnet.Protocol.bvlc/0","doc":"BACnet Virtual Link Control (BVLC), used in BACnet/IP.","ref":"BACnet.Protocol.html#t:bvlc/0"},{"type":"module","title":"BACnet.Protocol.APDU","doc":"This module provides decoding of Application Data Units (APDU).\nEncoding of APDUs are directly handled in the APDU modules.\n\nAPDUs can be segmented and thus will require processing and merging the segments.\nThe module `BACnet.Stack.SegmentsStore` fulfills this purpose and\nthus all `incomplete` tuples received from `decode/1` should be passed\nto an instance of that module (preferably under a supervisor).\nOnly `ComplexACK` and `ConfirmedServiceRequest` APDUs can be segmented,\nas specified by the BACnet protocol specification.\nSee also the `BACnet.Stack.SegmentsStore` module documentation.\n\nSee also:\n- `BACnet.Protocol.APDU.Abort`\n- `BACnet.Protocol.APDU.ComplexACK`\n- `BACnet.Protocol.APDU.ConfirmedServiceRequest`\n- `BACnet.Protocol.APDU.Error`\n- `BACnet.Protocol.APDU.Reject`\n- `BACnet.Protocol.APDU.SegmentACK`\n- `BACnet.Protocol.APDU.SimpleACK`\n- `BACnet.Protocol.APDU.UnconfirmedServiceRequest`","ref":"BACnet.Protocol.APDU.html"},{"type":"function","title":"BACnet.Protocol.APDU.decode/1","doc":"Decodes the APDU. The binary data must contain only APDU data.\n\nIf the APDU is segmented, this function will return an incomplete tuple,\nwhich must be handled by the `BACnet.Stack.SegmentsStore` module.\n\nSee the `BACnet.Stack.SegmentsStore` module documentation for\nmore information about incoming segmentation (`:segmented_receive`).","ref":"BACnet.Protocol.APDU.html#decode/1"},{"type":"function","title":"BACnet.Protocol.APDU.decode_abort/2","doc":"Decodes the Abort APDU from binary data.","ref":"BACnet.Protocol.APDU.html#decode_abort/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_complex_ack/2","doc":"Decodes the Complex ACK APDU from binary data.\n\nWhen encountering segmentation, this function will return an `incomplete` tuple.\nSee `BACnet.Protocol` module for more information.","ref":"BACnet.Protocol.APDU.html#decode_complex_ack/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_confirmed_request/2","doc":"Decodes the Confirmed Service Request APDU from binary data.\n\nWhen encountering segmentation, this function will return an `incomplete` tuple.\nSee `BACnet.Protocol` module for more information.","ref":"BACnet.Protocol.APDU.html#decode_confirmed_request/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_error/2","doc":"Decodes the Error APDU from binary data.","ref":"BACnet.Protocol.APDU.html#decode_error/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_reject/2","doc":"Decodes the Reject APDU from binary data.","ref":"BACnet.Protocol.APDU.html#decode_reject/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_segment_ack/2","doc":"Decodes the Segment ACK APDU from binary data.","ref":"BACnet.Protocol.APDU.html#decode_segment_ack/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_simple_ack/2","doc":"Decodes the Simple ACK APDU from binary data.","ref":"BACnet.Protocol.APDU.html#decode_simple_ack/2"},{"type":"function","title":"BACnet.Protocol.APDU.decode_unconfirmed_request/2","doc":"Decodes the Unconfirmed Service Request APDU from binary data.","ref":"BACnet.Protocol.APDU.html#decode_unconfirmed_request/2"},{"type":"function","title":"BACnet.Protocol.APDU.get_invoke_id_from_raw_apdu/1","doc":"Extracts the invoke ID from the given raw APDU.\n\nThis is useful for replying to APDUs, which can not be properly fully decoded.","ref":"BACnet.Protocol.APDU.html#get_invoke_id_from_raw_apdu/1"},{"type":"module","title":"BACnet.Protocol.APDU.Abort","doc":"Abort APDUs are used to terminate a transaction between two peers.\n\nThis module has functions for encoding Abort APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.Abort.html"},{"type":"function","title":"BACnet.Protocol.APDU.Abort.encode/1","doc":"Encodes the Abort APDU into binary data.","ref":"BACnet.Protocol.APDU.Abort.html#encode/1"},{"type":"type","title":"BACnet.Protocol.APDU.Abort.t/0","doc":"Represents the Application Data Unit (APDU) Abort.\n\nTo allow forward compatibility, reason is allowed to be an integer.","ref":"BACnet.Protocol.APDU.Abort.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.ComplexACK","doc":"Complex ACK APDUs are used to convey the information contained\nin a positive service response primitive that contains information\nin addition to the fact that the service request\nwas successfully carried out.\n\nThis module has functions for encoding Complex ACK APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.ComplexACK.html"},{"type":"function","title":"BACnet.Protocol.APDU.ComplexACK.encode/1","doc":"Encodes the Complex ACK APDU into binary data.\n\nNote that segmentation is ignored.","ref":"BACnet.Protocol.APDU.ComplexACK.html#encode/1"},{"type":"type","title":"BACnet.Protocol.APDU.ComplexACK.t/0","doc":"Represents the Application Data Unit (APDU) Complex ACK.\n\nTo allow forward compatibility, service is allowed to be an integer.","ref":"BACnet.Protocol.APDU.ComplexACK.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.ConfirmedServiceRequest","doc":"Confirmed Service Request APDUs are used to convey\nthe information contained in confirmed service request primitives.\n\nConfirmed Service Requests require the BACnet server\nto reply with an appropriate response (such as ACK or error).\n\nThis module has functions for encoding Confirmed Service Request APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.ConfirmedServiceRequest.html"},{"type":"function","title":"BACnet.Protocol.APDU.ConfirmedServiceRequest.encode/1","doc":"Encodes the Confirmed Service Request APDU into binary data.\n\nNote that segmentation is ignored.","ref":"BACnet.Protocol.APDU.ConfirmedServiceRequest.html#encode/1"},{"type":"function","title":"BACnet.Protocol.APDU.ConfirmedServiceRequest.to_service/1","doc":"Converts the APDU into a service, if supported and possible.","ref":"BACnet.Protocol.APDU.ConfirmedServiceRequest.html#to_service/1"},{"type":"type","title":"BACnet.Protocol.APDU.ConfirmedServiceRequest.service/0","doc":"BACnet Confirmed Service Request service structs.","ref":"BACnet.Protocol.APDU.ConfirmedServiceRequest.html#t:service/0"},{"type":"type","title":"BACnet.Protocol.APDU.ConfirmedServiceRequest.t/0","doc":"Represents the Application Data Unit (APDU) Confirmed Service Request.\n\nTo allow forward compatibility, service is allowed to be an integer.","ref":"BACnet.Protocol.APDU.ConfirmedServiceRequest.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.Error","doc":"Error APDUs are used to the information contained in a\nservice response primitive that indicates the reason why\na previous confirmed service request failed,\neither in its entirety or only partially.\n\nThis module has functions for encoding Error APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.Error.html"},{"type":"function","title":"BACnet.Protocol.APDU.Error.encode/1","doc":"Encodes the Error APDU into binary data.","ref":"BACnet.Protocol.APDU.Error.html#encode/1"},{"type":"type","title":"BACnet.Protocol.APDU.Error.t/0","doc":"Represents the Application Data Unit (APDU) Error.\n\nTo allow forward compatibility, some fields are allowed to be an integer.","ref":"BACnet.Protocol.APDU.Error.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.Reject","doc":"Reject APDUs are used to reject a received confirmed service request\nbased on syntactical flaws or other protocol errors that prevent\nthe PDU from being interpreted or the requested service from being provided.\nOnly confirmed request PDUs may be rejected (see ASHRAE 135 Clause 18.8).\nA Reject APDU shall be sent only before the execution of the service.\n\nThis module has functions for encoding Reject APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.Reject.html"},{"type":"function","title":"BACnet.Protocol.APDU.Reject.encode/1","doc":"Encodes the Reject APDU into binary data.","ref":"BACnet.Protocol.APDU.Reject.html#encode/1"},{"type":"type","title":"BACnet.Protocol.APDU.Reject.t/0","doc":"Represents the Application Data Unit (APDU) Reject.\n\nTo allow forward compatibility, reason is allowed to be an integer.","ref":"BACnet.Protocol.APDU.Reject.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.SegmentACK","doc":"Segment ACK APDUs are used to acknowledge the receipt of one or more frames\ncontaining portions of a segmented message. It may also request the\nnext segment or segments of the segmented message.\n\nThis module has functions for encoding Segment ACK APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.SegmentACK.html"},{"type":"function","title":"BACnet.Protocol.APDU.SegmentACK.encode/1","doc":"Encodes the Segment ACK APDU into binary data.","ref":"BACnet.Protocol.APDU.SegmentACK.html#encode/1"},{"type":"type","title":"BACnet.Protocol.APDU.SegmentACK.t/0","doc":"Represents the Application Data Unit (APDU) Segment ACK.","ref":"BACnet.Protocol.APDU.SegmentACK.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.SimpleACK","doc":"Simple ACK APDUs are used to convey the information contained\nin a positive service response primitive that contains no other\ninformation except that the service request was successfully carried out.\n\nThis module has functions for encoding Simple ACK APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.SimpleACK.html"},{"type":"function","title":"BACnet.Protocol.APDU.SimpleACK.encode/1","doc":"Encodes the Simple ACK APDU into binary data.","ref":"BACnet.Protocol.APDU.SimpleACK.html#encode/1"},{"type":"type","title":"BACnet.Protocol.APDU.SimpleACK.t/0","doc":"Represents the Application Data Unit (APDU) Simple ACK.\n\nTo allow forward compatibility, service is allowed to be an integer.","ref":"BACnet.Protocol.APDU.SimpleACK.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.APDU.UnconfirmedServiceRequest","doc":"Unconfirmed Service Request APDUs are used to convey the information\ncontained in unconfirmed service request primitives.\n\nUnconfirmed Service Requests are as their name implies unconfirmed,\nthat means a response is not required. Some services will trigger\na response from BACnet servers that match with the service request.\nFor example, this may be a `I Am` being transmitted due to a `Who Is` received.\n\nThis module has functions for encoding Unconfirmed Service Request APDUs.\nDecoding is handled by `BACnet.Protocol.APDU`.\n\nThis module implements the `BACnet.Stack.EncoderProtocol`.","ref":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.html"},{"type":"function","title":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.encode/1","doc":"Encodes the Unconfirmed Service Request APDU into binary data.","ref":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.html#encode/1"},{"type":"function","title":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.to_service/1","doc":"Converts the APDU into a service, if supported and possible.","ref":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.html#to_service/1"},{"type":"type","title":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.service/0","doc":"BACnet Unconfirmed Service Request service structs.","ref":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.html#t:service/0"},{"type":"type","title":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.t/0","doc":"Represents the Application Data Unit (APDU) Unconfirmed Service Request.\n\nTo allow forward compatibility, reason is allowed to be an integer.","ref":"BACnet.Protocol.APDU.UnconfirmedServiceRequest.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ApplicationTags","doc":"This module provides application tags encoding and decoding as per ASHRAE 135 chapter 20.2, including constructed tags.\n\n32bit floats (IEEE 754 single precision floating point numbers) will be truncated to the first non-repeating digit\nwhen decoding those. Due to (single) precision issues, some floats will be rounded to the nearest single precision\nfloating point number representation, such as `0.3` -> `0.3000000004` or `6.9` -> `6.900000095367432`.\nBy default, if more than 3 consecutive numbers are the same, the float will be truncated to the first non-repeating,\nsuch as `6.914000045` -> `6.914`.\nThis behaviour can be configured at compile-time using the application environment `:bacstack`.\nSet `:app_tags_truncate_float32` to `false` to disable this behaviour entirely. To configure the precision (or minimum\nnumber of consecutive repeating numbers), configure `:app_tags_truncate_float32_precision` (defaults to `4`).\nIEEE 754 double precision floating point numbers (64bit floats) are entirely unaffected by this behaviour.\n\n> #### Information {: .info}\n>\n> The following information is quite low-level and is only intended for reference. Knowledge of the BACnet protocol is\n> required to use this module. Dealing with application tags is not required when using abstractions on top of\n> of the APDU layer, such as most of the `Services.*` modules.\n\nBACnet tags are encoded in an initial byte and zero or more conditional subsequent bytes. The initial byte is defined as\nfollows:\n```\nBit Number:\n    7     6     5     4     3     2     1     0\n|-----|------|-----|-----|-----|-----|-----|-----|\n|       Tag Number       |Class|Length/Value/Type|\n|-----|------|-----|-----|-----|-----|-----|-----|\n```\nwhere Tag Number = the tag number within the class\n\nClass = the class of tag (application or context specific)\n\nLength/Value/Type = whether the data following the tag is primitive or constructed and specifies the length\nor value of primitive data.\n\nTag numbers ranging from 0 to 14 are encoded in the initial byte. Tag numbers from 15 to 254 (255 is reserved by ASHRAE) are encoded\nby setting the tag number bits to `0b1111` and the tag number extension byte in the subsequent byte to the initial byte denotes the actual tag number.\n\nThe Length/Value/Type bits are used to distinguish between primitive and constructed data. The Length/Value/Type bits are defined as follows:\n  - if the application tag denotes a boolean, then the boolean value is encoded in the Length/Value/Type bits\n  - if the data is primitive and not constructed, the Length/Value/Type bits denote the length, length from 0-4 are encoded in those bits, for\n    length from 5 to 253 the bits are set to `0b101` and the subsequent byte denotes the length from 0-253, for\n    length from 254 to 65535 the bits are set to `0b101`, the subsequent byte is set to 254 and the following two bytes denotes the length from 0-65535, for\n    length from 65536 to 2^32-1 the bits are set to `0b101`, the subsequent byte is set to 255 and the following four bytes denotes the length from 0-2^32-1\n  - if the data is constructed, the Length/Value/Type bits are set to `0b110` to declare an opening tag, the tags follow in complete application tags encoding,\n    and the closing tag is encoded with the same tag number and class as the opening tag and the Length/Value/Type bits are set to `0b111` to declare a closing tag\n\nConstructed data contains zero or more tagged elements. Each tagged element may be a constructed element iself, this does not result in ambiguous encoding.\n\nThe following table shows application tags:\n\n| Tag Number | Datatype           | Respective Elixir decoding (unwrapped)                   |\n|------------|--------------------|----------------------------------------------------------|\n| 0          | Null               | `nil`                                                    |\n| 1          | Boolean            | `boolean()`                                              |\n| 2          | Unsigned Integer   | `non_neg_integer()`                                      |\n| 3          | Signed Integer     | `integer()`                                              |\n| 4          | Real               | `float()`                                                |\n| 5          | Double             | `float()`                                                |\n| 6          | Octet String       | `binary()`                                               |\n| 7          | Character String   | `String.t()`                                             |\n| 8          | Bitstring          | `tuple()`, each element is a `boolean()` (left to right) |\n| 9          | Enumerated         | `non_neg_integer()`                                      |\n| 10         | Date               | `BACnetDate.t()`                                         |\n| 11         | Time               | `BACnetTime.t()`                                         |\n| 12         | Object Identifier  | `ObjectIdentifier.t()`                                   |\n| 13-15      | Reserved by ASHRAE |                                                          |\n\nFor common application tags, you will receive decoding results such as:\n```elixir\n{:enumerated, 3}\n{:object_identifier, %ObjectIdentifier{\n  instance: 111,\n  type: :device\n}}\n{:unsigned_integer, 50}\n```\n\nContext-specific tags contain context-specific data, which are not denoted directly by an application tag.\nAs such the data cannot be directly decoded to the correct datatype, but the application must direct the datatype to correctly decode the data.\nAs such the following result is not uncommon:\n```elixir\n{:tagged, {1, <<2, 15, 226, 104>>, 4}}\n```\n\nThe `:tagged` atom denotes a context-specific tag encoding and contains the bytes that were given along with the tag encoding (in this case 4 bytes).\nHowever due to the context and the correct datatype being unknown, the bytes couldn't be directly decoded to a particular datatype.\n\nConstructed data may contain primitive or context-specific tags, as such both results are to be expected:\n```elixir\n{:constructed, {1, {:octet_string, <<11, 22>>}, 0}}\n{:constructed, {3, {:tagged, {0, <<2, 12, 49, 0>>, 4}}, 0}}\n```\n\nOr even nested constructed data:\n```elixir\n{:constructed, {12,\n     {:constructed, {6,\n       [\n         tagged: {0, \"U\", 1},\n         constructed: {2, {:real, 1.0}, 0}\n       ], 0}}, 0}}\n```\n\nThe above snippet contains a tagged and constructed element. The tagged contains a binary with length 1 and the constructed contains a real with value 1.0.\nIn case of the constructed element, the value was decoded, as the datatype is known. In case of the tagged element, the datatype is unknown and as such\nknowledge of the BACnet protocol and the context the element is from needs to be known.\n\nIf that is known, the function `unfold_to_type/2` can be used to produce a primitive value by specifying the correct datatype as an atom.\n```elixir\nApplicationTags.unfold_to_type(:unsigned_integer, {:tagged, {0, \"U\", 1}})\n```\n\nConstructed data can also be a list of values, for example when dealing with Priority Arrays:\n```elixir\n{:constructed, {3,\n  [\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil,\n      null: nil\n  ], 0}}\n```","ref":"BACnet.Protocol.ApplicationTags.html"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.create_tag_encoding/2","doc":"Helper function to create `{:tagged, ...}` tag encodings.","ref":"BACnet.Protocol.ApplicationTags.html#create_tag_encoding/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.create_tag_encoding/3","doc":"Helper function to create `{:tagged, ...}` tag encodings.","ref":"BACnet.Protocol.ApplicationTags.html#create_tag_encoding/3"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.decode/1","doc":"Decode the application tag.","ref":"BACnet.Protocol.ApplicationTags.html#decode/1"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.decode_tag_number/1","doc":"Decode the tag number from the application tags encoding.","ref":"BACnet.Protocol.ApplicationTags.html#decode_tag_number/1"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.decode_value/2","doc":"Decode the value from the application tags encoding.","ref":"BACnet.Protocol.ApplicationTags.html#decode_value/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.encode/2","doc":"Encode the application tag.\n\nAvailable options:\n- `encoding: :utf8 | :iso_8859_1` - Optional. The target encoding for character strings (defaults to `:utf8`).","ref":"BACnet.Protocol.ApplicationTags.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.encode_value/2","doc":"Encode the application tag value, without the tag header in the resulting binary.\n\nConstructed tags are not supported, as the format is complex. Constructed tags must be encoded through `encode/2`.\n\nFor available options, see `encode/2`.","ref":"BACnet.Protocol.ApplicationTags.html#encode_value/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.unfold_to_type/2","doc":"Tries to unfold a value into a specific primitive value. The requested primitive type is given through `format`.\n\nSince the BACnet encoding may be a primitive value, a constructed value or a context-specific tagged value,\nthis function tries to take all three forms into considering and tries to produce a primitive value.","ref":"BACnet.Protocol.ApplicationTags.html#unfold_to_type/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.valid_int?/2","doc":"Checks whether the given integer fits into the given integer size in bits.","ref":"BACnet.Protocol.ApplicationTags.html#valid_int?/2"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.elixir_datetime/0","doc":"When encoding date or time values, the Elixir integrated `Date` and `Time` datatypes can be used aswell.","ref":"BACnet.Protocol.ApplicationTags.html#t:elixir_datetime/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.encoding/0","doc":"Represents a BACnet application tags encoding for primitive, tagged and constructed data.","ref":"BACnet.Protocol.ApplicationTags.html#t:encoding/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.encoding_list/0","doc":"Linked list of BACnet application tag encoding.","ref":"BACnet.Protocol.ApplicationTags.html#t:encoding_list/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.ieee_float/0","doc":"Represents sort of IEEE 754 floats, including NaN and infinity using atoms.","ref":"BACnet.Protocol.ApplicationTags.html#t:ieee_float/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.primitive_encoding/0","doc":"Represents the BACnet application tags encoding for primitive data.","ref":"BACnet.Protocol.ApplicationTags.html#t:primitive_encoding/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.primitive_type/0","doc":"BACnet application tag primitive types.\n\nThis is identical to `t:BACnet.Protocol.Constants.application_tag/0`.","ref":"BACnet.Protocol.ApplicationTags.html#t:primitive_type/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.signed8/0","doc":"Represents a `integer()` with a limited 8-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:signed8/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.signed16/0","doc":"Represents a `integer()` with a limited 16-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:signed16/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.signed32/0","doc":"Represents a `neg_integer()` with a limited 32-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:signed32/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.signed64/0","doc":"Represents a `neg_integer()` with a limited 64-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:signed64/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.unsigned8/0","doc":"Represents a `non_neg_integer()` with a limited 8-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:unsigned8/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.unsigned16/0","doc":"Represents a `non_neg_integer()` with a limited 16-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:unsigned16/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.unsigned32/0","doc":"Represents a `non_neg_integer()` with a limited 32-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:unsigned32/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.unsigned64/0","doc":"Represents a `non_neg_integer()` with a limited 64-bit number range.","ref":"BACnet.Protocol.ApplicationTags.html#t:unsigned64/0"},{"type":"module","title":"BACnet.Protocol.ApplicationTags.Encoding","doc":"This module should help dealing with application tags encodings in user code, as\napplication tags encoding can be more easily dealt with as the values can be accessed directly.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.Encoding.create/2","doc":"Creates a struct from the application tags encoding.\n\nTagged encodings can be optionally casted to primitive types.\n\nAvailable options:\n- `cast_type: ApplicationTags.primitive_type()` - Optional. Casts the tagged encoding to the primitive type.\n- `context: any()` - Optional. A user-defined value for matching by the user, untouched by the module.\n- `encoder: (any() -> {:ok, any()} | {:error, any()} | any())`- Optional. An encoder function to use on the value,\n  before creating the application tags encoding.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#create/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.Encoding.create!/2","doc":"Bang version of `create/2`.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#create!/2"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.Encoding.to_encoding/1","doc":"Reverses the process and brings it back to its raw form.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#to_encoding/1"},{"type":"function","title":"BACnet.Protocol.ApplicationTags.Encoding.to_encoding!/1","doc":"Bang version of `to_encoding/1`.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#to_encoding!/1"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.Encoding.create_option/0","doc":"Valid create options. For a description on each option, see `create/2`.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#t:create_option/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.Encoding.create_options/0","doc":"List of create options.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#t:create_options/0"},{"type":"type","title":"BACnet.Protocol.ApplicationTags.Encoding.t/0","doc":"Represents application tags encoding with a slightly more enjoyable structure.\n\nFor tagged and constructed encodings, the extras contains `:tag_number`.\nExtras may also contain `:context` and `:encoder`, if passed to `create/2`.","ref":"BACnet.Protocol.ApplicationTags.Encoding.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Constants","doc":"BACnet Protocol constants.","ref":"BACnet.Protocol.Constants.html"},{"type":"module","title":"Constants: Abort Reason - BACnet.Protocol.Constants","doc":"Type: `:abort_reason`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| apdu_too_long | 11 | `0b1011` | `0xB` |\n| application_exceeded_reply_time | 8 | `0b1000` | `0x8` |\n| buffer_overflow | 1 | `0b1` | `0x1` |\n| insufficient_security | 6 | `0b110` | `0x6` |\n| invalid_apdu_in_this_state | 2 | `0b10` | `0x2` |\n| other | 0 | `0b0` | `0x0` |\n| out_of_resources | 9 | `0b1001` | `0x9` |\n| preempted_by_higher_priority_task | 3 | `0b11` | `0x3` |\n| security_error | 5 | `0b101` | `0x5` |\n| segmentation_not_supported | 4 | `0b100` | `0x4` |\n| tsm_timeout | 10 | `0b1010` | `0xA` |\n| window_size_out_of_range | 7 | `0b111` | `0x7` |","ref":"BACnet.Protocol.Constants.html#module-constants-abort-reason"},{"type":"module","title":"Constants: Accumulator Scale - BACnet.Protocol.Constants","doc":"Type: `:accumulator_scale`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| float_scale | 0 | `0b0` | `0x0` |\n| integer_scale | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-accumulator-scale"},{"type":"module","title":"Constants: Accumulator Status - BACnet.Protocol.Constants","doc":"Type: `:accumulator_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| abnormal | 3 | `0b11` | `0x3` |\n| failed | 4 | `0b100` | `0x4` |\n| normal | 0 | `0b0` | `0x0` |\n| recovered | 2 | `0b10` | `0x2` |\n| starting | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-accumulator-status"},{"type":"module","title":"Constants: Action - BACnet.Protocol.Constants","doc":"Type: `:action`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| direct | 0 | `0b0` | `0x0` |\n| reverse | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-action"},{"type":"module","title":"Constants: Application Tag - BACnet.Protocol.Constants","doc":"Application Tags (ASHRAE 135 - 20.2.1.4 Application Tags)\n\nType: `:application_tag`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| bitstring | 8 | `0b1000` | `0x8` |\n| boolean | 1 | `0b1` | `0x1` |\n| character_string | 7 | `0b111` | `0x7` |\n| date | 10 | `0b1010` | `0xA` |\n| double | 5 | `0b101` | `0x5` |\n| enumerated | 9 | `0b1001` | `0x9` |\n| null | 0 | `0b0` | `0x0` |\n| object_identifier | 12 | `0b1100` | `0xC` |\n| octet_string | 6 | `0b110` | `0x6` |\n| real | 4 | `0b100` | `0x4` |\n| signed_integer | 3 | `0b11` | `0x3` |\n| time | 11 | `0b1011` | `0xB` |\n| unsigned_integer | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-application-tag"},{"type":"module","title":"Constants: Backup State - BACnet.Protocol.Constants","doc":"Type: `:backup_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| backup_failure | 5 | `0b101` | `0x5` |\n| idle | 0 | `0b0` | `0x0` |\n| performing_a_backup | 3 | `0b11` | `0x3` |\n| performing_a_restore | 4 | `0b100` | `0x4` |\n| preparing_for_backup | 1 | `0b1` | `0x1` |\n| preparing_for_restore | 2 | `0b10` | `0x2` |\n| restore_failure | 6 | `0b110` | `0x6` |","ref":"BACnet.Protocol.Constants.html#module-constants-backup-state"},{"type":"module","title":"Constants: Binary Lighting Present Value - BACnet.Protocol.Constants","doc":"Type: `:binary_lighting_present_value`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| off | 0 | `0b0` | `0x0` |\n| on | 1 | `0b1` | `0x1` |\n| stop | 5 | `0b101` | `0x5` |\n| warn | 2 | `0b10` | `0x2` |\n| warn_off | 3 | `0b11` | `0x3` |\n| warn_relinquish | 4 | `0b100` | `0x4` |","ref":"BACnet.Protocol.Constants.html#module-constants-binary-lighting-present-value"},{"type":"module","title":"Constants: Binary Present Value - BACnet.Protocol.Constants","doc":"Type: `:binary_present_value`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| active | 1 | `0b1` | `0x1` |\n| inactive | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-binary-present-value"},{"type":"module","title":"Constants: Bvlc Result Format - BACnet.Protocol.Constants","doc":"BACnet Virtual Link Control (BVLC)\n\nType: `:bvlc_result_format`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| delete_foreign_device_table_entry_nak | 80 | `0b1010000` | `0x50` |\n| distribute_broadcast_to_network_nak | 96 | `0b1100000` | `0x60` |\n| read_broadcast_distribution_table_nak | 32 | `0b100000` | `0x20` |\n| read_foreign_device_table_nak | 64 | `0b1000000` | `0x40` |\n| register_foreign_device_nak | 48 | `0b110000` | `0x30` |\n| successful_completion | 0 | `0b0` | `0x0` |\n| write_broadcast_distribution_table_nak | 16 | `0b10000` | `0x10` |","ref":"BACnet.Protocol.Constants.html#module-constants-bvlc-result-format"},{"type":"module","title":"Constants: Bvlc Result Purpose - BACnet.Protocol.Constants","doc":"BACnet Virtual Link Control (BVLC)\n\nType: `:bvlc_result_purpose`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| bvlc_delete_foreign_device_table_entry | 8 | `0b1000` | `0x8` |\n| bvlc_distribute_broadcast_to_network | 9 | `0b1001` | `0x9` |\n| bvlc_forwarded_npdu | 4 | `0b100` | `0x4` |\n| bvlc_original_broadcast_npdu | 11 | `0b1011` | `0xB` |\n| bvlc_original_unicast_npdu | 10 | `0b1010` | `0xA` |\n| bvlc_read_broadcast_distribution_table | 2 | `0b10` | `0x2` |\n| bvlc_read_broadcast_distribution_table_ack | 3 | `0b11` | `0x3` |\n| bvlc_read_foreign_device_table | 6 | `0b110` | `0x6` |\n| bvlc_read_foreign_device_table_ack | 7 | `0b111` | `0x7` |\n| bvlc_register_foreign_device | 5 | `0b101` | `0x5` |\n| bvlc_result | 0 | `0b0` | `0x0` |\n| bvlc_secure_bvll | 12 | `0b1100` | `0xC` |\n| bvlc_write_broadcast_distribution_table | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-bvlc-result-purpose"},{"type":"module","title":"Constants: Bvll - BACnet.Protocol.Constants","doc":"BACnet Virtual Link Layer (BVLL) for BACnet/IP\n\nType: `:bvll`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| default_port_bacnet_ip | 47808 | `0b1011101011000000` | `0xBAC0` |\n| type_bacnet_ipv4 | 129 | `0b10000001` | `0x81` |\n| type_bacnet_ipv6 | 130 | `0b10000010` | `0x82` |","ref":"BACnet.Protocol.Constants.html#module-constants-bvll"},{"type":"module","title":"Constants: Character String Encoding - BACnet.Protocol.Constants","doc":"Character String Encoding (ASHRAE 135 - 20.2.9 Encoding of a Character String Value)\n\nType: `:character_string_encoding`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| iso_8859_1 | 5 | `0b101` | `0x5` |\n| jis_x_0208 | 2 | `0b10` | `0x2` |\n| microsoft_dbcs | 1 | `0b1` | `0x1` |\n| ucs_2 | 4 | `0b100` | `0x4` |\n| ucs_4 | 3 | `0b11` | `0x3` |\n| utf8 | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-character-string-encoding"},{"type":"module","title":"Constants: Confirmed Service Choice - BACnet.Protocol.Constants","doc":"Type: `:confirmed_service_choice`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| acknowledge_alarm | 0 | `0b0` | `0x0` |\n| add_list_element | 8 | `0b1000` | `0x8` |\n| atomic_read_file | 6 | `0b110` | `0x6` |\n| atomic_write_file | 7 | `0b111` | `0x7` |\n| confirmed_cov_notification | 1 | `0b1` | `0x1` |\n| confirmed_cov_notification_multiple | 31 | `0b11111` | `0x1F` |\n| confirmed_event_notification | 2 | `0b10` | `0x2` |\n| confirmed_private_transfer | 18 | `0b10010` | `0x12` |\n| confirmed_text_message | 19 | `0b10011` | `0x13` |\n| create_object | 10 | `0b1010` | `0xA` |\n| delete_object | 11 | `0b1011` | `0xB` |\n| device_communication_control | 17 | `0b10001` | `0x11` |\n| get_alarm_summary | 3 | `0b11` | `0x3` |\n| get_enrollment_summary | 4 | `0b100` | `0x4` |\n| get_event_information | 29 | `0b11101` | `0x1D` |\n| life_safety_operation | 27 | `0b11011` | `0x1B` |\n| read_property | 12 | `0b1100` | `0xC` |\n| read_property_multiple | 14 | `0b1110` | `0xE` |\n| read_range | 26 | `0b11010` | `0x1A` |\n| reinitialize_device | 20 | `0b10100` | `0x14` |\n| remove_list_element | 9 | `0b1001` | `0x9` |\n| subscribe_cov | 5 | `0b101` | `0x5` |\n| subscribe_cov_property | 28 | `0b11100` | `0x1C` |\n| subscribe_cov_property_multiple | 30 | `0b11110` | `0x1E` |\n| vt_close | 22 | `0b10110` | `0x16` |\n| vt_data | 23 | `0b10111` | `0x17` |\n| vt_open | 21 | `0b10101` | `0x15` |\n| write_property | 15 | `0b1111` | `0xF` |\n| write_property_multiple | 16 | `0b10000` | `0x10` |","ref":"BACnet.Protocol.Constants.html#module-constants-confirmed-service-choice"},{"type":"module","title":"Constants: Days Of Week - BACnet.Protocol.Constants","doc":"Days Of Week (ASHRAE 135 - 21 FORMAL DESCRIPTION OF APPLICATION PROTOCOL DATA UNITS)\n\nType: `:days_of_week`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| friday | 4 | `0b100` | `0x4` |\n| monday | 0 | `0b0` | `0x0` |\n| saturday | 5 | `0b101` | `0x5` |\n| sunday | 6 | `0b110` | `0x6` |\n| thursday | 3 | `0b11` | `0x3` |\n| tuesday | 1 | `0b1` | `0x1` |\n| wednesday | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-days-of-week"},{"type":"module","title":"Constants: Device Status - BACnet.Protocol.Constants","doc":"Type: `:device_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| backup_in_progress | 5 | `0b101` | `0x5` |\n| download_in_progress | 3 | `0b11` | `0x3` |\n| download_required | 2 | `0b10` | `0x2` |\n| non_operational | 4 | `0b100` | `0x4` |\n| operational | 0 | `0b0` | `0x0` |\n| operational_read_only | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-device-status"},{"type":"module","title":"Constants: Door Alarm State - BACnet.Protocol.Constants","doc":"Type: `:door_alarm_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| alarm | 1 | `0b1` | `0x1` |\n| door_fault | 5 | `0b101` | `0x5` |\n| door_open_too_long | 2 | `0b10` | `0x2` |\n| egress_open | 8 | `0b1000` | `0x8` |\n| forced_open | 3 | `0b11` | `0x3` |\n| free_access | 7 | `0b111` | `0x7` |\n| lock_down | 6 | `0b110` | `0x6` |\n| normal | 0 | `0b0` | `0x0` |\n| tamper | 4 | `0b100` | `0x4` |","ref":"BACnet.Protocol.Constants.html#module-constants-door-alarm-state"},{"type":"module","title":"Constants: Door Secured Status - BACnet.Protocol.Constants","doc":"Type: `:door_secured_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| secured | 0 | `0b0` | `0x0` |\n| unknown | 2 | `0b10` | `0x2` |\n| unsecured | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-door-secured-status"},{"type":"module","title":"Constants: Door Status - BACnet.Protocol.Constants","doc":"Type: `:door_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| closed | 0 | `0b0` | `0x0` |\n| closing | 6 | `0b110` | `0x6` |\n| door_fault | 3 | `0b11` | `0x3` |\n| limited_opened | 9 | `0b1001` | `0x9` |\n| none | 5 | `0b101` | `0x5` |\n| opened | 1 | `0b1` | `0x1` |\n| opening | 7 | `0b111` | `0x7` |\n| safety_locked | 8 | `0b1000` | `0x8` |\n| unknown | 2 | `0b10` | `0x2` |\n| unused | 4 | `0b100` | `0x4` |","ref":"BACnet.Protocol.Constants.html#module-constants-door-status"},{"type":"module","title":"Constants: Door Value - BACnet.Protocol.Constants","doc":"Type: `:door_value`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| extended_pulse_unlock | 3 | `0b11` | `0x3` |\n| lock | 0 | `0b0` | `0x0` |\n| pulse_unlock | 2 | `0b10` | `0x2` |\n| unlock | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-door-value"},{"type":"module","title":"Constants: Enable Disable - BACnet.Protocol.Constants","doc":"Enable Disable (ASHRAE 135 - 16.1.1.1.2 Enable/Disable)\n\nType: `:enable_disable`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| disable | 1 | `0b1` | `0x1` |\n| disable_initiation | 2 | `0b10` | `0x2` |\n| enable | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-enable-disable"},{"type":"module","title":"Constants: Engineering Unit - BACnet.Protocol.Constants","doc":"Type: `:engineering_unit`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| ampere_seconds | 238 | `0b11101110` | `0xEE` |\n| ampere_square_hours | 246 | `0b11110110` | `0xF6` |\n| ampere_square_meters | 169 | `0b10101001` | `0xA9` |\n| amperes | 3 | `0b11` | `0x3` |\n| amperes_per_meter | 167 | `0b10100111` | `0xA7` |\n| amperes_per_square_meter | 168 | `0b10101000` | `0xA8` |\n| bars | 55 | `0b110111` | `0x37` |\n| becquerels | 222 | `0b11011110` | `0xDE` |\n| btus | 20 | `0b10100` | `0x14` |\n| btus_per_hour | 50 | `0b110010` | `0x32` |\n| btus_per_pound | 117 | `0b1110101` | `0x75` |\n| btus_per_pound_dry_air | 24 | `0b11000` | `0x18` |\n| candelas | 179 | `0b10110011` | `0xB3` |\n| candelas_per_square_meter | 180 | `0b10110100` | `0xB4` |\n| centimeters | 118 | `0b1110110` | `0x76` |\n| centimeters_of_mercury | 60 | `0b111100` | `0x3C` |\n| centimeters_of_water | 57 | `0b111001` | `0x39` |\n| cubic_feet | 79 | `0b1001111` | `0x4F` |\n| cubic_feet_per_day | 248 | `0b11111000` | `0xF8` |\n| cubic_feet_per_hour | 191 | `0b10111111` | `0xBF` |\n| cubic_feet_per_minute | 84 | `0b1010100` | `0x54` |\n| cubic_feet_per_second | 142 | `0b10001110` | `0x8E` |\n| cubic_meters | 80 | `0b1010000` | `0x50` |\n| cubic_meters_per_day | 249 | `0b11111001` | `0xF9` |\n| cubic_meters_per_hour | 135 | `0b10000111` | `0x87` |\n| cubic_meters_per_minute | 165 | `0b10100101` | `0xA5` |\n| cubic_meters_per_second | 85 | `0b1010101` | `0x55` |\n| currency1 | 105 | `0b1101001` | `0x69` |\n| currency10 | 114 | `0b1110010` | `0x72` |\n| currency2 | 106 | `0b1101010` | `0x6A` |\n| currency3 | 107 | `0b1101011` | `0x6B` |\n| currency4 | 108 | `0b1101100` | `0x6C` |\n| currency5 | 109 | `0b1101101` | `0x6D` |\n| currency6 | 110 | `0b1101110` | `0x6E` |\n| currency7 | 111 | `0b1101111` | `0x6F` |\n| currency8 | 112 | `0b1110000` | `0x70` |\n| currency9 | 113 | `0b1110001` | `0x71` |\n| cycles_per_hour | 25 | `0b11001` | `0x19` |\n| cycles_per_minute | 26 | `0b11010` | `0x1A` |\n| days | 70 | `0b1000110` | `0x46` |\n| decibels | 199 | `0b11000111` | `0xC7` |\n| decibels_a | 232 | `0b11101000` | `0xE8` |\n| decibels_millivolt | 200 | `0b11001000` | `0xC8` |\n| decibels_volt | 201 | `0b11001001` | `0xC9` |\n| degree_days_celsius | 65 | `0b1000001` | `0x41` |\n| degree_days_fahrenheit | 66 | `0b1000010` | `0x42` |\n| degrees_angular | 90 | `0b1011010` | `0x5A` |\n| degrees_celsius | 62 | `0b111110` | `0x3E` |\n| degrees_celsius_per_hour | 91 | `0b1011011` | `0x5B` |\n| degrees_celsius_per_minute | 92 | `0b1011100` | `0x5C` |\n| degrees_fahrenheit | 64 | `0b1000000` | `0x40` |\n| degrees_fahrenheit_per_hour | 93 | `0b1011101` | `0x5D` |\n| degrees_fahrenheit_per_minute | 94 | `0b1011110` | `0x5E` |\n| degrees_kelvin | 63 | `0b111111` | `0x3F` |\n| degrees_kelvin_per_hour | 181 | `0b10110101` | `0xB5` |\n| degrees_kelvin_per_minute | 182 | `0b10110110` | `0xB6` |\n| degrees_phase | 14 | `0b1110` | `0xE` |\n| delta_degrees_fahrenheit | 120 | `0b1111000` | `0x78` |\n| delta_degrees_kelvin | 121 | `0b1111001` | `0x79` |\n| farads | 170 | `0b10101010` | `0xAA` |\n| feet | 33 | `0b100001` | `0x21` |\n| feet_per_minute | 77 | `0b1001101` | `0x4D` |\n| feet_per_second | 76 | `0b1001100` | `0x4C` |\n| foot_candles | 38 | `0b100110` | `0x26` |\n| grams | 195 | `0b11000011` | `0xC3` |\n| grams_of_water_per_kilogram_dry_air | 28 | `0b11100` | `0x1C` |\n| grams_per_cubic_centimeter | 221 | `0b11011101` | `0xDD` |\n| grams_per_cubic_meter | 217 | `0b11011001` | `0xD9` |\n| grams_per_gram | 208 | `0b11010000` | `0xD0` |\n| grams_per_kilogram | 210 | `0b11010010` | `0xD2` |\n| grams_per_liter | 214 | `0b11010110` | `0xD6` |\n| grams_per_milliliter | 213 | `0b11010101` | `0xD5` |\n| grams_per_minute | 155 | `0b10011011` | `0x9B` |\n| grams_per_second | 154 | `0b10011010` | `0x9A` |\n| grams_per_square_meter | 235 | `0b11101011` | `0xEB` |\n| gray | 225 | `0b11100001` | `0xE1` |\n| hectopascals | 133 | `0b10000101` | `0x85` |\n| henrys | 171 | `0b10101011` | `0xAB` |\n| hertz | 27 | `0b11011` | `0x1B` |\n| horsepower | 51 | `0b110011` | `0x33` |\n| hours | 71 | `0b1000111` | `0x47` |\n| hundredths_seconds | 158 | `0b10011110` | `0x9E` |\n| imperial_gallons | 81 | `0b1010001` | `0x51` |\n| imperial_gallons_per_minute | 86 | `0b1010110` | `0x56` |\n| inches | 32 | `0b100000` | `0x20` |\n| inches_of_mercury | 61 | `0b111101` | `0x3D` |\n| inches_of_water | 58 | `0b111010` | `0x3A` |\n| joule_per_hours | 247 | `0b11110111` | `0xF7` |\n| joule_seconds | 183 | `0b10110111` | `0xB7` |\n| joules | 16 | `0b10000` | `0x10` |\n| joules_per_cubic_meter | 251 | `0b11111011` | `0xFB` |\n| joules_per_degree_kelvin | 127 | `0b1111111` | `0x7F` |\n| joules_per_kilogram_degree_kelvin | 128 | `0b10000000` | `0x80` |\n| joules_per_kilogram_dry_air | 23 | `0b10111` | `0x17` |\n| kilo_btus | 147 | `0b10010011` | `0x93` |\n| kilo_btus_per_hour | 157 | `0b10011101` | `0x9D` |\n| kilobecquerels | 223 | `0b11011111` | `0xDF` |\n| kilograms | 39 | `0b100111` | `0x27` |\n| kilograms_per_cubic_meter | 186 | `0b10111010` | `0xBA` |\n| kilograms_per_hour | 44 | `0b101100` | `0x2C` |\n| kilograms_per_kilogram | 209 | `0b11010001` | `0xD1` |\n| kilograms_per_minute | 43 | `0b101011` | `0x2B` |\n| kilograms_per_second | 42 | `0b101010` | `0x2A` |\n| kilohertz | 129 | `0b10000001` | `0x81` |\n| kilohms | 122 | `0b1111010` | `0x7A` |\n| kilojoules | 17 | `0b10001` | `0x11` |\n| kilojoules_per_degree_kelvin | 151 | `0b10010111` | `0x97` |\n| kilojoules_per_kilogram | 125 | `0b1111101` | `0x7D` |\n| kilojoules_per_kilogram_dry_air | 149 | `0b10010101` | `0x95` |\n| kilometers | 193 | `0b11000001` | `0xC1` |\n| kilometers_per_hour | 75 | `0b1001011` | `0x4B` |\n| kilopascals | 54 | `0b110110` | `0x36` |\n| kilovolt_ampere_hours | 240 | `0b11110000` | `0xF0` |\n| kilovolt_ampere_hours_reactive | 243 | `0b11110011` | `0xF3` |\n| kilovolt_amperes | 9 | `0b1001` | `0x9` |\n| kilovolt_amperes_reactive | 12 | `0b1100` | `0xC` |\n| kilovolts | 6 | `0b110` | `0x6` |\n| kilowatt_hours | 19 | `0b10011` | `0x13` |\n| kilowatt_hours_per_square_foot | 138 | `0b10001010` | `0x8A` |\n| kilowatt_hours_per_square_meter | 137 | `0b10001001` | `0x89` |\n| kilowatt_hours_reactive | 204 | `0b11001100` | `0xCC` |\n| kilowatts | 48 | `0b110000` | `0x30` |\n| liters | 82 | `0b1010010` | `0x52` |\n| liters_per_hour | 136 | `0b10001000` | `0x88` |\n| liters_per_minute | 88 | `0b1011000` | `0x58` |\n| liters_per_second | 87 | `0b1010111` | `0x57` |\n| lumens | 36 | `0b100100` | `0x24` |\n| luxes | 37 | `0b100101` | `0x25` |\n| mega_btus | 148 | `0b10010100` | `0x94` |\n| megabecquerels | 224 | `0b11100000` | `0xE0` |\n| megahertz | 130 | `0b10000010` | `0x82` |\n| megajoules | 126 | `0b1111110` | `0x7E` |\n| megajoules_per_degree_kelvin | 152 | `0b10011000` | `0x98` |\n| megajoules_per_kilogram_dry_air | 150 | `0b10010110` | `0x96` |\n| megajoules_per_square_foot | 140 | `0b10001100` | `0x8C` |\n| megajoules_per_square_meter | 139 | `0b10001011` | `0x8B` |\n| megavolt_ampere_hours | 241 | `0b11110001` | `0xF1` |\n| megavolt_ampere_hours_reactive | 244 | `0b11110100` | `0xF4` |\n| megavolt_amperes | 10 | `0b1010` | `0xA` |\n| megavolt_amperes_reactive | 13 | `0b1101` | `0xD` |\n| megavolts | 7 | `0b111` | `0x7` |\n| megawatt_hours | 146 | `0b10010010` | `0x92` |\n| megawatt_hours_reactive | 205 | `0b11001101` | `0xCD` |\n| megawatts | 49 | `0b110001` | `0x31` |\n| megohms | 123 | `0b1111011` | `0x7B` |\n| meters | 31 | `0b11111` | `0x1F` |\n| meters_per_hour | 164 | `0b10100100` | `0xA4` |\n| meters_per_minute | 163 | `0b10100011` | `0xA3` |\n| meters_per_second | 74 | `0b1001010` | `0x4A` |\n| meters_per_second_per_second | 166 | `0b10100110` | `0xA6` |\n| micrograms_per_cubic_meter | 219 | `0b11011011` | `0xDB` |\n| micrograms_per_liter | 216 | `0b11011000` | `0xD8` |\n| microgray | 227 | `0b11100011` | `0xE3` |\n| micrometers | 194 | `0b11000010` | `0xC2` |\n| microsiemens | 190 | `0b10111110` | `0xBE` |\n| microsieverts | 230 | `0b11100110` | `0xE6` |\n| microsieverts_per_hour | 231 | `0b11100111` | `0xE7` |\n| miles_per_hour | 78 | `0b1001110` | `0x4E` |\n| milliamperes | 2 | `0b10` | `0x2` |\n| millibars | 134 | `0b10000110` | `0x86` |\n| milligrams | 196 | `0b11000100` | `0xC4` |\n| milligrams_per_cubic_meter | 218 | `0b11011010` | `0xDA` |\n| milligrams_per_gram | 211 | `0b11010011` | `0xD3` |\n| milligrams_per_kilogram | 212 | `0b11010100` | `0xD4` |\n| milligrams_per_liter | 215 | `0b11010111` | `0xD7` |\n| milligray | 226 | `0b11100010` | `0xE2` |\n| milliliters | 197 | `0b11000101` | `0xC5` |\n| milliliters_per_second | 198 | `0b11000110` | `0xC6` |\n| millimeters | 30 | `0b11110` | `0x1E` |\n| millimeters_of_mercury | 59 | `0b111011` | `0x3B` |\n| millimeters_of_water | 206 | `0b11001110` | `0xCE` |\n| millimeters_per_minute | 162 | `0b10100010` | `0xA2` |\n| millimeters_per_second | 161 | `0b10100001` | `0xA1` |\n| milliohms | 145 | `0b10010001` | `0x91` |\n| million_standard_cubic_feet_per_day | 47809 | `0b1011101011000001` | `0xBAC1` |\n| million_standard_cubic_feet_per_minute | 254 | `0b11111110` | `0xFE` |\n| millirems | 47814 | `0b1011101011000110` | `0xBAC6` |\n| millirems_per_hour | 47815 | `0b1011101011000111` | `0xBAC7` |\n| milliseconds | 159 | `0b10011111` | `0x9F` |\n| millisiemens | 202 | `0b11001010` | `0xCA` |\n| millisieverts | 229 | `0b11100101` | `0xE5` |\n| millivolts | 124 | `0b1111100` | `0x7C` |\n| milliwatts | 132 | `0b10000100` | `0x84` |\n| minutes | 72 | `0b1001000` | `0x48` |\n| minutes_per_degree_kelvin | 236 | `0b11101100` | `0xEC` |\n| mole_percent | 252 | `0b11111100` | `0xFC` |\n| months | 68 | `0b1000100` | `0x44` |\n| nanograms_per_cubic_meter | 220 | `0b11011100` | `0xDC` |\n| nephelometric_turbidity_unit | 233 | `0b11101001` | `0xE9` |\n| newton | 153 | `0b10011001` | `0x99` |\n| newton_meters | 160 | `0b10100000` | `0xA0` |\n| newton_seconds | 187 | `0b10111011` | `0xBB` |\n| newtons_per_meter | 188 | `0b10111100` | `0xBC` |\n| no_units | 95 | `0b1011111` | `0x5F` |\n| ohm_meter_squared_per_meter | 237 | `0b11101101` | `0xED` |\n| ohm_meters | 172 | `0b10101100` | `0xAC` |\n| ohms | 4 | `0b100` | `0x4` |\n| parts_per_billion | 97 | `0b1100001` | `0x61` |\n| parts_per_million | 96 | `0b1100000` | `0x60` |\n| pascal_seconds | 253 | `0b11111101` | `0xFD` |\n| pascals | 53 | `0b110101` | `0x35` |\n| per_hour | 131 | `0b10000011` | `0x83` |\n| per_mille | 207 | `0b11001111` | `0xCF` |\n| per_minute | 100 | `0b1100100` | `0x64` |\n| per_second | 101 | `0b1100101` | `0x65` |\n| percent | 98 | `0b1100010` | `0x62` |\n| percent_obscuration_per_foot | 143 | `0b10001111` | `0x8F` |\n| percent_obscuration_per_meter | 144 | `0b10010000` | `0x90` |\n| percent_per_second | 99 | `0b1100011` | `0x63` |\n| percent_relative_humidity | 29 | `0b11101` | `0x1D` |\n| ph | 234 | `0b11101010` | `0xEA` |\n| pounds_force_per_square_inch | 56 | `0b111000` | `0x38` |\n| pounds_mass | 40 | `0b101000` | `0x28` |\n| pounds_mass_per_day | 47812 | `0b1011101011000100` | `0xBAC4` |\n| pounds_mass_per_hour | 46 | `0b101110` | `0x2E` |\n| pounds_mass_per_minute | 45 | `0b101101` | `0x2D` |\n| pounds_mass_per_second | 119 | `0b1110111` | `0x77` |\n| power_factor | 15 | `0b1111` | `0xF` |\n| psi_per_degree_fahrenheit | 102 | `0b1100110` | `0x66` |\n| radians | 103 | `0b1100111` | `0x67` |\n| radians_per_second | 184 | `0b10111000` | `0xB8` |\n| revolutions_per_minute | 104 | `0b1101000` | `0x68` |\n| seconds | 73 | `0b1001001` | `0x49` |\n| siemens | 173 | `0b10101101` | `0xAD` |\n| siemens_per_meter | 174 | `0b10101110` | `0xAE` |\n| sieverts | 228 | `0b11100100` | `0xE4` |\n| square_centimeters | 116 | `0b1110100` | `0x74` |\n| square_feet | 1 | `0b1` | `0x1` |\n| square_inches | 115 | `0b1110011` | `0x73` |\n| square_meters | 0 | `0b0` | `0x0` |\n| square_meters_per_newton | 185 | `0b10111001` | `0xB9` |\n| standard_cubic_feet_per_day | 47808 | `0b1011101011000000` | `0xBAC0` |\n| teslas | 175 | `0b10101111` | `0xAF` |\n| therms | 21 | `0b10101` | `0x15` |\n| thousand_cubic_feet_per_day | 47810 | `0b1011101011000010` | `0xBAC2` |\n| thousand_standard_cubic_feet_per_day | 47811 | `0b1011101011000011` | `0xBAC3` |\n| ton_hours | 22 | `0b10110` | `0x16` |\n| tons | 41 | `0b101001` | `0x29` |\n| tons_per_hour | 156 | `0b10011100` | `0x9C` |\n| tons_refrigeration | 52 | `0b110100` | `0x34` |\n| us_gallons | 83 | `0b1010011` | `0x53` |\n| us_gallons_per_hour | 192 | `0b11000000` | `0xC0` |\n| us_gallons_per_minute | 89 | `0b1011001` | `0x59` |\n| volt_ampere_hours | 239 | `0b11101111` | `0xEF` |\n| volt_ampere_hours_reactive | 242 | `0b11110010` | `0xF2` |\n| volt_amperes | 8 | `0b1000` | `0x8` |\n| volt_amperes_reactive | 11 | `0b1011` | `0xB` |\n| volt_square_hours | 245 | `0b11110101` | `0xF5` |\n| volts | 5 | `0b101` | `0x5` |\n| volts_per_degree_kelvin | 176 | `0b10110000` | `0xB0` |\n| volts_per_meter | 177 | `0b10110001` | `0xB1` |\n| watt_hours | 18 | `0b10010` | `0x12` |\n| watt_hours_per_cubic_meter | 250 | `0b11111010` | `0xFA` |\n| watt_hours_reactive | 203 | `0b11001011` | `0xCB` |\n| watts | 47 | `0b101111` | `0x2F` |\n| watts_per_meter_per_degree_kelvin | 189 | `0b10111101` | `0xBD` |\n| watts_per_square_foot | 34 | `0b100010` | `0x22` |\n| watts_per_square_meter | 35 | `0b100011` | `0x23` |\n| watts_per_square_meter_degree_kelvin | 141 | `0b10001101` | `0x8D` |\n| webers | 178 | `0b10110010` | `0xB2` |\n| weeks | 69 | `0b1000101` | `0x45` |\n| years | 67 | `0b1000011` | `0x43` |","ref":"BACnet.Protocol.Constants.html#module-constants-engineering-unit"},{"type":"module","title":"Constants: Error Class - BACnet.Protocol.Constants","doc":"Type: `:error_class`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| communication | 7 | `0b111` | `0x7` |\n| device | 0 | `0b0` | `0x0` |\n| object | 1 | `0b1` | `0x1` |\n| property | 2 | `0b10` | `0x2` |\n| resources | 3 | `0b11` | `0x3` |\n| security | 4 | `0b100` | `0x4` |\n| services | 5 | `0b101` | `0x5` |\n| vt | 6 | `0b110` | `0x6` |","ref":"BACnet.Protocol.Constants.html#module-constants-error-class"},{"type":"module","title":"Constants: Error Code - BACnet.Protocol.Constants","doc":"Type: `:error_code`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| abort_apdu_too_long | 123 | `0b1111011` | `0x7B` |\n| abort_application_exceeded_reply_time | 124 | `0b1111100` | `0x7C` |\n| abort_buffer_overflow | 51 | `0b110011` | `0x33` |\n| abort_insufficient_security | 135 | `0b10000111` | `0x87` |\n| abort_invalid_apdu_in_this_state | 52 | `0b110100` | `0x34` |\n| abort_other | 56 | `0b111000` | `0x38` |\n| abort_out_of_resources | 125 | `0b1111101` | `0x7D` |\n| abort_preempted_by_higher_priority_task | 53 | `0b110101` | `0x35` |\n| abort_proprietary | 55 | `0b110111` | `0x37` |\n| abort_security_error | 136 | `0b10001000` | `0x88` |\n| abort_segmentation_not_supported | 54 | `0b110110` | `0x36` |\n| abort_tsm_timeout | 126 | `0b1111110` | `0x7E` |\n| abort_window_size_out_of_range | 127 | `0b1111111` | `0x7F` |\n| access_denied | 85 | `0b1010101` | `0x55` |\n| addressing_error | 115 | `0b1110011` | `0x73` |\n| bad_destination_address | 86 | `0b1010110` | `0x56` |\n| bad_destination_device_id | 87 | `0b1010111` | `0x57` |\n| bad_signature | 88 | `0b1011000` | `0x58` |\n| bad_source_address | 89 | `0b1011001` | `0x59` |\n| bad_timestamp | 90 | `0b1011010` | `0x5A` |\n| busy | 82 | `0b1010010` | `0x52` |\n| cannot_use_key | 91 | `0b1011011` | `0x5B` |\n| cannot_verify_message_id | 92 | `0b1011100` | `0x5C` |\n| character_set_not_supported | 41 | `0b101001` | `0x29` |\n| communication_disabled | 83 | `0b1010011` | `0x53` |\n| configuration_in_progress | 2 | `0b10` | `0x2` |\n| correct_key_revision | 93 | `0b1011101` | `0x5D` |\n| cov_subscription_failed | 43 | `0b101011` | `0x2B` |\n| datatype_not_supported | 47 | `0b101111` | `0x2F` |\n| delete_fdt_entry_failed | 120 | `0b1111000` | `0x78` |\n| destination_device_id_required | 94 | `0b1011110` | `0x5E` |\n| device_busy | 3 | `0b11` | `0x3` |\n| distribute_broadcast_failed | 121 | `0b1111001` | `0x79` |\n| duplicate_entry | 137 | `0b10001001` | `0x89` |\n| duplicate_message | 95 | `0b1011111` | `0x5F` |\n| duplicate_name | 48 | `0b110000` | `0x30` |\n| duplicate_object_id | 49 | `0b110001` | `0x31` |\n| dynamic_creation_not_supported | 4 | `0b100` | `0x4` |\n| encryption_not_configured | 96 | `0b1100000` | `0x60` |\n| encryption_required | 97 | `0b1100001` | `0x61` |\n| file_access_denied | 5 | `0b101` | `0x5` |\n| file_full | 128 | `0b10000000` | `0x80` |\n| inconsistent_configuration | 129 | `0b10000001` | `0x81` |\n| inconsistent_object_type | 130 | `0b10000010` | `0x82` |\n| inconsistent_parameters | 7 | `0b111` | `0x7` |\n| inconsistent_selection_criterion | 8 | `0b1000` | `0x8` |\n| incorrect_key | 98 | `0b1100010` | `0x62` |\n| internal_error | 131 | `0b10000011` | `0x83` |\n| invalid_array_index | 42 | `0b101010` | `0x2A` |\n| invalid_configuration_data | 46 | `0b101110` | `0x2E` |\n| invalid_datatype | 9 | `0b1001` | `0x9` |\n| invalid_event_state | 73 | `0b1001001` | `0x49` |\n| invalid_file_access_method | 10 | `0b1010` | `0xA` |\n| invalid_file_start_position | 11 | `0b1011` | `0xB` |\n| invalid_key_data | 99 | `0b1100011` | `0x63` |\n| invalid_parameter_data_type | 13 | `0b1101` | `0xD` |\n| invalid_tag | 57 | `0b111001` | `0x39` |\n| invalid_timestamp | 14 | `0b1110` | `0xE` |\n| invalid_value_in_this_state | 138 | `0b10001010` | `0x8A` |\n| key_update_in_progress | 100 | `0b1100100` | `0x64` |\n| list_element_not_found | 81 | `0b1010001` | `0x51` |\n| log_buffer_full | 75 | `0b1001011` | `0x4B` |\n| logged_value_purged | 76 | `0b1001100` | `0x4C` |\n| malformed_message | 101 | `0b1100101` | `0x65` |\n| message_too_long | 113 | `0b1110001` | `0x71` |\n| missing_required_parameter | 16 | `0b10000` | `0x10` |\n| network_down | 58 | `0b111010` | `0x3A` |\n| no_alarm_configured | 74 | `0b1001010` | `0x4A` |\n| no_objects_of_specified_type | 17 | `0b10001` | `0x11` |\n| no_property_specified | 77 | `0b1001101` | `0x4D` |\n| no_space_for_object | 18 | `0b10010` | `0x12` |\n| no_space_to_add_list_element | 19 | `0b10011` | `0x13` |\n| no_space_to_write_property | 20 | `0b10100` | `0x14` |\n| no_vt_sessions_available | 21 | `0b10101` | `0x15` |\n| not_configured | 132 | `0b10000100` | `0x84` |\n| not_configured_for_triggered_logging | 78 | `0b1001110` | `0x4E` |\n| not_cov_property | 44 | `0b101100` | `0x2C` |\n| not_key_server | 102 | `0b1100110` | `0x66` |\n| not_router_to_dnet | 110 | `0b1101110` | `0x6E` |\n| object_deletion_not_permitted | 23 | `0b10111` | `0x17` |\n| object_identifier_already_exists | 24 | `0b11000` | `0x18` |\n| operational_problem | 25 | `0b11001` | `0x19` |\n| optional_functionality_not_supported | 45 | `0b101101` | `0x2D` |\n| other | 0 | `0b0` | `0x0` |\n| out_of_memory | 133 | `0b10000101` | `0x85` |\n| parameter_out_of_range | 80 | `0b1010000` | `0x50` |\n| password_failure | 26 | `0b11010` | `0x1A` |\n| property_is_not_a_list | 22 | `0b10110` | `0x16` |\n| property_is_not_an_array | 50 | `0b110010` | `0x32` |\n| read_access_denied | 27 | `0b11011` | `0x1B` |\n| read_bdt_failed | 117 | `0b1110101` | `0x75` |\n| read_fdt_failed | 119 | `0b1110111` | `0x77` |\n| register_foreign_device_failed | 118 | `0b1110110` | `0x76` |\n| reject_buffer_overflow | 59 | `0b111011` | `0x3B` |\n| reject_inconsistent_parameters | 60 | `0b111100` | `0x3C` |\n| reject_invalid_parameter_data_type | 61 | `0b111101` | `0x3D` |\n| reject_invalid_tag | 62 | `0b111110` | `0x3E` |\n| reject_missing_required_parameter | 63 | `0b111111` | `0x3F` |\n| reject_other | 69 | `0b1000101` | `0x45` |\n| reject_parameter_out_of_range | 64 | `0b1000000` | `0x40` |\n| reject_proprietary | 68 | `0b1000100` | `0x44` |\n| reject_too_many_arguments | 65 | `0b1000001` | `0x41` |\n| reject_undefined_enumeration | 66 | `0b1000010` | `0x42` |\n| reject_unrecognized_service | 67 | `0b1000011` | `0x43` |\n| router_busy | 111 | `0b1101111` | `0x6F` |\n| security_error | 114 | `0b1110010` | `0x72` |\n| security_not_configured | 103 | `0b1100111` | `0x67` |\n| service_request_denied | 29 | `0b11101` | `0x1D` |\n| source_security_required | 104 | `0b1101000` | `0x68` |\n| success | 84 | `0b1010100` | `0x54` |\n| timeout | 30 | `0b11110` | `0x1E` |\n| too_many_keys | 105 | `0b1101001` | `0x69` |\n| unknown_authentication_type | 106 | `0b1101010` | `0x6A` |\n| unknown_device | 70 | `0b1000110` | `0x46` |\n| unknown_file_size | 122 | `0b1111010` | `0x7A` |\n| unknown_key | 107 | `0b1101011` | `0x6B` |\n| unknown_key_revision | 108 | `0b1101100` | `0x6C` |\n| unknown_network_message | 112 | `0b1110000` | `0x70` |\n| unknown_object | 31 | `0b11111` | `0x1F` |\n| unknown_property | 32 | `0b100000` | `0x20` |\n| unknown_route | 71 | `0b1000111` | `0x47` |\n| unknown_source_message | 109 | `0b1101101` | `0x6D` |\n| unknown_subscription | 79 | `0b1001111` | `0x4F` |\n| unknown_vt_class | 34 | `0b100010` | `0x22` |\n| unknown_vt_session | 35 | `0b100011` | `0x23` |\n| unsupported_object_type | 36 | `0b100100` | `0x24` |\n| value_not_initialized | 72 | `0b1001000` | `0x48` |\n| value_out_of_range | 37 | `0b100101` | `0x25` |\n| value_too_long | 134 | `0b10000110` | `0x86` |\n| vt_session_already_closed | 38 | `0b100110` | `0x26` |\n| vt_session_termination_failure | 39 | `0b100111` | `0x27` |\n| write_access_denied | 40 | `0b101000` | `0x28` |\n| write_bdt_failed | 116 | `0b1110100` | `0x74` |","ref":"BACnet.Protocol.Constants.html#module-constants-error-code"},{"type":"module","title":"Constants: Event State - BACnet.Protocol.Constants","doc":"Type: `:event_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| fault | 1 | `0b1` | `0x1` |\n| high_limit | 3 | `0b11` | `0x3` |\n| life_safety_alarm | 5 | `0b101` | `0x5` |\n| low_limit | 4 | `0b100` | `0x4` |\n| normal | 0 | `0b0` | `0x0` |\n| offnormal | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-event-state"},{"type":"module","title":"Constants: Event Transition Bit - BACnet.Protocol.Constants","doc":"Type: `:event_transition_bit`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| to_fault | 1 | `0b1` | `0x1` |\n| to_normal | 2 | `0b10` | `0x2` |\n| to_offnormal | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-event-transition-bit"},{"type":"module","title":"Constants: Event Type - BACnet.Protocol.Constants","doc":"Type: `:event_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| access_event | 13 | `0b1101` | `0xD` |\n| buffer_ready | 10 | `0b1010` | `0xA` |\n| change_of_bitstring | 0 | `0b0` | `0x0` |\n| change_of_characterstring | 17 | `0b10001` | `0x11` |\n| change_of_discrete_value | 21 | `0b10101` | `0x15` |\n| change_of_life_safety | 8 | `0b1000` | `0x8` |\n| change_of_reliability | 19 | `0b10011` | `0x13` |\n| change_of_state | 1 | `0b1` | `0x1` |\n| change_of_status_flags | 18 | `0b10010` | `0x12` |\n| change_of_timer | 22 | `0b10110` | `0x16` |\n| change_of_value | 2 | `0b10` | `0x2` |\n| command_failure | 3 | `0b11` | `0x3` |\n| complex_event_type | 6 | `0b110` | `0x6` |\n| double_out_of_range | 14 | `0b1110` | `0xE` |\n| extended | 9 | `0b1001` | `0x9` |\n| floating_limit | 4 | `0b100` | `0x4` |\n| none | 20 | `0b10100` | `0x14` |\n| out_of_range | 5 | `0b101` | `0x5` |\n| signed_out_of_range | 15 | `0b1111` | `0xF` |\n| unsigned_out_of_range | 16 | `0b10000` | `0x10` |\n| unsigned_range | 11 | `0b1011` | `0xB` |","ref":"BACnet.Protocol.Constants.html#module-constants-event-type"},{"type":"module","title":"Constants: Fault Type - BACnet.Protocol.Constants","doc":"Type: `:fault_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| fault_characterstring | 1 | `0b1` | `0x1` |\n| fault_extended | 2 | `0b10` | `0x2` |\n| fault_life_safety | 3 | `0b11` | `0x3` |\n| fault_listed | 7 | `0b111` | `0x7` |\n| fault_out_of_range | 6 | `0b110` | `0x6` |\n| fault_state | 4 | `0b100` | `0x4` |\n| fault_status_flags | 5 | `0b101` | `0x5` |\n| none | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-fault-type"},{"type":"module","title":"Constants: File Access Method - BACnet.Protocol.Constants","doc":"Type: `:file_access_method`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| record_access | 0 | `0b0` | `0x0` |\n| stream_access | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-file-access-method"},{"type":"module","title":"Constants: Ip Mode - BACnet.Protocol.Constants","doc":"Type: `:ip_mode`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| bbmd | 2 | `0b10` | `0x2` |\n| foreign | 1 | `0b1` | `0x1` |\n| normal | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-ip-mode"},{"type":"module","title":"Constants: Life Safety Mode - BACnet.Protocol.Constants","doc":"Type: `:life_safety_mode`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| armed | 5 | `0b101` | `0x5` |\n| automatic_release_disabled | 13 | `0b1101` | `0xD` |\n| default | 14 | `0b1110` | `0xE` |\n| disabled | 12 | `0b1100` | `0xC` |\n| disarmed | 6 | `0b110` | `0x6` |\n| disconnected | 10 | `0b1010` | `0xA` |\n| enabled | 11 | `0b1011` | `0xB` |\n| fast | 9 | `0b1001` | `0x9` |\n| manned | 3 | `0b11` | `0x3` |\n| off | 0 | `0b0` | `0x0` |\n| on | 1 | `0b1` | `0x1` |\n| prearmed | 7 | `0b111` | `0x7` |\n| slow | 8 | `0b1000` | `0x8` |\n| test | 2 | `0b10` | `0x2` |\n| unmanned | 4 | `0b100` | `0x4` |","ref":"BACnet.Protocol.Constants.html#module-constants-life-safety-mode"},{"type":"module","title":"Constants: Life Safety Operation - BACnet.Protocol.Constants","doc":"Type: `:life_safety_operation`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| none | 0 | `0b0` | `0x0` |\n| reset | 4 | `0b100` | `0x4` |\n| reset_alarm | 5 | `0b101` | `0x5` |\n| reset_fault | 6 | `0b110` | `0x6` |\n| silence | 1 | `0b1` | `0x1` |\n| silence_audible | 2 | `0b10` | `0x2` |\n| silence_visual | 3 | `0b11` | `0x3` |\n| unsilence | 7 | `0b111` | `0x7` |\n| unsilence_audible | 8 | `0b1000` | `0x8` |\n| unsilence_visual | 9 | `0b1001` | `0x9` |","ref":"BACnet.Protocol.Constants.html#module-constants-life-safety-operation"},{"type":"module","title":"Constants: Life Safety State - BACnet.Protocol.Constants","doc":"Type: `:life_safety_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| abnormal | 16 | `0b10000` | `0x10` |\n| active | 7 | `0b111` | `0x7` |\n| alarm | 2 | `0b10` | `0x2` |\n| blocked | 19 | `0b10011` | `0x13` |\n| delayed | 18 | `0b10010` | `0x12` |\n| duress | 14 | `0b1110` | `0xE` |\n| emergency_power | 17 | `0b10001` | `0x11` |\n| fault | 3 | `0b11` | `0x3` |\n| fault_alarm | 5 | `0b101` | `0x5` |\n| fault_pre_alarm | 4 | `0b100` | `0x4` |\n| general_alarm | 21 | `0b10101` | `0x15` |\n| holdup | 13 | `0b1101` | `0xD` |\n| local_alarm | 20 | `0b10100` | `0x14` |\n| not_ready | 6 | `0b110` | `0x6` |\n| pre_alarm | 1 | `0b1` | `0x1` |\n| quiet | 0 | `0b0` | `0x0` |\n| supervisory | 22 | `0b10110` | `0x16` |\n| tamper | 8 | `0b1000` | `0x8` |\n| tamper_alarm | 15 | `0b1111` | `0xF` |\n| test_active | 10 | `0b1010` | `0xA` |\n| test_alarm | 9 | `0b1001` | `0x9` |\n| test_fault | 11 | `0b1011` | `0xB` |\n| test_fault_alarm | 12 | `0b1100` | `0xC` |\n| test_supervisory | 23 | `0b10111` | `0x17` |","ref":"BACnet.Protocol.Constants.html#module-constants-life-safety-state"},{"type":"module","title":"Constants: Lighting In Progress - BACnet.Protocol.Constants","doc":"Type: `:lighting_in_progress`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| fade_active | 1 | `0b1` | `0x1` |\n| idle | 0 | `0b0` | `0x0` |\n| not_controlled | 3 | `0b11` | `0x3` |\n| other | 4 | `0b100` | `0x4` |\n| ramp_active | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-lighting-in-progress"},{"type":"module","title":"Constants: Lighting Operation - BACnet.Protocol.Constants","doc":"Type: `:lighting_operation`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| fade_to | 1 | `0b1` | `0x1` |\n| none | 0 | `0b0` | `0x0` |\n| ramp_to | 2 | `0b10` | `0x2` |\n| step_down | 4 | `0b100` | `0x4` |\n| step_off | 6 | `0b110` | `0x6` |\n| step_on | 5 | `0b101` | `0x5` |\n| step_up | 3 | `0b11` | `0x3` |\n| stop | 10 | `0b1010` | `0xA` |\n| warn | 7 | `0b111` | `0x7` |\n| warn_off | 8 | `0b1000` | `0x8` |\n| warn_relinquish | 9 | `0b1001` | `0x9` |","ref":"BACnet.Protocol.Constants.html#module-constants-lighting-operation"},{"type":"module","title":"Constants: Lighting Transition - BACnet.Protocol.Constants","doc":"Type: `:lighting_transition`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| fade | 1 | `0b1` | `0x1` |\n| none | 0 | `0b0` | `0x0` |\n| ramp | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-lighting-transition"},{"type":"module","title":"Constants: Limit Enable - BACnet.Protocol.Constants","doc":"Type: `:limit_enable`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| high_limit_enable | 1 | `0b1` | `0x1` |\n| low_limit_enable | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-limit-enable"},{"type":"module","title":"Constants: Lock Status - BACnet.Protocol.Constants","doc":"Type: `:lock_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| lock_fault | 2 | `0b10` | `0x2` |\n| locked | 0 | `0b0` | `0x0` |\n| unknown | 4 | `0b100` | `0x4` |\n| unlocked | 1 | `0b1` | `0x1` |\n| unused | 3 | `0b11` | `0x3` |","ref":"BACnet.Protocol.Constants.html#module-constants-lock-status"},{"type":"module","title":"Constants: Log Status - BACnet.Protocol.Constants","doc":"Type: `:log_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| buffer_purged | 1 | `0b1` | `0x1` |\n| log_disabled | 0 | `0b0` | `0x0` |\n| log_interrupted | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-log-status"},{"type":"module","title":"Constants: Logging Type - BACnet.Protocol.Constants","doc":"Type: `:logging_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| cov | 1 | `0b1` | `0x1` |\n| polled | 0 | `0b0` | `0x0` |\n| triggered | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-logging-type"},{"type":"module","title":"Constants: Maintenance - BACnet.Protocol.Constants","doc":"Type: `:maintenance`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| need_service_inoperative | 3 | `0b11` | `0x3` |\n| need_service_operational | 2 | `0b10` | `0x2` |\n| none | 0 | `0b0` | `0x0` |\n| periodic_test | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-maintenance"},{"type":"module","title":"Constants: Max Apdu Length Accepted - BACnet.Protocol.Constants","doc":"Max APDU Length Accepted (ASHRAE 135 - 20.1.2.5 max-apdu-length-accepted)\n\nType: `:max_apdu_length_accepted`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| octets_1024 | 4 | `0b100` | `0x4` |\n| octets_128 | 1 | `0b1` | `0x1` |\n| octets_1476 | 5 | `0b101` | `0x5` |\n| octets_206 | 2 | `0b10` | `0x2` |\n| octets_480 | 3 | `0b11` | `0x3` |\n| octets_50 | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-max-apdu-length-accepted"},{"type":"module","title":"Constants: Max Apdu Length Accepted Value - BACnet.Protocol.Constants","doc":"Max APDU Length Accepted (ASHRAE 135 - 20.1.2.5 max-apdu-length-accepted) - Values are the real APDU max size\n\nType: `:max_apdu_length_accepted_value`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| octets_1024 | 1024 | `0b10000000000` | `0x400` |\n| octets_128 | 128 | `0b10000000` | `0x80` |\n| octets_1476 | 1476 | `0b10111000100` | `0x5C4` |\n| octets_206 | 206 | `0b11001110` | `0xCE` |\n| octets_480 | 480 | `0b111100000` | `0x1E0` |\n| octets_50 | 50 | `0b110010` | `0x32` |","ref":"BACnet.Protocol.Constants.html#module-constants-max-apdu-length-accepted-value"},{"type":"module","title":"Constants: Max Segments Accepted - BACnet.Protocol.Constants","doc":"Max Segments Accepted (ASHRAE 135 - 20.1.2.4 max-segments-accepted)\n\nType: `:max_segments_accepted`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| segments_0 | 0 | `0b0` | `0x0` |\n| segments_16 | 4 | `0b100` | `0x4` |\n| segments_2 | 1 | `0b1` | `0x1` |\n| segments_32 | 5 | `0b101` | `0x5` |\n| segments_4 | 2 | `0b10` | `0x2` |\n| segments_64 | 6 | `0b110` | `0x6` |\n| segments_65 | 7 | `0b111` | `0x7` |\n| segments_8 | 3 | `0b11` | `0x3` |","ref":"BACnet.Protocol.Constants.html#module-constants-max-segments-accepted"},{"type":"module","title":"Constants: Network Layer Message Type - BACnet.Protocol.Constants","doc":"Network Layer Message Type (ASHRAE 135 - 6.2.4 Network Layer Message Type)\n\nType: `:network_layer_message_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| challenge_request | 10 | `0b1010` | `0xA` |\n| disconnect_connection_to_network | 9 | `0b1001` | `0x9` |\n| establish_connection_to_network | 8 | `0b1000` | `0x8` |\n| i_am_router_to_network | 1 | `0b1` | `0x1` |\n| i_could_be_router_to_network | 2 | `0b10` | `0x2` |\n| initialize_routing_table | 6 | `0b110` | `0x6` |\n| initialize_routing_table_ack | 7 | `0b111` | `0x7` |\n| network_number_is | 19 | `0b10011` | `0x13` |\n| reject_message_to_network | 3 | `0b11` | `0x3` |\n| request_key_update | 13 | `0b1101` | `0xD` |\n| request_master_key | 16 | `0b10000` | `0x10` |\n| reserved_area_start | 20 | `0b10100` | `0x14` |\n| router_available_to_network | 5 | `0b101` | `0x5` |\n| router_busy_to_network | 4 | `0b100` | `0x4` |\n| security_payload | 11 | `0b1011` | `0xB` |\n| security_response | 12 | `0b1100` | `0xC` |\n| set_master_key | 17 | `0b10001` | `0x11` |\n| update_distribution_key | 15 | `0b1111` | `0xF` |\n| update_key_set | 14 | `0b1110` | `0xE` |\n| vendor_proprietary_area_start | 128 | `0b10000000` | `0x80` |\n| what_is_network_number | 18 | `0b10010` | `0x12` |\n| who_is_router_to_network | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-network-layer-message-type"},{"type":"module","title":"Constants: Network Number Quality - BACnet.Protocol.Constants","doc":"Type: `:network_number_quality`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| configured | 3 | `0b11` | `0x3` |\n| learned | 1 | `0b1` | `0x1` |\n| learned_configured | 2 | `0b10` | `0x2` |\n| unknown | 0 | `0b0` | `0x0` |","ref":"BACnet.Protocol.Constants.html#module-constants-network-number-quality"},{"type":"module","title":"Constants: Network Port Command - BACnet.Protocol.Constants","doc":"Type: `:network_port_command`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| discard_changes | 1 | `0b1` | `0x1` |\n| disconnect | 6 | `0b110` | `0x6` |\n| idle | 0 | `0b0` | `0x0` |\n| renew_dhcp | 4 | `0b100` | `0x4` |\n| renew_fd_registration | 2 | `0b10` | `0x2` |\n| restart_autonegotiation | 5 | `0b101` | `0x5` |\n| restart_port | 7 | `0b111` | `0x7` |\n| restart_slave_discovery | 3 | `0b11` | `0x3` |","ref":"BACnet.Protocol.Constants.html#module-constants-network-port-command"},{"type":"module","title":"Constants: Network Type - BACnet.Protocol.Constants","doc":"Type: `:network_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| arcnet | 1 | `0b1` | `0x1` |\n| ethernet | 0 | `0b0` | `0x0` |\n| ipv4 | 5 | `0b101` | `0x5` |\n| ipv6 | 9 | `0b1001` | `0x9` |\n| lontalk | 4 | `0b100` | `0x4` |\n| mstp | 2 | `0b10` | `0x2` |\n| ptp | 3 | `0b11` | `0x3` |\n| serial | 10 | `0b1010` | `0xA` |\n| virtual | 7 | `0b111` | `0x7` |\n| zigbee | 6 | `0b110` | `0x6` |","ref":"BACnet.Protocol.Constants.html#module-constants-network-type"},{"type":"module","title":"Constants: Node Type - BACnet.Protocol.Constants","doc":"Type: `:node_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| area | 5 | `0b101` | `0x5` |\n| building | 13 | `0b1101` | `0xD` |\n| collection | 8 | `0b1000` | `0x8` |\n| device | 3 | `0b11` | `0x3` |\n| equipment | 6 | `0b110` | `0x6` |\n| floor | 14 | `0b1110` | `0xE` |\n| functional | 10 | `0b1010` | `0xA` |\n| member | 18 | `0b10010` | `0x12` |\n| module | 16 | `0b10000` | `0x10` |\n| network | 2 | `0b10` | `0x2` |\n| organizational | 4 | `0b100` | `0x4` |\n| other | 11 | `0b1011` | `0xB` |\n| point | 7 | `0b111` | `0x7` |\n| property | 9 | `0b1001` | `0x9` |\n| protocol | 19 | `0b10011` | `0x13` |\n| room | 20 | `0b10100` | `0x14` |\n| section | 15 | `0b1111` | `0xF` |\n| subsystem | 12 | `0b1100` | `0xC` |\n| system | 1 | `0b1` | `0x1` |\n| tree | 17 | `0b10001` | `0x11` |\n| unknown | 0 | `0b0` | `0x0` |\n| zone | 21 | `0b10101` | `0x15` |","ref":"BACnet.Protocol.Constants.html#module-constants-node-type"},{"type":"module","title":"Constants: Notify Type - BACnet.Protocol.Constants","doc":"Type: `:notify_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| ack_notification | 2 | `0b10` | `0x2` |\n| alarm | 0 | `0b0` | `0x0` |\n| event | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-notify-type"},{"type":"module","title":"Constants: Npdu Control Bit - BACnet.Protocol.Constants","doc":"NPDU Control Bits (ASHRAE 135 - 6.2.2 Network Layer Protocol Control Information)\n\nType: `:npdu_control_bit`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| destination_specified | 32 | `0b100000` | `0x20` |\n| expecting_reply | 4 | `0b100` | `0x4` |\n| network_layer_message | 128 | `0b10000000` | `0x80` |\n| source_specified | 8 | `0b1000` | `0x8` |","ref":"BACnet.Protocol.Constants.html#module-constants-npdu-control-bit"},{"type":"module","title":"Constants: Npdu Control Priority - BACnet.Protocol.Constants","doc":"NPDU Control Priority (ASHRAE 135 - 6.2.2 Network Layer Protocol Control Information)\n\nType: `:npdu_control_priority`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| critical_equipment_message | 2 | `0b10` | `0x2` |\n| life_safety_message | 3 | `0b11` | `0x3` |\n| normal | 0 | `0b0` | `0x0` |\n| urgent | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-npdu-control-priority"},{"type":"module","title":"Constants: Object Type - BACnet.Protocol.Constants","doc":"Type: `:object_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| access_credential | 32 | `0b100000` | `0x20` |\n| access_door | 30 | `0b11110` | `0x1E` |\n| access_point | 33 | `0b100001` | `0x21` |\n| access_rights | 34 | `0b100010` | `0x22` |\n| access_user | 35 | `0b100011` | `0x23` |\n| access_zone | 36 | `0b100100` | `0x24` |\n| accumulator | 23 | `0b10111` | `0x17` |\n| alert_enrollment | 52 | `0b110100` | `0x34` |\n| analog_input | 0 | `0b0` | `0x0` |\n| analog_output | 1 | `0b1` | `0x1` |\n| analog_value | 2 | `0b10` | `0x2` |\n| averaging | 18 | `0b10010` | `0x12` |\n| binary_input | 3 | `0b11` | `0x3` |\n| binary_lighting_output | 55 | `0b110111` | `0x37` |\n| binary_output | 4 | `0b100` | `0x4` |\n| binary_value | 5 | `0b101` | `0x5` |\n| bitstring_value | 39 | `0b100111` | `0x27` |\n| calendar | 6 | `0b110` | `0x6` |\n| channel | 53 | `0b110101` | `0x35` |\n| character_string_value | 40 | `0b101000` | `0x28` |\n| command | 7 | `0b111` | `0x7` |\n| credential_data_input | 37 | `0b100101` | `0x25` |\n| date_pattern_value | 41 | `0b101001` | `0x29` |\n| date_value | 42 | `0b101010` | `0x2A` |\n| datetime_pattern_value | 43 | `0b101011` | `0x2B` |\n| datetime_value | 44 | `0b101100` | `0x2C` |\n| device | 8 | `0b1000` | `0x8` |\n| elevator_group | 57 | `0b111001` | `0x39` |\n| escalator | 58 | `0b111010` | `0x3A` |\n| event_enrollment | 9 | `0b1001` | `0x9` |\n| event_log | 25 | `0b11001` | `0x19` |\n| file | 10 | `0b1010` | `0xA` |\n| global_group | 26 | `0b11010` | `0x1A` |\n| group | 11 | `0b1011` | `0xB` |\n| integer_value | 45 | `0b101101` | `0x2D` |\n| large_analog_value | 46 | `0b101110` | `0x2E` |\n| life_safety_point | 21 | `0b10101` | `0x15` |\n| life_safety_zone | 22 | `0b10110` | `0x16` |\n| lift | 59 | `0b111011` | `0x3B` |\n| lighting_output | 54 | `0b110110` | `0x36` |\n| load_control | 28 | `0b11100` | `0x1C` |\n| loop | 12 | `0b1100` | `0xC` |\n| multi_state_input | 13 | `0b1101` | `0xD` |\n| multi_state_output | 14 | `0b1110` | `0xE` |\n| multi_state_value | 19 | `0b10011` | `0x13` |\n| network_port | 56 | `0b111000` | `0x38` |\n| network_security | 38 | `0b100110` | `0x26` |\n| notification_class | 15 | `0b1111` | `0xF` |\n| notification_forwarder | 51 | `0b110011` | `0x33` |\n| octet_string_value | 47 | `0b101111` | `0x2F` |\n| positive_integer_value | 48 | `0b110000` | `0x30` |\n| program | 16 | `0b10000` | `0x10` |\n| pulse_converter | 24 | `0b11000` | `0x18` |\n| schedule | 17 | `0b10001` | `0x11` |\n| structured_view | 29 | `0b11101` | `0x1D` |\n| time_pattern_value | 49 | `0b110001` | `0x31` |\n| time_value | 50 | `0b110010` | `0x32` |\n| timer | 31 | `0b11111` | `0x1F` |\n| trend_log | 20 | `0b10100` | `0x14` |\n| trend_log_multiple | 27 | `0b11011` | `0x1B` |","ref":"BACnet.Protocol.Constants.html#module-constants-object-type"},{"type":"module","title":"Constants: Object Types Supported - BACnet.Protocol.Constants","doc":"Type: `:object_types_supported`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| access_credential | 32 | `0b100000` | `0x20` |\n| access_door | 30 | `0b11110` | `0x1E` |\n| access_point | 33 | `0b100001` | `0x21` |\n| access_rights | 34 | `0b100010` | `0x22` |\n| access_user | 35 | `0b100011` | `0x23` |\n| access_zone | 36 | `0b100100` | `0x24` |\n| accumulator | 23 | `0b10111` | `0x17` |\n| alert_enrollment | 52 | `0b110100` | `0x34` |\n| analog_input | 0 | `0b0` | `0x0` |\n| analog_output | 1 | `0b1` | `0x1` |\n| analog_value | 2 | `0b10` | `0x2` |\n| averaging | 18 | `0b10010` | `0x12` |\n| binary_input | 3 | `0b11` | `0x3` |\n| binary_lighting_output | 55 | `0b110111` | `0x37` |\n| binary_output | 4 | `0b100` | `0x4` |\n| binary_value | 5 | `0b101` | `0x5` |\n| bitstring_value | 39 | `0b100111` | `0x27` |\n| calendar | 6 | `0b110` | `0x6` |\n| channel | 53 | `0b110101` | `0x35` |\n| character_string_value | 40 | `0b101000` | `0x28` |\n| command | 7 | `0b111` | `0x7` |\n| credential_data_input | 37 | `0b100101` | `0x25` |\n| date_pattern_value | 41 | `0b101001` | `0x29` |\n| date_value | 42 | `0b101010` | `0x2A` |\n| datetime_pattern_value | 43 | `0b101011` | `0x2B` |\n| datetime_value | 44 | `0b101100` | `0x2C` |\n| device | 8 | `0b1000` | `0x8` |\n| elevator_group | 57 | `0b111001` | `0x39` |\n| escalator | 58 | `0b111010` | `0x3A` |\n| event_enrollment | 9 | `0b1001` | `0x9` |\n| event_log | 25 | `0b11001` | `0x19` |\n| file | 10 | `0b1010` | `0xA` |\n| global_group | 26 | `0b11010` | `0x1A` |\n| group | 11 | `0b1011` | `0xB` |\n| integer_value | 45 | `0b101101` | `0x2D` |\n| large_analog_value | 46 | `0b101110` | `0x2E` |\n| life_safety_point | 21 | `0b10101` | `0x15` |\n| life_safety_zone | 22 | `0b10110` | `0x16` |\n| lift | 59 | `0b111011` | `0x3B` |\n| lighting_output | 54 | `0b110110` | `0x36` |\n| load_control | 28 | `0b11100` | `0x1C` |\n| loop | 12 | `0b1100` | `0xC` |\n| multi_state_input | 13 | `0b1101` | `0xD` |\n| multi_state_output | 14 | `0b1110` | `0xE` |\n| multi_state_value | 19 | `0b10011` | `0x13` |\n| network_port | 56 | `0b111000` | `0x38` |\n| network_security | 38 | `0b100110` | `0x26` |\n| notification_class | 15 | `0b1111` | `0xF` |\n| notification_forwarder | 51 | `0b110011` | `0x33` |\n| octet_string_value | 47 | `0b101111` | `0x2F` |\n| positive_integer_value | 48 | `0b110000` | `0x30` |\n| program | 16 | `0b10000` | `0x10` |\n| pulse_converter | 24 | `0b11000` | `0x18` |\n| schedule | 17 | `0b10001` | `0x11` |\n| structured_view | 29 | `0b11101` | `0x1D` |\n| time_pattern_value | 49 | `0b110001` | `0x31` |\n| time_value | 50 | `0b110010` | `0x32` |\n| timer | 31 | `0b11111` | `0x1F` |\n| trend_log | 20 | `0b10100` | `0x14` |\n| trend_log_multiple | 27 | `0b11011` | `0x1B` |","ref":"BACnet.Protocol.Constants.html#module-constants-object-types-supported"},{"type":"module","title":"Constants: Pdu Confirmed Request Bit - BACnet.Protocol.Constants","doc":"PDU Confirmed Request PDU Bits (ASHRAE 135 - 20.1.2.11 Format of the BACnet-Confirmed-Request-PDU)\n\nType: `:pdu_confirmed_request_bit`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| more_follows | 4 | `0b100` | `0x4` |\n| segmented_message | 8 | `0b1000` | `0x8` |\n| segmented_response_accepted | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-pdu-confirmed-request-bit"},{"type":"module","title":"Constants: Pdu Segment Ack Bit - BACnet.Protocol.Constants","doc":"PDU Segment ACK Bits (ASHRAE 135 - 20.1.6.6 Format of the BACnet-SegmentACK-PDU)\n\nType: `:pdu_segment_ack_bit`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| negative_ack | 2 | `0b10` | `0x2` |\n| server | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-pdu-segment-ack-bit"},{"type":"module","title":"Constants: Pdu Type - BACnet.Protocol.Constants","doc":"PDU Types (ASHRAE 135 - 21 FORMAL DESCRIPTION OF APPLICATION PROTOCOL DATA UNITS)\n\nType: `:pdu_type`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| abort | 7 | `0b111` | `0x7` |\n| complex_ack | 3 | `0b11` | `0x3` |\n| confirmed_request | 0 | `0b0` | `0x0` |\n| error | 5 | `0b101` | `0x5` |\n| reject | 6 | `0b110` | `0x6` |\n| segment_ack | 4 | `0b100` | `0x4` |\n| simple_ack | 2 | `0b10` | `0x2` |\n| unconfirmed_request | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-pdu-type"},{"type":"module","title":"Constants: Polarity - BACnet.Protocol.Constants","doc":"Type: `:polarity`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| normal | 0 | `0b0` | `0x0` |\n| reverse | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-polarity"},{"type":"module","title":"Constants: Program Error - BACnet.Protocol.Constants","doc":"Type: `:program_error`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| internal | 2 | `0b10` | `0x2` |\n| load_failed | 1 | `0b1` | `0x1` |\n| normal | 0 | `0b0` | `0x0` |\n| other | 4 | `0b100` | `0x4` |\n| program | 3 | `0b11` | `0x3` |","ref":"BACnet.Protocol.Constants.html#module-constants-program-error"},{"type":"module","title":"Constants: Program Request - BACnet.Protocol.Constants","doc":"Type: `:program_request`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| halt | 3 | `0b11` | `0x3` |\n| load | 1 | `0b1` | `0x1` |\n| ready | 0 | `0b0` | `0x0` |\n| restart | 4 | `0b100` | `0x4` |\n| run | 2 | `0b10` | `0x2` |\n| unload | 5 | `0b101` | `0x5` |","ref":"BACnet.Protocol.Constants.html#module-constants-program-request"},{"type":"module","title":"Constants: Program State - BACnet.Protocol.Constants","doc":"Type: `:program_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| halted | 4 | `0b100` | `0x4` |\n| idle | 0 | `0b0` | `0x0` |\n| loading | 1 | `0b1` | `0x1` |\n| running | 2 | `0b10` | `0x2` |\n| unloading | 5 | `0b101` | `0x5` |\n| waiting | 3 | `0b11` | `0x3` |","ref":"BACnet.Protocol.Constants.html#module-constants-program-state"},{"type":"module","title":"Constants: Property Identifier - BACnet.Protocol.Constants","doc":"Type: `:property_identifier`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| absentee_limit | 244 | `0b11110100` | `0xF4` |\n| accepted_modes | 175 | `0b10101111` | `0xAF` |\n| access_alarm_events | 245 | `0b11110101` | `0xF5` |\n| access_doors | 246 | `0b11110110` | `0xF6` |\n| access_event | 247 | `0b11110111` | `0xF7` |\n| access_event_authentication_factor | 248 | `0b11111000` | `0xF8` |\n| access_event_credential | 249 | `0b11111001` | `0xF9` |\n| access_event_tag | 322 | `0b101000010` | `0x142` |\n| access_event_time | 250 | `0b11111010` | `0xFA` |\n| access_transaction_events | 251 | `0b11111011` | `0xFB` |\n| accompaniment | 252 | `0b11111100` | `0xFC` |\n| accompaniment_time | 253 | `0b11111101` | `0xFD` |\n| ack_required | 1 | `0b1` | `0x1` |\n| acked_transitions | 0 | `0b0` | `0x0` |\n| action | 2 | `0b10` | `0x2` |\n| action_text | 3 | `0b11` | `0x3` |\n| activation_time | 254 | `0b11111110` | `0xFE` |\n| active_authentication_policy | 255 | `0b11111111` | `0xFF` |\n| active_cov_multiple_subscriptions | 481 | `0b111100001` | `0x1E1` |\n| active_cov_subscriptions | 152 | `0b10011000` | `0x98` |\n| active_text | 4 | `0b100` | `0x4` |\n| active_vt_sessions | 5 | `0b101` | `0x5` |\n| actual_shed_level | 212 | `0b11010100` | `0xD4` |\n| adjust_value | 176 | `0b10110000` | `0xB0` |\n| alarm_value | 6 | `0b110` | `0x6` |\n| alarm_values | 7 | `0b111` | `0x7` |\n| align_intervals | 193 | `0b11000001` | `0xC1` |\n| all | 8 | `0b1000` | `0x8` |\n| all_writes_successful | 9 | `0b1001` | `0x9` |\n| allow_group_delay_inhibit | 365 | `0b101101101` | `0x16D` |\n| apdu_length | 399 | `0b110001111` | `0x18F` |\n| apdu_segment_timeout | 10 | `0b1010` | `0xA` |\n| apdu_timeout | 11 | `0b1011` | `0xB` |\n| application_software_version | 12 | `0b1100` | `0xC` |\n| archive | 13 | `0b1101` | `0xD` |\n| assigned_access_rights | 256 | `0b100000000` | `0x100` |\n| assigned_landing_calls | 447 | `0b110111111` | `0x1BF` |\n| attempted_samples | 124 | `0b1111100` | `0x7C` |\n| authentication_factors | 257 | `0b100000001` | `0x101` |\n| authentication_policy_list | 258 | `0b100000010` | `0x102` |\n| authentication_policy_names | 259 | `0b100000011` | `0x103` |\n| authentication_status | 260 | `0b100000100` | `0x104` |\n| authorization_exemptions | 364 | `0b101101100` | `0x16C` |\n| authorization_mode | 261 | `0b100000101` | `0x105` |\n| auto_slave_discovery | 169 | `0b10101001` | `0xA9` |\n| average_value | 125 | `0b1111101` | `0x7D` |\n| backup_and_restore_state | 338 | `0b101010010` | `0x152` |\n| backup_failure_timeout | 153 | `0b10011001` | `0x99` |\n| backup_preparation_time | 339 | `0b101010011` | `0x153` |\n| bacnet_ip_global_address | 407 | `0b110010111` | `0x197` |\n| bacnet_ip_mode | 408 | `0b110011000` | `0x198` |\n| bacnet_ip_multicast_address | 409 | `0b110011001` | `0x199` |\n| bacnet_ip_nat_traversal | 410 | `0b110011010` | `0x19A` |\n| bacnet_ip_udp_port | 412 | `0b110011100` | `0x19C` |\n| bacnet_ipv6_mode | 435 | `0b110110011` | `0x1B3` |\n| bacnet_ipv6_multicast_address | 440 | `0b110111000` | `0x1B8` |\n| bacnet_ipv6_udp_port | 438 | `0b110110110` | `0x1B6` |\n| bbmd_accept_fd_registrations | 413 | `0b110011101` | `0x19D` |\n| bbmd_broadcast_distribution_table | 414 | `0b110011110` | `0x19E` |\n| bbmd_foreign_device_table | 415 | `0b110011111` | `0x19F` |\n| belongs_to | 262 | `0b100000110` | `0x106` |\n| bias | 14 | `0b1110` | `0xE` |\n| bit_mask | 342 | `0b101010110` | `0x156` |\n| bit_text | 343 | `0b101010111` | `0x157` |\n| blink_warn_enable | 373 | `0b101110101` | `0x175` |\n| buffer_size | 126 | `0b1111110` | `0x7E` |\n| car_assigned_direction | 448 | `0b111000000` | `0x1C0` |\n| car_door_command | 449 | `0b111000001` | `0x1C1` |\n| car_door_status | 450 | `0b111000010` | `0x1C2` |\n| car_door_text | 451 | `0b111000011` | `0x1C3` |\n| car_door_zone | 452 | `0b111000100` | `0x1C4` |\n| car_drive_status | 453 | `0b111000101` | `0x1C5` |\n| car_load | 454 | `0b111000110` | `0x1C6` |\n| car_load_units | 455 | `0b111000111` | `0x1C7` |\n| car_mode | 456 | `0b111001000` | `0x1C8` |\n| car_moving_direction | 457 | `0b111001001` | `0x1C9` |\n| car_position | 458 | `0b111001010` | `0x1CA` |\n| change_of_state_count | 15 | `0b1111` | `0xF` |\n| change_of_state_time | 16 | `0b10000` | `0x10` |\n| changes_pending | 416 | `0b110100000` | `0x1A0` |\n| channel_number | 366 | `0b101101110` | `0x16E` |\n| client_cov_increment | 127 | `0b1111111` | `0x7F` |\n| command | 417 | `0b110100001` | `0x1A1` |\n| command_time_array | 430 | `0b110101110` | `0x1AE` |\n| configuration_files | 154 | `0b10011010` | `0x9A` |\n| control_groups | 367 | `0b101101111` | `0x16F` |\n| controlled_variable_reference | 19 | `0b10011` | `0x13` |\n| controlled_variable_units | 20 | `0b10100` | `0x14` |\n| controlled_variable_value | 21 | `0b10101` | `0x15` |\n| count | 177 | `0b10110001` | `0xB1` |\n| count_before_change | 178 | `0b10110010` | `0xB2` |\n| count_change_time | 179 | `0b10110011` | `0xB3` |\n| cov_increment | 22 | `0b10110` | `0x16` |\n| cov_period | 180 | `0b10110100` | `0xB4` |\n| cov_resubscription_interval | 128 | `0b10000000` | `0x80` |\n| covu_period | 349 | `0b101011101` | `0x15D` |\n| covu_recipients | 350 | `0b101011110` | `0x15E` |\n| credential_disable | 263 | `0b100000111` | `0x107` |\n| credential_status | 264 | `0b100001000` | `0x108` |\n| credentials | 265 | `0b100001001` | `0x109` |\n| credentials_in_zone | 266 | `0b100001010` | `0x10A` |\n| current_command_priority | 431 | `0b110101111` | `0x1AF` |\n| database_revision | 155 | `0b10011011` | `0x9B` |\n| date_list | 23 | `0b10111` | `0x17` |\n| daylight_savings_status | 24 | `0b11000` | `0x18` |\n| days_remaining | 267 | `0b100001011` | `0x10B` |\n| deadband | 25 | `0b11001` | `0x19` |\n| default_fade_time | 374 | `0b101110110` | `0x176` |\n| default_ramp_rate | 375 | `0b101110111` | `0x177` |\n| default_step_increment | 376 | `0b101111000` | `0x178` |\n| default_subordinate_relationship | 490 | `0b111101010` | `0x1EA` |\n| default_timeout | 393 | `0b110001001` | `0x189` |\n| deployed_profile_location | 484 | `0b111100100` | `0x1E4` |\n| derivative_constant | 26 | `0b11010` | `0x1A` |\n| derivative_constant_units | 27 | `0b11011` | `0x1B` |\n| description | 28 | `0b11100` | `0x1C` |\n| description_of_halt | 29 | `0b11101` | `0x1D` |\n| device_address_binding | 30 | `0b11110` | `0x1E` |\n| device_type | 31 | `0b11111` | `0x1F` |\n| direct_reading | 156 | `0b10011100` | `0x9C` |\n| distribution_key_revision | 328 | `0b101001000` | `0x148` |\n| do_not_hide | 329 | `0b101001001` | `0x149` |\n| door_alarm_state | 226 | `0b11100010` | `0xE2` |\n| door_extended_pulse_time | 227 | `0b11100011` | `0xE3` |\n| door_members | 228 | `0b11100100` | `0xE4` |\n| door_open_too_long_time | 229 | `0b11100101` | `0xE5` |\n| door_pulse_time | 230 | `0b11100110` | `0xE6` |\n| door_status | 231 | `0b11100111` | `0xE7` |\n| door_unlock_delay_time | 232 | `0b11101000` | `0xE8` |\n| duty_window | 213 | `0b11010101` | `0xD5` |\n| effective_period | 32 | `0b100000` | `0x20` |\n| egress_active | 386 | `0b110000010` | `0x182` |\n| egress_time | 377 | `0b101111001` | `0x179` |\n| elapsed_active_time | 33 | `0b100001` | `0x21` |\n| elevator_group | 459 | `0b111001011` | `0x1CB` |\n| enable | 133 | `0b10000101` | `0x85` |\n| energy_meter | 460 | `0b111001100` | `0x1CC` |\n| energy_meter_ref | 461 | `0b111001101` | `0x1CD` |\n| entry_points | 268 | `0b100001100` | `0x10C` |\n| error_limit | 34 | `0b100010` | `0x22` |\n| escalator_mode | 462 | `0b111001110` | `0x1CE` |\n| event_algorithm_inhibit | 354 | `0b101100010` | `0x162` |\n| event_algorithm_inhibit_ref | 355 | `0b101100011` | `0x163` |\n| event_detection_enable | 353 | `0b101100001` | `0x161` |\n| event_enable | 35 | `0b100011` | `0x23` |\n| event_message_texts | 351 | `0b101011111` | `0x15F` |\n| event_message_texts_config | 352 | `0b101100000` | `0x160` |\n| event_parameters | 83 | `0b1010011` | `0x53` |\n| event_state | 36 | `0b100100` | `0x24` |\n| event_timestamps | 130 | `0b10000010` | `0x82` |\n| event_type | 37 | `0b100101` | `0x25` |\n| exception_schedule | 38 | `0b100110` | `0x26` |\n| execution_delay | 368 | `0b101110000` | `0x170` |\n| exit_points | 269 | `0b100001101` | `0x10D` |\n| expected_shed_level | 214 | `0b11010110` | `0xD6` |\n| expiration_time | 270 | `0b100001110` | `0x10E` |\n| extended_time_enable | 271 | `0b100001111` | `0x10F` |\n| failed_attempt_events | 272 | `0b100010000` | `0x110` |\n| failed_attempts | 273 | `0b100010001` | `0x111` |\n| failed_attempts_time | 274 | `0b100010010` | `0x112` |\n| fault_high_limit | 388 | `0b110000100` | `0x184` |\n| fault_low_limit | 389 | `0b110000101` | `0x185` |\n| fault_parameters | 358 | `0b101100110` | `0x166` |\n| fault_signals | 463 | `0b111001111` | `0x1CF` |\n| fault_type | 359 | `0b101100111` | `0x167` |\n| fault_values | 39 | `0b100111` | `0x27` |\n| fd_bbmd_address | 418 | `0b110100010` | `0x1A2` |\n| fd_subscription_lifetime | 419 | `0b110100011` | `0x1A3` |\n| feedback_value | 40 | `0b101000` | `0x28` |\n| file_access_method | 41 | `0b101001` | `0x29` |\n| file_size | 42 | `0b101010` | `0x2A` |\n| file_type | 43 | `0b101011` | `0x2B` |\n| firmware_revision | 44 | `0b101100` | `0x2C` |\n| floor_text | 464 | `0b111010000` | `0x1D0` |\n| full_duty_baseline | 215 | `0b11010111` | `0xD7` |\n| global_identifier | 323 | `0b101000011` | `0x143` |\n| group_id | 465 | `0b111010001` | `0x1D1` |\n| group_member_names | 346 | `0b101011010` | `0x15A` |\n| group_members | 345 | `0b101011001` | `0x159` |\n| group_mode | 467 | `0b111010011` | `0x1D3` |\n| high_limit | 45 | `0b101101` | `0x2D` |\n| higher_deck | 468 | `0b111010100` | `0x1D4` |\n| in_process | 47 | `0b101111` | `0x2F` |\n| in_progress | 378 | `0b101111010` | `0x17A` |\n| inactive_text | 46 | `0b101110` | `0x2E` |\n| initial_timeout | 394 | `0b110001010` | `0x18A` |\n| input_reference | 181 | `0b10110101` | `0xB5` |\n| installation_id | 469 | `0b111010101` | `0x1D5` |\n| instance_of | 48 | `0b110000` | `0x30` |\n| instantaneous_power | 379 | `0b101111011` | `0x17B` |\n| integral_constant | 49 | `0b110001` | `0x31` |\n| integral_constant_units | 50 | `0b110010` | `0x32` |\n| interface_value | 387 | `0b110000011` | `0x183` |\n| interval_offset | 195 | `0b11000011` | `0xC3` |\n| ip_address | 400 | `0b110010000` | `0x190` |\n| ip_default_gateway | 401 | `0b110010001` | `0x191` |\n| ip_dhcp_enable | 402 | `0b110010010` | `0x192` |\n| ip_dhcp_lease_time | 403 | `0b110010011` | `0x193` |\n| ip_dhcp_lease_time_remaining | 404 | `0b110010100` | `0x194` |\n| ip_dhcp_server | 405 | `0b110010101` | `0x195` |\n| ip_dns_server | 406 | `0b110010110` | `0x196` |\n| ip_subnet_mask | 411 | `0b110011011` | `0x19B` |\n| ipv6_address | 436 | `0b110110100` | `0x1B4` |\n| ipv6_auto_addressing_enable | 442 | `0b110111010` | `0x1BA` |\n| ipv6_default_gateway | 439 | `0b110110111` | `0x1B7` |\n| ipv6_dhcp_lease_time | 443 | `0b110111011` | `0x1BB` |\n| ipv6_dhcp_lease_time_remaining | 444 | `0b110111100` | `0x1BC` |\n| ipv6_dhcp_server | 445 | `0b110111101` | `0x1BD` |\n| ipv6_dns_server | 441 | `0b110111001` | `0x1B9` |\n| ipv6_prefix_length | 437 | `0b110110101` | `0x1B5` |\n| ipv6_zone_index | 446 | `0b110111110` | `0x1BE` |\n| is_utc | 344 | `0b101011000` | `0x158` |\n| key_sets | 330 | `0b101001010` | `0x14A` |\n| landing_call_control | 471 | `0b111010111` | `0x1D7` |\n| landing_calls | 470 | `0b111010110` | `0x1D6` |\n| landing_door_status | 472 | `0b111011000` | `0x1D8` |\n| last_access_event | 275 | `0b100010011` | `0x113` |\n| last_access_point | 276 | `0b100010100` | `0x114` |\n| last_command_time | 432 | `0b110110000` | `0x1B0` |\n| last_credential_added | 277 | `0b100010101` | `0x115` |\n| last_credential_added_time | 278 | `0b100010110` | `0x116` |\n| last_credential_removed | 279 | `0b100010111` | `0x117` |\n| last_credential_removed_time | 280 | `0b100011000` | `0x118` |\n| last_key_server | 331 | `0b101001011` | `0x14B` |\n| last_notify_record | 173 | `0b10101101` | `0xAD` |\n| last_priority | 369 | `0b101110001` | `0x171` |\n| last_restart_reason | 196 | `0b11000100` | `0xC4` |\n| last_restore_time | 157 | `0b10011101` | `0x9D` |\n| last_state_change | 395 | `0b110001011` | `0x18B` |\n| last_use_time | 281 | `0b100011001` | `0x119` |\n| life_safety_alarm_values | 166 | `0b10100110` | `0xA6` |\n| lighting_command | 380 | `0b101111100` | `0x17C` |\n| lighting_command_default_priority | 381 | `0b101111101` | `0x17D` |\n| limit_enable | 52 | `0b110100` | `0x34` |\n| limit_monitoring_interval | 182 | `0b10110110` | `0xB6` |\n| link_speed | 420 | `0b110100100` | `0x1A4` |\n| link_speed_autonegotiate | 422 | `0b110100110` | `0x1A6` |\n| link_speeds | 421 | `0b110100101` | `0x1A5` |\n| list_of_group_members | 53 | `0b110101` | `0x35` |\n| list_of_object_property_references | 54 | `0b110110` | `0x36` |\n| local_date | 56 | `0b111000` | `0x38` |\n| local_forwarding_only | 360 | `0b101101000` | `0x168` |\n| local_time | 57 | `0b111001` | `0x39` |\n| location | 58 | `0b111010` | `0x3A` |\n| lock_status | 233 | `0b11101001` | `0xE9` |\n| lockout | 282 | `0b100011010` | `0x11A` |\n| lockout_relinquish_time | 283 | `0b100011011` | `0x11B` |\n| log_buffer | 131 | `0b10000011` | `0x83` |\n| log_device_object_property | 132 | `0b10000100` | `0x84` |\n| log_interval | 134 | `0b10000110` | `0x86` |\n| logging_object | 183 | `0b10110111` | `0xB7` |\n| logging_record | 184 | `0b10111000` | `0xB8` |\n| logging_type | 197 | `0b11000101` | `0xC5` |\n| low_diff_limit | 390 | `0b110000110` | `0x186` |\n| low_limit | 59 | `0b111011` | `0x3B` |\n| lower_deck | 473 | `0b111011001` | `0x1D9` |\n| mac_address | 423 | `0b110100111` | `0x1A7` |\n| machine_room_id | 474 | `0b111011010` | `0x1DA` |\n| maintenance_required | 158 | `0b10011110` | `0x9E` |\n| making_car_call | 475 | `0b111011011` | `0x1DB` |\n| manipulated_variable_reference | 60 | `0b111100` | `0x3C` |\n| manual_slave_address_binding | 170 | `0b10101010` | `0xAA` |\n| masked_alarm_values | 234 | `0b11101010` | `0xEA` |\n| max_actual_value | 382 | `0b101111110` | `0x17E` |\n| max_apdu_length_accepted | 62 | `0b111110` | `0x3E` |\n| max_failed_attempts | 285 | `0b100011101` | `0x11D` |\n| max_info_frames | 63 | `0b111111` | `0x3F` |\n| max_master | 64 | `0b1000000` | `0x40` |\n| max_output | 61 | `0b111101` | `0x3D` |\n| max_present_value | 65 | `0b1000001` | `0x41` |\n| max_segments_accepted | 167 | `0b10100111` | `0xA7` |\n| max_value | 135 | `0b10000111` | `0x87` |\n| max_value_timestamp | 149 | `0b10010101` | `0x95` |\n| member_of | 159 | `0b10011111` | `0x9F` |\n| member_status_flags | 347 | `0b101011011` | `0x15B` |\n| members | 286 | `0b100011110` | `0x11E` |\n| min_actual_value | 383 | `0b101111111` | `0x17F` |\n| min_off_time | 66 | `0b1000010` | `0x42` |\n| min_on_time | 67 | `0b1000011` | `0x43` |\n| min_output | 68 | `0b1000100` | `0x44` |\n| min_present_value | 69 | `0b1000101` | `0x45` |\n| min_value | 136 | `0b10001000` | `0x88` |\n| min_value_timestamp | 150 | `0b10010110` | `0x96` |\n| mode | 160 | `0b10100000` | `0xA0` |\n| model_name | 70 | `0b1000110` | `0x46` |\n| modification_date | 71 | `0b1000111` | `0x47` |\n| muster_point | 287 | `0b100011111` | `0x11F` |\n| negative_access_rules | 288 | `0b100100000` | `0x120` |\n| network_access_security_policies | 332 | `0b101001100` | `0x14C` |\n| network_interface_name | 424 | `0b110101000` | `0x1A8` |\n| network_number | 425 | `0b110101001` | `0x1A9` |\n| network_number_quality | 426 | `0b110101010` | `0x1AA` |\n| network_type | 427 | `0b110101011` | `0x1AB` |\n| next_stopping_floor | 476 | `0b111011100` | `0x1DC` |\n| node_subtype | 207 | `0b11001111` | `0xCF` |\n| node_type | 208 | `0b11010000` | `0xD0` |\n| notification_class | 17 | `0b10001` | `0x11` |\n| notification_threshold | 137 | `0b10001001` | `0x89` |\n| notify_type | 72 | `0b1001000` | `0x48` |\n| number_of_apdu_retries | 73 | `0b1001001` | `0x49` |\n| number_of_authentication_policies | 289 | `0b100100001` | `0x121` |\n| number_of_states | 74 | `0b1001010` | `0x4A` |\n| object_identifier | 75 | `0b1001011` | `0x4B` |\n| object_list | 76 | `0b1001100` | `0x4C` |\n| object_name | 77 | `0b1001101` | `0x4D` |\n| object_property_reference | 78 | `0b1001110` | `0x4E` |\n| object_type | 79 | `0b1001111` | `0x4F` |\n| occupancy_count | 290 | `0b100100010` | `0x122` |\n| occupancy_count_adjust | 291 | `0b100100011` | `0x123` |\n| occupancy_count_enable | 292 | `0b100100100` | `0x124` |\n| occupancy_lower_limit | 294 | `0b100100110` | `0x126` |\n| occupancy_lower_limit_enforced | 295 | `0b100100111` | `0x127` |\n| occupancy_state | 296 | `0b100101000` | `0x128` |\n| occupancy_upper_limit | 297 | `0b100101001` | `0x129` |\n| occupancy_upper_limit_enforced | 298 | `0b100101010` | `0x12A` |\n| operation_direction | 477 | `0b111011101` | `0x1DD` |\n| operation_expected | 161 | `0b10100001` | `0xA1` |\n| optional | 80 | `0b1010000` | `0x50` |\n| out_of_service | 81 | `0b1010001` | `0x51` |\n| output_units | 82 | `0b1010010` | `0x52` |\n| packet_reorder_time | 333 | `0b101001101` | `0x14D` |\n| passback_mode | 300 | `0b100101100` | `0x12C` |\n| passback_timeout | 301 | `0b100101101` | `0x12D` |\n| passenger_alarm | 478 | `0b111011110` | `0x1DE` |\n| polarity | 84 | `0b1010100` | `0x54` |\n| port_filter | 363 | `0b101101011` | `0x16B` |\n| positive_access_rules | 302 | `0b100101110` | `0x12E` |\n| power | 384 | `0b110000000` | `0x180` |\n| power_mode | 479 | `0b111011111` | `0x1DF` |\n| prescale | 185 | `0b10111001` | `0xB9` |\n| present_value | 85 | `0b1010101` | `0x55` |\n| priority | 86 | `0b1010110` | `0x56` |\n| priority_array | 87 | `0b1010111` | `0x57` |\n| priority_for_writing | 88 | `0b1011000` | `0x58` |\n| process_identifier | 89 | `0b1011001` | `0x59` |\n| process_identifier_filter | 361 | `0b101101001` | `0x169` |\n| profile_location | 485 | `0b111100101` | `0x1E5` |\n| profile_name | 168 | `0b10101000` | `0xA8` |\n| program_change | 90 | `0b1011010` | `0x5A` |\n| program_location | 91 | `0b1011011` | `0x5B` |\n| program_state | 92 | `0b1011100` | `0x5C` |\n| property_list | 371 | `0b101110011` | `0x173` |\n| proportional_constant | 93 | `0b1011101` | `0x5D` |\n| proportional_constant_units | 94 | `0b1011110` | `0x5E` |\n| protocol_level | 482 | `0b111100010` | `0x1E2` |\n| protocol_object_types_supported | 96 | `0b1100000` | `0x60` |\n| protocol_revision | 139 | `0b10001011` | `0x8B` |\n| protocol_services_supported | 97 | `0b1100001` | `0x61` |\n| protocol_version | 98 | `0b1100010` | `0x62` |\n| pulse_rate | 186 | `0b10111010` | `0xBA` |\n| read_only | 99 | `0b1100011` | `0x63` |\n| reason_for_disable | 303 | `0b100101111` | `0x12F` |\n| reason_for_halt | 100 | `0b1100100` | `0x64` |\n| recipient_list | 102 | `0b1100110` | `0x66` |\n| record_count | 141 | `0b10001101` | `0x8D` |\n| records_since_notification | 140 | `0b10001100` | `0x8C` |\n| reference_port | 483 | `0b111100011` | `0x1E3` |\n| registered_car_call | 480 | `0b111100000` | `0x1E0` |\n| reliability | 103 | `0b1100111` | `0x67` |\n| reliability_evaluation_inhibit | 357 | `0b101100101` | `0x165` |\n| relinquish_default | 104 | `0b1101000` | `0x68` |\n| represents | 491 | `0b111101011` | `0x1EB` |\n| requested_shed_level | 218 | `0b11011010` | `0xDA` |\n| requested_update_interval | 348 | `0b101011100` | `0x15C` |\n| required | 105 | `0b1101001` | `0x69` |\n| resolution | 106 | `0b1101010` | `0x6A` |\n| restart_notification_recipients | 202 | `0b11001010` | `0xCA` |\n| restore_completion_time | 340 | `0b101010100` | `0x154` |\n| restore_preparation_time | 341 | `0b101010101` | `0x155` |\n| routing_table | 428 | `0b110101100` | `0x1AC` |\n| scale | 187 | `0b10111011` | `0xBB` |\n| scale_factor | 188 | `0b10111100` | `0xBC` |\n| schedule_default | 174 | `0b10101110` | `0xAE` |\n| secured_status | 235 | `0b11101011` | `0xEB` |\n| security_pdu_timeout | 334 | `0b101001110` | `0x14E` |\n| security_time_window | 335 | `0b101001111` | `0x14F` |\n| segmentation_supported | 107 | `0b1101011` | `0x6B` |\n| serial_number | 372 | `0b101110100` | `0x174` |\n| setpoint | 108 | `0b1101100` | `0x6C` |\n| setpoint_reference | 109 | `0b1101101` | `0x6D` |\n| setting | 162 | `0b10100010` | `0xA2` |\n| shed_duration | 219 | `0b11011011` | `0xDB` |\n| shed_level_descriptions | 220 | `0b11011100` | `0xDC` |\n| shed_levels | 221 | `0b11011101` | `0xDD` |\n| silenced | 163 | `0b10100011` | `0xA3` |\n| slave_address_binding | 171 | `0b10101011` | `0xAB` |\n| slave_proxy_enable | 172 | `0b10101100` | `0xAC` |\n| start_time | 142 | `0b10001110` | `0x8E` |\n| state_change_values | 396 | `0b110001100` | `0x18C` |\n| state_description | 222 | `0b11011110` | `0xDE` |\n| state_text | 110 | `0b1101110` | `0x6E` |\n| status_flags | 111 | `0b1101111` | `0x6F` |\n| stop_time | 143 | `0b10001111` | `0x8F` |\n| stop_when_full | 144 | `0b10010000` | `0x90` |\n| strike_count | 391 | `0b110000111` | `0x187` |\n| structured_object_list | 209 | `0b11010001` | `0xD1` |\n| subordinate_annotations | 210 | `0b11010010` | `0xD2` |\n| subordinate_list | 211 | `0b11010011` | `0xD3` |\n| subordinate_node_types | 487 | `0b111100111` | `0x1E7` |\n| subordinate_relationships | 489 | `0b111101001` | `0x1E9` |\n| subordinate_tags | 488 | `0b111101000` | `0x1E8` |\n| subscribed_recipients | 362 | `0b101101010` | `0x16A` |\n| supported_format_classes | 305 | `0b100110001` | `0x131` |\n| supported_formats | 304 | `0b100110000` | `0x130` |\n| supported_security_algorithms | 336 | `0b101010000` | `0x150` |\n| system_status | 112 | `0b1110000` | `0x70` |\n| tags | 486 | `0b111100110` | `0x1E6` |\n| threat_authority | 306 | `0b100110010` | `0x132` |\n| threat_level | 307 | `0b100110011` | `0x133` |\n| time_delay | 113 | `0b1110001` | `0x71` |\n| time_delay_normal | 356 | `0b101100100` | `0x164` |\n| time_of_active_time_reset | 114 | `0b1110010` | `0x72` |\n| time_of_device_restart | 203 | `0b11001011` | `0xCB` |\n| time_of_state_count_reset | 115 | `0b1110011` | `0x73` |\n| time_of_strike_count_reset | 392 | `0b110001000` | `0x188` |\n| time_synchronization_interval | 204 | `0b11001100` | `0xCC` |\n| time_synchronization_recipients | 116 | `0b1110100` | `0x74` |\n| timer_running | 397 | `0b110001101` | `0x18D` |\n| timer_state | 398 | `0b110001110` | `0x18E` |\n| total_record_count | 145 | `0b10010001` | `0x91` |\n| trace_flag | 308 | `0b100110100` | `0x134` |\n| tracking_value | 164 | `0b10100100` | `0xA4` |\n| transaction_notification_class | 309 | `0b100110101` | `0x135` |\n| transition | 385 | `0b110000001` | `0x181` |\n| trigger | 205 | `0b11001101` | `0xCD` |\n| units | 117 | `0b1110101` | `0x75` |\n| update_interval | 118 | `0b1110110` | `0x76` |\n| update_key_set_timeout | 337 | `0b101010001` | `0x151` |\n| update_time | 189 | `0b10111101` | `0xBD` |\n| user_external_identifier | 310 | `0b100110110` | `0x136` |\n| user_information_reference | 311 | `0b100110111` | `0x137` |\n| user_name | 317 | `0b100111101` | `0x13D` |\n| user_type | 318 | `0b100111110` | `0x13E` |\n| uses_remaining | 319 | `0b100111111` | `0x13F` |\n| utc_offset | 119 | `0b1110111` | `0x77` |\n| utc_time_synchronization_recipients | 206 | `0b11001110` | `0xCE` |\n| valid_samples | 146 | `0b10010010` | `0x92` |\n| value_before_change | 190 | `0b10111110` | `0xBE` |\n| value_change_time | 192 | `0b11000000` | `0xC0` |\n| value_set | 191 | `0b10111111` | `0xBF` |\n| value_source | 433 | `0b110110001` | `0x1B1` |\n| value_source_array | 434 | `0b110110010` | `0x1B2` |\n| variance_value | 151 | `0b10010111` | `0x97` |\n| vendor_identifier | 120 | `0b1111000` | `0x78` |\n| vendor_name | 121 | `0b1111001` | `0x79` |\n| verification_time | 326 | `0b101000110` | `0x146` |\n| virtual_mac_address_table | 429 | `0b110101101` | `0x1AD` |\n| vt_classes_supported | 122 | `0b1111010` | `0x7A` |\n| weekly_schedule | 123 | `0b1111011` | `0x7B` |\n| window_interval | 147 | `0b10010011` | `0x93` |\n| window_samples | 148 | `0b10010100` | `0x94` |\n| write_status | 370 | `0b101110010` | `0x172` |\n| zone_from | 320 | `0b101000000` | `0x140` |\n| zone_members | 165 | `0b10100101` | `0xA5` |\n| zone_to | 321 | `0b101000001` | `0x141` |","ref":"BACnet.Protocol.Constants.html#module-constants-property-identifier"},{"type":"module","title":"Constants: Property State - BACnet.Protocol.Constants","doc":"Property State (ASHRAE 135 - 21 FORMAL DESCRIPTION OF APPLICATION PROTOCOL DATA UNITS)\n\nType: `:property_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| access_credential_disable | 33 | `0b100001` | `0x21` |\n| access_credential_disable_reason | 32 | `0b100000` | `0x20` |\n| access_event | 30 | `0b11110` | `0x1E` |\n| action | 16 | `0b10000` | `0x10` |\n| authentication_status | 34 | `0b100010` | `0x22` |\n| backup_state | 36 | `0b100100` | `0x24` |\n| bacnet_ip_mode | 45 | `0b101101` | `0x2D` |\n| binary_lighting_value | 42 | `0b101010` | `0x2A` |\n| binary_value | 1 | `0b1` | `0x1` |\n| boolean_value | 0 | `0b0` | `0x0` |\n| door_alarm_state | 15 | `0b1111` | `0xF` |\n| door_secured_status | 17 | `0b10001` | `0x11` |\n| door_status | 18 | `0b10010` | `0x12` |\n| door_value | 19 | `0b10011` | `0x13` |\n| escalator_fault | 50 | `0b110010` | `0x32` |\n| escalator_mode | 51 | `0b110011` | `0x33` |\n| escalator_operation_direction | 49 | `0b110001` | `0x31` |\n| event_type | 2 | `0b10` | `0x2` |\n| extended_value | 63 | `0b111111` | `0x3F` |\n| file_access_method | 20 | `0b10100` | `0x14` |\n| integer_value | 41 | `0b101001` | `0x29` |\n| life_safety_mode | 12 | `0b1100` | `0xC` |\n| life_safety_operation | 22 | `0b10110` | `0x16` |\n| life_safety_state | 13 | `0b1101` | `0xD` |\n| lift_car_direction | 52 | `0b110100` | `0x34` |\n| lift_car_door_command | 53 | `0b110101` | `0x35` |\n| lift_car_drive_status | 54 | `0b110110` | `0x36` |\n| lift_car_mode | 55 | `0b110111` | `0x37` |\n| lift_fault | 57 | `0b111001` | `0x39` |\n| lift_group_mode | 56 | `0b111000` | `0x38` |\n| lighting_in_progress | 38 | `0b100110` | `0x26` |\n| lighting_operation | 39 | `0b100111` | `0x27` |\n| lighting_transition | 40 | `0b101000` | `0x28` |\n| lock_status | 21 | `0b10101` | `0x15` |\n| maintenance | 23 | `0b10111` | `0x17` |\n| network_number_quality | 48 | `0b110000` | `0x30` |\n| network_port_command | 46 | `0b101110` | `0x2E` |\n| network_type | 47 | `0b101111` | `0x2F` |\n| node_type | 24 | `0b11000` | `0x18` |\n| notify_type | 25 | `0b11001` | `0x19` |\n| polarity | 3 | `0b11` | `0x3` |\n| program_change | 4 | `0b100` | `0x4` |\n| program_state | 5 | `0b101` | `0x5` |\n| protocol_level | 58 | `0b111010` | `0x3A` |\n| reason_for_halt | 6 | `0b110` | `0x6` |\n| reliability | 7 | `0b111` | `0x7` |\n| restart_reason | 14 | `0b1110` | `0xE` |\n| security_level | 26 | `0b11010` | `0x1A` |\n| shed_state | 27 | `0b11011` | `0x1B` |\n| silenced_state | 28 | `0b11100` | `0x1C` |\n| state | 8 | `0b1000` | `0x8` |\n| system_status | 9 | `0b1001` | `0x9` |\n| timer_state | 43 | `0b101011` | `0x2B` |\n| timer_transition | 44 | `0b101100` | `0x2C` |\n| units | 10 | `0b1010` | `0xA` |\n| unsigned_value | 11 | `0b1011` | `0xB` |\n| write_status | 37 | `0b100101` | `0x25` |\n| zone_occupancy_state | 31 | `0b11111` | `0x1F` |","ref":"BACnet.Protocol.Constants.html#module-constants-property-state"},{"type":"module","title":"Constants: Protocol Level - BACnet.Protocol.Constants","doc":"Type: `:protocol_level`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| bacnet_application | 2 | `0b10` | `0x2` |\n| non_bacnet_application | 3 | `0b11` | `0x3` |\n| physical | 0 | `0b0` | `0x0` |\n| protocol | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-protocol-level"},{"type":"module","title":"Constants: Protocol Revision - BACnet.Protocol.Constants","doc":"When creating BACnet objects, the designated revision can\nbe chosen from the constants. The designated revision decides\nwhich properties are required. Optional properties are regardless\nof the revision available.\n\nThe following revisions are supported (to be):\n- Revision 14 (135-2012)\n- Revision 19 (135-2016)\n- Revision 22 (135-2022)\n\nThe default BACnet Revision is 14 (2012).\n\n\nType: `:protocol_revision`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| default | revision_14 | - | - |\n| revision_14 | 14 | `0b1110` | `0xE` |","ref":"BACnet.Protocol.Constants.html#module-constants-protocol-revision"},{"type":"module","title":"Constants: Reinitialized State - BACnet.Protocol.Constants","doc":"Reinitialized State (ASHRAE 135 - 16.4.1.1.1 Reinitialized State of Device)\n\nType: `:reinitialized_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| abortrestore | 6 | `0b110` | `0x6` |\n| activate_changes | 7 | `0b111` | `0x7` |\n| coldstart | 0 | `0b0` | `0x0` |\n| endbackup | 3 | `0b11` | `0x3` |\n| endrestore | 5 | `0b101` | `0x5` |\n| startbackup | 2 | `0b10` | `0x2` |\n| startrestore | 4 | `0b100` | `0x4` |\n| warmstart | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-reinitialized-state"},{"type":"module","title":"Constants: Reject Reason - BACnet.Protocol.Constants","doc":"Type: `:reject_reason`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| buffer_overflow | 1 | `0b1` | `0x1` |\n| inconsistent_parameters | 2 | `0b10` | `0x2` |\n| invalid_parameter_data_type | 3 | `0b11` | `0x3` |\n| invalid_tag | 4 | `0b100` | `0x4` |\n| missing_required_parameter | 5 | `0b101` | `0x5` |\n| other | 0 | `0b0` | `0x0` |\n| parameter_out_of_range | 6 | `0b110` | `0x6` |\n| too_many_arguments | 7 | `0b111` | `0x7` |\n| undefined_enumeration | 8 | `0b1000` | `0x8` |\n| unrecognized_service | 9 | `0b1001` | `0x9` |","ref":"BACnet.Protocol.Constants.html#module-constants-reject-reason"},{"type":"module","title":"Constants: Relationship - BACnet.Protocol.Constants","doc":"Type: `:relationship`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| adjusted_by | 9 | `0b1001` | `0x9` |\n| adjusts | 8 | `0b1000` | `0x8` |\n| commanded_by | 7 | `0b111` | `0x7` |\n| commands | 6 | `0b110` | `0x6` |\n| contained_by | 3 | `0b11` | `0x3` |\n| contains | 2 | `0b10` | `0x2` |\n| default | 1 | `0b1` | `0x1` |\n| egress | 11 | `0b1011` | `0xB` |\n| ingress | 10 | `0b1010` | `0xA` |\n| receives_air | 13 | `0b1101` | `0xD` |\n| receives_cool_air | 17 | `0b10001` | `0x11` |\n| receives_cool_water | 27 | `0b11011` | `0x1B` |\n| receives_gas | 21 | `0b10101` | `0x15` |\n| receives_hot_air | 15 | `0b1111` | `0xF` |\n| receives_hot_water | 25 | `0b11001` | `0x19` |\n| receives_power | 19 | `0b10011` | `0x13` |\n| receives_steam | 29 | `0b11101` | `0x1D` |\n| receives_water | 23 | `0b10111` | `0x17` |\n| supplies_air | 12 | `0b1100` | `0xC` |\n| supplies_cool_air | 16 | `0b10000` | `0x10` |\n| supplies_cool_water | 26 | `0b11010` | `0x1A` |\n| supplies_gas | 20 | `0b10100` | `0x14` |\n| supplies_hot_air | 14 | `0b1110` | `0xE` |\n| supplies_hot_water | 24 | `0b11000` | `0x18` |\n| supplies_power | 18 | `0b10010` | `0x12` |\n| supplies_steam | 28 | `0b11100` | `0x1C` |\n| supplies_water | 22 | `0b10110` | `0x16` |\n| unknown | 0 | `0b0` | `0x0` |\n| used_by | 5 | `0b101` | `0x5` |\n| uses | 4 | `0b100` | `0x4` |","ref":"BACnet.Protocol.Constants.html#module-constants-relationship"},{"type":"module","title":"Constants: Reliability - BACnet.Protocol.Constants","doc":"Type: `:reliability`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| activation_failure | 17 | `0b10001` | `0x11` |\n| communication_failure | 12 | `0b1100` | `0xC` |\n| configuration_error | 10 | `0b1010` | `0xA` |\n| faults_listed | 23 | `0b10111` | `0x17` |\n| lamp_failure | 16 | `0b10000` | `0x10` |\n| member_fault | 13 | `0b1101` | `0xD` |\n| monitored_object_fault | 14 | `0b1110` | `0xE` |\n| multi_state_fault | 9 | `0b1001` | `0x9` |\n| no_fault_detected | 0 | `0b0` | `0x0` |\n| no_output | 6 | `0b110` | `0x6` |\n| no_sensor | 1 | `0b1` | `0x1` |\n| open_loop | 4 | `0b100` | `0x4` |\n| over_range | 2 | `0b10` | `0x2` |\n| process_error | 8 | `0b1000` | `0x8` |\n| proprietary_command_failure | 22 | `0b10110` | `0x16` |\n| referenced_object_fault | 24 | `0b11000` | `0x18` |\n| renew_dhcp_failure | 18 | `0b10010` | `0x12` |\n| renew_fd_registration_failure | 19 | `0b10011` | `0x13` |\n| restart_auto_negotiation_failure | 20 | `0b10100` | `0x14` |\n| restart_failure | 21 | `0b10101` | `0x15` |\n| shorted_loop | 5 | `0b101` | `0x5` |\n| tripped | 15 | `0b1111` | `0xF` |\n| under_range | 3 | `0b11` | `0x3` |\n| unreliable_other | 7 | `0b111` | `0x7` |","ref":"BACnet.Protocol.Constants.html#module-constants-reliability"},{"type":"module","title":"Constants: Restart Reason - BACnet.Protocol.Constants","doc":"Type: `:restart_reason`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| activate_changes | 8 | `0b1000` | `0x8` |\n| coldstart | 1 | `0b1` | `0x1` |\n| detected_power_lost | 3 | `0b11` | `0x3` |\n| detected_powered_off | 4 | `0b100` | `0x4` |\n| hardware_watchdog | 5 | `0b101` | `0x5` |\n| software_watchdog | 6 | `0b110` | `0x6` |\n| suspended | 7 | `0b111` | `0x7` |\n| unknown | 0 | `0b0` | `0x0` |\n| warmstart | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-restart-reason"},{"type":"module","title":"Constants: Result Flag - BACnet.Protocol.Constants","doc":"Type: `:result_flag`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| first_item | 0 | `0b0` | `0x0` |\n| last_item | 1 | `0b1` | `0x1` |\n| more_items | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-result-flag"},{"type":"module","title":"Constants: Security Level - BACnet.Protocol.Constants","doc":"Type: `:security_level`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| encrypted | 3 | `0b11` | `0x3` |\n| encrypted_end_to_end | 5 | `0b101` | `0x5` |\n| incapable | 0 | `0b0` | `0x0` |\n| plain | 1 | `0b1` | `0x1` |\n| signed | 2 | `0b10` | `0x2` |\n| signed_end_to_end | 4 | `0b100` | `0x4` |","ref":"BACnet.Protocol.Constants.html#module-constants-security-level"},{"type":"module","title":"Constants: Security Policy - BACnet.Protocol.Constants","doc":"Type: `:security_policy`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| encrypted_trusted | 3 | `0b11` | `0x3` |\n| plain_non_trusted | 0 | `0b0` | `0x0` |\n| plain_trusted | 1 | `0b1` | `0x1` |\n| signed_trusted | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-security-policy"},{"type":"module","title":"Constants: Segmentation - BACnet.Protocol.Constants","doc":"Type: `:segmentation`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| no_segmentation | 3 | `0b11` | `0x3` |\n| segmented_both | 0 | `0b0` | `0x0` |\n| segmented_receive | 2 | `0b10` | `0x2` |\n| segmented_transmit | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-segmentation"},{"type":"module","title":"Constants: Services Supported - BACnet.Protocol.Constants","doc":"Type: `:services_supported`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| acknowledge_alarm | 0 | `0b0` | `0x0` |\n| add_list_element | 8 | `0b1000` | `0x8` |\n| atomic_read_file | 6 | `0b110` | `0x6` |\n| atomic_write_file | 7 | `0b111` | `0x7` |\n| authenticate | 24 | `0b11000` | `0x18` |\n| confirmed_cov_notification | 1 | `0b1` | `0x1` |\n| confirmed_cov_notification_multiple | 42 | `0b101010` | `0x2A` |\n| confirmed_event_notification | 2 | `0b10` | `0x2` |\n| confirmed_private_transfer | 18 | `0b10010` | `0x12` |\n| confirmed_text_message | 19 | `0b10011` | `0x13` |\n| create_object | 10 | `0b1010` | `0xA` |\n| delete_object | 11 | `0b1011` | `0xB` |\n| device_communication_control | 17 | `0b10001` | `0x11` |\n| get_alarm_summary | 3 | `0b11` | `0x3` |\n| get_enrollment_summary | 4 | `0b100` | `0x4` |\n| get_event_information | 39 | `0b100111` | `0x27` |\n| i_am | 26 | `0b11010` | `0x1A` |\n| i_have | 27 | `0b11011` | `0x1B` |\n| life_safety_operation | 37 | `0b100101` | `0x25` |\n| read_property | 12 | `0b1100` | `0xC` |\n| read_property_conditional | 13 | `0b1101` | `0xD` |\n| read_property_multiple | 14 | `0b1110` | `0xE` |\n| read_range | 35 | `0b100011` | `0x23` |\n| reinitialize_device | 20 | `0b10100` | `0x14` |\n| remove_list_element | 9 | `0b1001` | `0x9` |\n| request_key | 25 | `0b11001` | `0x19` |\n| subscribe_cov | 5 | `0b101` | `0x5` |\n| subscribe_cov_property | 38 | `0b100110` | `0x26` |\n| subscribe_cov_property_multiple | 41 | `0b101001` | `0x29` |\n| time_synchronization | 32 | `0b100000` | `0x20` |\n| unconfirmed_cov_notification | 28 | `0b11100` | `0x1C` |\n| unconfirmed_cov_notification_multiple | 43 | `0b101011` | `0x2B` |\n| unconfirmed_event_notification | 29 | `0b11101` | `0x1D` |\n| unconfirmed_private_transfer | 30 | `0b11110` | `0x1E` |\n| unconfirmed_text_message | 31 | `0b11111` | `0x1F` |\n| utc_time_synchronization | 36 | `0b100100` | `0x24` |\n| vt_close | 22 | `0b10110` | `0x16` |\n| vt_data | 23 | `0b10111` | `0x17` |\n| vt_open | 21 | `0b10101` | `0x15` |\n| who_has | 33 | `0b100001` | `0x21` |\n| who_is | 34 | `0b100010` | `0x22` |\n| write_group | 40 | `0b101000` | `0x28` |\n| write_property | 15 | `0b1111` | `0xF` |\n| write_property_multiple | 16 | `0b10000` | `0x10` |","ref":"BACnet.Protocol.Constants.html#module-constants-services-supported"},{"type":"module","title":"Constants: Shed State - BACnet.Protocol.Constants","doc":"Type: `:shed_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| shed_compliant | 2 | `0b10` | `0x2` |\n| shed_inactive | 0 | `0b0` | `0x0` |\n| shed_non_compliant | 3 | `0b11` | `0x3` |\n| shed_request_pending | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-shed-state"},{"type":"module","title":"Constants: Silenced State - BACnet.Protocol.Constants","doc":"Type: `:silenced_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| all_silenced | 3 | `0b11` | `0x3` |\n| audible_silenced | 1 | `0b1` | `0x1` |\n| unsilenced | 0 | `0b0` | `0x0` |\n| visible_silenced | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-silenced-state"},{"type":"module","title":"Constants: Status Flag - BACnet.Protocol.Constants","doc":"Type: `:status_flag`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| fault | 1 | `0b1` | `0x1` |\n| in_alarm | 0 | `0b0` | `0x0` |\n| out_of_service | 3 | `0b11` | `0x3` |\n| overridden | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-status-flag"},{"type":"module","title":"Constants: Timer State - BACnet.Protocol.Constants","doc":"Type: `:timer_state`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| expired | 2 | `0b10` | `0x2` |\n| idle | 0 | `0b0` | `0x0` |\n| running | 1 | `0b1` | `0x1` |","ref":"BACnet.Protocol.Constants.html#module-constants-timer-state"},{"type":"module","title":"Constants: Timer Transition - BACnet.Protocol.Constants","doc":"Type: `:timer_transition`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| expired_to_idle | 6 | `0b110` | `0x6` |\n| expired_to_running | 7 | `0b111` | `0x7` |\n| forced_to_expired | 5 | `0b101` | `0x5` |\n| idle_to_running | 1 | `0b1` | `0x1` |\n| none | 0 | `0b0` | `0x0` |\n| running_to_expired | 4 | `0b100` | `0x4` |\n| running_to_idle | 2 | `0b10` | `0x2` |\n| running_to_running | 3 | `0b11` | `0x3` |","ref":"BACnet.Protocol.Constants.html#module-constants-timer-transition"},{"type":"module","title":"Constants: Unconfirmed Service Choice - BACnet.Protocol.Constants","doc":"Type: `:unconfirmed_service_choice`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| i_am | 0 | `0b0` | `0x0` |\n| i_have | 1 | `0b1` | `0x1` |\n| time_synchronization | 6 | `0b110` | `0x6` |\n| unconfirmed_cov_notification | 2 | `0b10` | `0x2` |\n| unconfirmed_cov_notification_multiple | 11 | `0b1011` | `0xB` |\n| unconfirmed_event_notification | 3 | `0b11` | `0x3` |\n| unconfirmed_private_transfer | 4 | `0b100` | `0x4` |\n| unconfirmed_text_message | 5 | `0b101` | `0x5` |\n| utc_time_synchronization | 9 | `0b1001` | `0x9` |\n| who_has | 7 | `0b111` | `0x7` |\n| who_is | 8 | `0b1000` | `0x8` |\n| write_group | 10 | `0b1010` | `0xA` |","ref":"BACnet.Protocol.Constants.html#module-constants-unconfirmed-service-choice"},{"type":"module","title":"Constants: Vt Class - BACnet.Protocol.Constants","doc":"Type: `:vt_class`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| ansi_x3_64 | 1 | `0b1` | `0x1` |\n| dec_vt100 | 3 | `0b11` | `0x3` |\n| dec_vt220 | 4 | `0b100` | `0x4` |\n| dec_vt52 | 2 | `0b10` | `0x2` |\n| default_terminal | 0 | `0b0` | `0x0` |\n| hp_700_94 | 5 | `0b101` | `0x5` |\n| ibm_3130 | 6 | `0b110` | `0x6` |","ref":"BACnet.Protocol.Constants.html#module-constants-vt-class"},{"type":"module","title":"Constants: Write Status - BACnet.Protocol.Constants","doc":"Type: `:write_status`\n\n| Name                         | Value     | Value Bin | Value Hex |\n|------------------------------|-----------|-----------|-----------|\n| failed | 3 | `0b11` | `0x3` |\n| idle | 0 | `0b0` | `0x0` |\n| in_progress | 1 | `0b1` | `0x1` |\n| successful | 2 | `0b10` | `0x2` |","ref":"BACnet.Protocol.Constants.html#module-constants-write-status"},{"type":"function","title":"BACnet.Protocol.Constants.assert_name/2","doc":"Assert that the given constant is defined. This function returns the name of the constant.","ref":"BACnet.Protocol.Constants.html#assert_name/2"},{"type":"function","title":"BACnet.Protocol.Constants.assert_name!/2","doc":"Assert that the given constant is defined. This function returns the name of the constant.\nIf the constant does not exist, the call will raise.","ref":"BACnet.Protocol.Constants.html#assert_name!/2"},{"type":"function","title":"BACnet.Protocol.Constants.by_name/2","doc":"Retrieve the value of a constant, identified by `type` and `name`.","ref":"BACnet.Protocol.Constants.html#by_name/2"},{"type":"function","title":"BACnet.Protocol.Constants.by_name!/2","doc":"Retrieve the value of a constant, identified by `type` and `name`.\nIf the constant does not exist, the call will raise.","ref":"BACnet.Protocol.Constants.html#by_name!/2"},{"type":"function","title":"BACnet.Protocol.Constants.by_name_atom/2","doc":"Equivalent to `by_name_safe/3`, however it uses `by_name!/2`\nwhen the name is an atom. If the name is not an atom, it is returned as-is.","ref":"BACnet.Protocol.Constants.html#by_name_atom/2"},{"type":"function","title":"BACnet.Protocol.Constants.by_name_safe/3","doc":"Retrieve the value of a constant, identified by `type` and `name`. If found,\nthe value will be returned, otherwise the default will be returned.","ref":"BACnet.Protocol.Constants.html#by_name_safe/3"},{"type":"function","title":"BACnet.Protocol.Constants.by_name_with_reason/3","doc":"Equivalent to `by_name/2`, however instead of returning plain `:error`,\nit returns `{:error, reason}`, where `reason` is user-supplied.","ref":"BACnet.Protocol.Constants.html#by_name_with_reason/3"},{"type":"function","title":"BACnet.Protocol.Constants.by_value/2","doc":"Retrieve the name of a constant, identified by `type` and `value`.","ref":"BACnet.Protocol.Constants.html#by_value/2"},{"type":"function","title":"BACnet.Protocol.Constants.by_value!/2","doc":"Retrieve the name of a constant, identified by `type` and `value`.\nIf the constant does not exist, the call will raise.","ref":"BACnet.Protocol.Constants.html#by_value!/2"},{"type":"function","title":"BACnet.Protocol.Constants.by_value_safe/3","doc":"Retrieve the value of a constant, identified by `type` and `value`. If found,\nthe name will be returned, otherwise the default will be returned.","ref":"BACnet.Protocol.Constants.html#by_value_safe/3"},{"type":"function","title":"BACnet.Protocol.Constants.by_value_with_reason/3","doc":"Equivalent to `by_value/2`, however instead of returning plain `:error`,\nit returns `{:error, reason}`, where `reason` is user-supplied.","ref":"BACnet.Protocol.Constants.html#by_value_with_reason/3"},{"type":"function","title":"BACnet.Protocol.Constants.has_by_name/2","doc":"Checks if the constant exists, identified by `type` and `name`.","ref":"BACnet.Protocol.Constants.html#has_by_name/2"},{"type":"function","title":"BACnet.Protocol.Constants.has_by_value/2","doc":"Checks if the constant exists, identified by `type` and `value`.","ref":"BACnet.Protocol.Constants.html#has_by_value/2"},{"type":"macro","title":"BACnet.Protocol.Constants.macro_assert_name/2","doc":"Same as `assert_name!/2`, but as compile-time macro.\n\nAs this is a macro, this can be used to compile the constant name into the resulting BEAM,\nasserting the constant exists.","ref":"BACnet.Protocol.Constants.html#macro_assert_name/2"},{"type":"macro","title":"BACnet.Protocol.Constants.macro_by_name/2","doc":"Same as `by_name!/2`, but as compile-time macro.\n\nAs this is a macro, this can be used to compile the constant value into the resulting BEAM.","ref":"BACnet.Protocol.Constants.html#macro_by_name/2"},{"type":"macro","title":"BACnet.Protocol.Constants.macro_by_value/2","doc":"Same as `by_value!/2`, but as compile-time macro.\n\nAs this is a macro, this can be used to compile the constant name into the resulting BEAM.","ref":"BACnet.Protocol.Constants.html#macro_by_value/2"},{"type":"macro","title":"BACnet.Protocol.Constants.macro_list_all/1","doc":"Get a list of all valid constant names values for the given type (in keyword list form).","ref":"BACnet.Protocol.Constants.html#macro_list_all/1"},{"type":"macro","title":"BACnet.Protocol.Constants.macro_list_names/1","doc":"Get a list of all valid constant names for the given type.","ref":"BACnet.Protocol.Constants.html#macro_list_names/1"},{"type":"type","title":"BACnet.Protocol.Constants.abort_reason/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:abort_reason/0"},{"type":"type","title":"BACnet.Protocol.Constants.accumulator_scale/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:accumulator_scale/0"},{"type":"type","title":"BACnet.Protocol.Constants.accumulator_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:accumulator_status/0"},{"type":"type","title":"BACnet.Protocol.Constants.action/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:action/0"},{"type":"type","title":"BACnet.Protocol.Constants.application_tag/0","doc":"Application Tags (ASHRAE 135 - 20.2.1.4 Application Tags)","ref":"BACnet.Protocol.Constants.html#t:application_tag/0"},{"type":"type","title":"BACnet.Protocol.Constants.backup_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:backup_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.binary_lighting_present_value/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:binary_lighting_present_value/0"},{"type":"type","title":"BACnet.Protocol.Constants.binary_present_value/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:binary_present_value/0"},{"type":"type","title":"BACnet.Protocol.Constants.bvlc_result_format/0","doc":"BACnet Virtual Link Control (BVLC)","ref":"BACnet.Protocol.Constants.html#t:bvlc_result_format/0"},{"type":"type","title":"BACnet.Protocol.Constants.bvlc_result_purpose/0","doc":"BACnet Virtual Link Control (BVLC)","ref":"BACnet.Protocol.Constants.html#t:bvlc_result_purpose/0"},{"type":"type","title":"BACnet.Protocol.Constants.bvll/0","doc":"BACnet Virtual Link Layer (BVLL) for BACnet/IP","ref":"BACnet.Protocol.Constants.html#t:bvll/0"},{"type":"type","title":"BACnet.Protocol.Constants.character_string_encoding/0","doc":"Character String Encoding (ASHRAE 135 - 20.2.9 Encoding of a Character String Value)","ref":"BACnet.Protocol.Constants.html#t:character_string_encoding/0"},{"type":"type","title":"BACnet.Protocol.Constants.confirmed_service_choice/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:confirmed_service_choice/0"},{"type":"type","title":"BACnet.Protocol.Constants.days_of_week/0","doc":"Days Of Week (ASHRAE 135 - 21 FORMAL DESCRIPTION OF APPLICATION PROTOCOL DATA UNITS)","ref":"BACnet.Protocol.Constants.html#t:days_of_week/0"},{"type":"type","title":"BACnet.Protocol.Constants.device_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:device_status/0"},{"type":"type","title":"BACnet.Protocol.Constants.door_alarm_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:door_alarm_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.door_secured_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:door_secured_status/0"},{"type":"type","title":"BACnet.Protocol.Constants.door_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:door_status/0"},{"type":"type","title":"BACnet.Protocol.Constants.door_value/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:door_value/0"},{"type":"type","title":"BACnet.Protocol.Constants.enable_disable/0","doc":"Enable Disable (ASHRAE 135 - 16.1.1.1.2 Enable/Disable)","ref":"BACnet.Protocol.Constants.html#t:enable_disable/0"},{"type":"type","title":"BACnet.Protocol.Constants.engineering_unit/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:engineering_unit/0"},{"type":"type","title":"BACnet.Protocol.Constants.error_class/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:error_class/0"},{"type":"type","title":"BACnet.Protocol.Constants.error_code/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:error_code/0"},{"type":"type","title":"BACnet.Protocol.Constants.event_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:event_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.event_transition_bit/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:event_transition_bit/0"},{"type":"type","title":"BACnet.Protocol.Constants.event_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:event_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.fault_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:fault_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.file_access_method/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:file_access_method/0"},{"type":"type","title":"BACnet.Protocol.Constants.ip_mode/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:ip_mode/0"},{"type":"type","title":"BACnet.Protocol.Constants.life_safety_mode/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:life_safety_mode/0"},{"type":"type","title":"BACnet.Protocol.Constants.life_safety_operation/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:life_safety_operation/0"},{"type":"type","title":"BACnet.Protocol.Constants.life_safety_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:life_safety_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.lighting_in_progress/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:lighting_in_progress/0"},{"type":"type","title":"BACnet.Protocol.Constants.lighting_operation/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:lighting_operation/0"},{"type":"type","title":"BACnet.Protocol.Constants.lighting_transition/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:lighting_transition/0"},{"type":"type","title":"BACnet.Protocol.Constants.limit_enable/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:limit_enable/0"},{"type":"type","title":"BACnet.Protocol.Constants.lock_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:lock_status/0"},{"type":"type","title":"BACnet.Protocol.Constants.log_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:log_status/0"},{"type":"type","title":"BACnet.Protocol.Constants.logging_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:logging_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.maintenance/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:maintenance/0"},{"type":"type","title":"BACnet.Protocol.Constants.max_apdu/0","doc":"The maximum APDU length supported by BACnet. Each device (respectively\ntransport layer) may support only the minimum or a value in between.","ref":"BACnet.Protocol.Constants.html#t:max_apdu/0"},{"type":"type","title":"BACnet.Protocol.Constants.max_apdu_length_accepted/0","doc":"Max APDU Length Accepted (ASHRAE 135 - 20.1.2.5 max-apdu-length-accepted)","ref":"BACnet.Protocol.Constants.html#t:max_apdu_length_accepted/0"},{"type":"type","title":"BACnet.Protocol.Constants.max_segments/0","doc":"The maximum amount of segments for segmented requests or responses.","ref":"BACnet.Protocol.Constants.html#t:max_segments/0"},{"type":"type","title":"BACnet.Protocol.Constants.max_segments_accepted/0","doc":"Max Segments Accepted (ASHRAE 135 - 20.1.2.4 max-segments-accepted)","ref":"BACnet.Protocol.Constants.html#t:max_segments_accepted/0"},{"type":"type","title":"BACnet.Protocol.Constants.network_layer_message_type/0","doc":"Network Layer Message Type (ASHRAE 135 - 6.2.4 Network Layer Message Type)","ref":"BACnet.Protocol.Constants.html#t:network_layer_message_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.network_number_quality/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:network_number_quality/0"},{"type":"type","title":"BACnet.Protocol.Constants.network_port_command/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:network_port_command/0"},{"type":"type","title":"BACnet.Protocol.Constants.network_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:network_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.node_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:node_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.notify_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:notify_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.npdu_control_bit/0","doc":"NPDU Control Bits (ASHRAE 135 - 6.2.2 Network Layer Protocol Control Information)","ref":"BACnet.Protocol.Constants.html#t:npdu_control_bit/0"},{"type":"type","title":"BACnet.Protocol.Constants.npdu_control_priority/0","doc":"NPDU Control Priority (ASHRAE 135 - 6.2.2 Network Layer Protocol Control Information)","ref":"BACnet.Protocol.Constants.html#t:npdu_control_priority/0"},{"type":"type","title":"BACnet.Protocol.Constants.object_type/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:object_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.object_types_supported/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:object_types_supported/0"},{"type":"type","title":"BACnet.Protocol.Constants.pdu_confirmed_request_bit/0","doc":"PDU Confirmed Request PDU Bits (ASHRAE 135 - 20.1.2.11 Format of the BACnet-Confirmed-Request-PDU)","ref":"BACnet.Protocol.Constants.html#t:pdu_confirmed_request_bit/0"},{"type":"type","title":"BACnet.Protocol.Constants.pdu_segment_ack_bit/0","doc":"PDU Segment ACK Bits (ASHRAE 135 - 20.1.6.6 Format of the BACnet-SegmentACK-PDU)","ref":"BACnet.Protocol.Constants.html#t:pdu_segment_ack_bit/0"},{"type":"type","title":"BACnet.Protocol.Constants.pdu_type/0","doc":"PDU Types (ASHRAE 135 - 21 FORMAL DESCRIPTION OF APPLICATION PROTOCOL DATA UNITS)","ref":"BACnet.Protocol.Constants.html#t:pdu_type/0"},{"type":"type","title":"BACnet.Protocol.Constants.polarity/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:polarity/0"},{"type":"type","title":"BACnet.Protocol.Constants.program_error/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:program_error/0"},{"type":"type","title":"BACnet.Protocol.Constants.program_request/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:program_request/0"},{"type":"type","title":"BACnet.Protocol.Constants.program_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:program_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.property_identifier/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:property_identifier/0"},{"type":"type","title":"BACnet.Protocol.Constants.property_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:property_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.protocol_level/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:protocol_level/0"},{"type":"type","title":"BACnet.Protocol.Constants.protocol_revision/0","doc":"When creating BACnet objects, the designated revision can\nbe chosen from the constants. The designated revision decides\nwhich properties are required. Optional properties are regardless\nof the revision available.\n\nThe following revisions are supported (to be):\n- Revision 14 (135-2012)\n- Revision 19 (135-2016)\n- Revision 22 (135-2022)\n\nThe default BACnet Revision is 14 (2012).","ref":"BACnet.Protocol.Constants.html#t:protocol_revision/0"},{"type":"type","title":"BACnet.Protocol.Constants.reinitialized_state/0","doc":"Reinitialized State (ASHRAE 135 - 16.4.1.1.1 Reinitialized State of Device)","ref":"BACnet.Protocol.Constants.html#t:reinitialized_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.reject_reason/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:reject_reason/0"},{"type":"type","title":"BACnet.Protocol.Constants.relationship/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:relationship/0"},{"type":"type","title":"BACnet.Protocol.Constants.reliability/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:reliability/0"},{"type":"type","title":"BACnet.Protocol.Constants.restart_reason/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:restart_reason/0"},{"type":"type","title":"BACnet.Protocol.Constants.result_flag/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:result_flag/0"},{"type":"type","title":"BACnet.Protocol.Constants.security_level/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:security_level/0"},{"type":"type","title":"BACnet.Protocol.Constants.security_policy/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:security_policy/0"},{"type":"type","title":"BACnet.Protocol.Constants.segmentation/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:segmentation/0"},{"type":"type","title":"BACnet.Protocol.Constants.services_supported/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:services_supported/0"},{"type":"type","title":"BACnet.Protocol.Constants.shed_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:shed_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.silenced_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:silenced_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.status_flag/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:status_flag/0"},{"type":"type","title":"BACnet.Protocol.Constants.timer_state/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:timer_state/0"},{"type":"type","title":"BACnet.Protocol.Constants.timer_transition/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:timer_transition/0"},{"type":"type","title":"BACnet.Protocol.Constants.unconfirmed_service_choice/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:unconfirmed_service_choice/0"},{"type":"type","title":"BACnet.Protocol.Constants.vt_class/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:vt_class/0"},{"type":"type","title":"BACnet.Protocol.Constants.write_status/0","doc":"","ref":"BACnet.Protocol.Constants.html#t:write_status/0"},{"type":"module","title":"BACnet.Protocol.IncompleteAPDU","doc":"This module is used to represent a segmented incomplete APDU.\n\nThe given struct is to be fed to the `BACnet.Stack.SegmentsStore`, which will handle the segmentation.","ref":"BACnet.Protocol.IncompleteAPDU.html"},{"type":"function","title":"BACnet.Protocol.IncompleteAPDU.set_window_size/2","doc":"Set the window size field to the given number.","ref":"BACnet.Protocol.IncompleteAPDU.html#set_window_size/2"},{"type":"type","title":"BACnet.Protocol.IncompleteAPDU.t/0","doc":"Represents an incomplete APDU.","ref":"BACnet.Protocol.IncompleteAPDU.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NPCI","doc":"Network Protocol Control Information (NPCI) are used to determine\npriority, whether reply is expected, for who by who this frame is\nand what kind of BACnet Data Unit this is.\n\nBACnet Data Units can be divided into Application and Network Service.\nWhere Application frames are called APDU and Network Service frames are\ncalled NSDU. Network Service frames are mostly used by and for BACnet routers.","ref":"BACnet.Protocol.NPCI.html"},{"type":"function","title":"BACnet.Protocol.NPCI.encode/2","doc":"Creates a NPCI iodata from the NPCI struct.\n\nIf `destination` is not nil, but `net` is nil, `net` will default to `1`.","ref":"BACnet.Protocol.NPCI.html#encode/2"},{"type":"function","title":"BACnet.Protocol.NPCI.get_version/0","doc":"Get the NPCI version.","ref":"BACnet.Protocol.NPCI.html#get_version/0"},{"type":"function","title":"BACnet.Protocol.NPCI.new/1","doc":"Creates a new NPCI struct with the given fields.\n\nThe following default values are applied:\n```ex\npriority: :normal,\nexpects_reply: false,\ndestination: nil,\nsource: nil,\nhopcount: nil,\nis_network_message: false\n```","ref":"BACnet.Protocol.NPCI.html#new/1"},{"type":"type","title":"BACnet.Protocol.NPCI.t/0","doc":"Represents Network Protocol Control Information (NPCI).","ref":"BACnet.Protocol.NPCI.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NetworkLayerProtocolMessage","doc":"Network layer messages are used for prividing the basis for\nrouter auto-configuration, router maintenance and\nnetwork layer congestion control.\n\nThe purpose of the BACnet network layer is to provide the means by which\nmessages can be relayed from one BACnet network to another,\nregardless of the BACnet data link technology in use on that network.\nWhereas the data link layer provides the capability to address messages\nto a single device or broadcast them to all devices on the local network,\nthe network layer allows messages to be directed to a single remote device,\nbroadcast on a remote network, or broadcast globally to all devices on all networks.\n\nSee also ASHRAE 135 Clause 6.4.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html"},{"type":"function","title":"BACnet.Protocol.NetworkLayerProtocolMessage.encode/1","doc":"Encode the network layer protocol message into binary data.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html#encode/1"},{"type":"type","title":"BACnet.Protocol.NetworkLayerProtocolMessage.data/0","doc":"Represents data for known BACnet network layer message types.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html#t:data/0"},{"type":"type","title":"BACnet.Protocol.NetworkLayerProtocolMessage.dnet/0","doc":"Represents a network number.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html#t:dnet/0"},{"type":"type","title":"BACnet.Protocol.NetworkLayerProtocolMessage.msg_type_reserved/0","doc":"The message type number range for reserved area messages.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html#t:msg_type_reserved/0"},{"type":"type","title":"BACnet.Protocol.NetworkLayerProtocolMessage.msg_type_vendor/0","doc":"The message type number range for vendor proprietary messages.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html#t:msg_type_vendor/0"},{"type":"type","title":"BACnet.Protocol.NetworkLayerProtocolMessage.t/0","doc":"Represents a message layer message (Network Service Data Unit - NSDU).\n\n`data` is a binary if the type is in the reserved area (`:reserved_area_start`).\n`data` is a tuple for vendor proprietary messages, the actual data is a binary in the tuple.","ref":"BACnet.Protocol.NetworkLayerProtocolMessage.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NpciTarget","doc":"Network Protocol Control Information targets are used to describe\nsource and destination targets (network and address information) inside\nof Network Protocol Control Information (`BACnet.Protocol.NPCI`).\n\nBACnet describes the following address sizes for the different\ntransport layers (data link layer):\n\n| Data Link Layer     | DLEN | SLEN | Encoding Rules                               |\n|:-------------------:|:----:|:----:|:---------------------------------------------|\n| ARCnet              | 1    | 1    | MAC layer representation                     |\n| BACnet/IP           | 6    | 6    | IP address and Port (ASHRAE 135 Annex J.1.2) |\n| Ethernet            | 6    | 6    | MAC layer representation                     |\n| LonTalk (broadcast) | 2    | 2    | Special encoding (ASHRAE 135 6.2.2.2)        |\n| LonTalk (multicast) | 2    | 2    | Special encoding (ASHRAE 135 6.2.2.2)        |\n| LonTalk (unicast)   | 2    | 2    | Special encoding (ASHRAE 135 6.2.2.2)        |\n| LonTalk (Neuron ID) | 7    | 6    | Special encoding (ASHRAE 135 6.2.2.2)        |\n| MS/TP               | 1    | 1    | MAC layer representation                     |\n| ZigBee              | 3    | 3    | VMAC address (ASHRAE 135 Annex H.7)          |","ref":"BACnet.Protocol.NpciTarget.html"},{"type":"macro","title":"BACnet.Protocol.NpciTarget.is_global_broadcast/1","doc":"Checks if the NPCI target is a global broadcast (net == 65535).","ref":"BACnet.Protocol.NpciTarget.html#is_global_broadcast/1"},{"type":"macro","title":"BACnet.Protocol.NpciTarget.is_remote_broadcast/1","doc":"Checks if the NPCI target is a remote broadcast (address == nil).","ref":"BACnet.Protocol.NpciTarget.html#is_remote_broadcast/1"},{"type":"macro","title":"BACnet.Protocol.NpciTarget.is_remote_station/1","doc":"Checks if the NPCI target is neither a global broadcast nor a remote broadcast.","ref":"BACnet.Protocol.NpciTarget.html#is_remote_station/1"},{"type":"type","title":"BACnet.Protocol.NpciTarget.t/0","doc":"Represents a NPCI target, such as used for source or destination.","ref":"BACnet.Protocol.NpciTarget.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.AccessSpecification","doc":"Represents BACnet Access Specification, used in BACnet `Read-Property-Multiple` and `Write-Property-Multiple`,\nas Read Access Specification and Write Access Specification, respectively.","ref":"BACnet.Protocol.AccessSpecification.html"},{"type":"function","title":"BACnet.Protocol.AccessSpecification.encode/2","doc":"Encodes a BACnet Read/Write Access Specification into BACnet application tags encoding.","ref":"BACnet.Protocol.AccessSpecification.html#encode/2"},{"type":"function","title":"BACnet.Protocol.AccessSpecification.parse/1","doc":"Parses a BACnet Read/Write Access Specification from BACnet application tags encoding.","ref":"BACnet.Protocol.AccessSpecification.html#parse/1"},{"type":"function","title":"BACnet.Protocol.AccessSpecification.valid?/1","doc":"Validates whether the given access specification is in form valid.\n\nIt only validates the struct is valid as per type specification.\n\nBe aware, this function does not know whether it is a read or\nwrite access specification, thus it can't verify if the special\nproperty identifiers (atoms) are as per BACnet specification.\nOnly read supports the special property identifiers.","ref":"BACnet.Protocol.AccessSpecification.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.AccessSpecification.t/0","doc":"","ref":"BACnet.Protocol.AccessSpecification.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.AccessSpecification.Property","doc":"","ref":"BACnet.Protocol.AccessSpecification.Property.html"},{"type":"function","title":"BACnet.Protocol.AccessSpecification.Property.encode/2","doc":"Encodes a BACnet Read/Write Access Specification Property into BACnet application tags encoding.","ref":"BACnet.Protocol.AccessSpecification.Property.html#encode/2"},{"type":"function","title":"BACnet.Protocol.AccessSpecification.Property.parse/1","doc":"Parses a BACnet Read/Write Access Specification Property from BACnet application tags encoding.","ref":"BACnet.Protocol.AccessSpecification.Property.html#parse/1"},{"type":"function","title":"BACnet.Protocol.AccessSpecification.Property.valid?/1","doc":"Validates whether the given access specification property is in form valid.\n\nIt only validates the struct is valid as per type specification.\n\nBe aware, this function does not know whether it is a read or\nwrite access specification, thus it can't verify if the special\nproperty identifiers (atoms) are as per BACnet specification.\nOnly read supports the special property identifiers.","ref":"BACnet.Protocol.AccessSpecification.Property.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.AccessSpecification.Property.t/0","doc":"","ref":"BACnet.Protocol.AccessSpecification.Property.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.AccumulatorRecord","doc":"","ref":"BACnet.Protocol.AccumulatorRecord.html"},{"type":"function","title":"BACnet.Protocol.AccumulatorRecord.encode/2","doc":"Encodes an accumulator record struct into application tags encoding.","ref":"BACnet.Protocol.AccumulatorRecord.html#encode/2"},{"type":"function","title":"BACnet.Protocol.AccumulatorRecord.parse/1","doc":"Parses a BACnet accumulator record into a struct.","ref":"BACnet.Protocol.AccumulatorRecord.html#parse/1"},{"type":"function","title":"BACnet.Protocol.AccumulatorRecord.valid?/1","doc":"Validates whether the given accumulator record is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.AccumulatorRecord.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.AccumulatorRecord.t/0","doc":"","ref":"BACnet.Protocol.AccumulatorRecord.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ActionCommand","doc":"","ref":"BACnet.Protocol.ActionCommand.html"},{"type":"function","title":"BACnet.Protocol.ActionCommand.encode/2","doc":"Encode a BACnet action command into application tag-encoded.","ref":"BACnet.Protocol.ActionCommand.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ActionCommand.parse/1","doc":"Parse a BACnet action command from application tags encoding.","ref":"BACnet.Protocol.ActionCommand.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ActionCommand.valid?/1","doc":"Validates whether the given action command is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ActionCommand.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ActionCommand.t/0","doc":"","ref":"BACnet.Protocol.ActionCommand.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ActionList","doc":"","ref":"BACnet.Protocol.ActionList.html"},{"type":"function","title":"BACnet.Protocol.ActionList.encode/2","doc":"Encode a BACnet action list into application tag-encoded.","ref":"BACnet.Protocol.ActionList.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ActionList.parse/1","doc":"Parse a BACnet action list from application tags encoding.","ref":"BACnet.Protocol.ActionList.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ActionList.valid?/1","doc":"Validates whether the given action list is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ActionList.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ActionList.t/0","doc":"","ref":"BACnet.Protocol.ActionList.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.AddressBinding","doc":"","ref":"BACnet.Protocol.AddressBinding.html"},{"type":"function","title":"BACnet.Protocol.AddressBinding.encode/2","doc":"Encodes a BACnet address binding into BACnet application tags encoding.","ref":"BACnet.Protocol.AddressBinding.html#encode/2"},{"type":"function","title":"BACnet.Protocol.AddressBinding.parse/1","doc":"Parses a BACnet address binding from BACnet application tags encoding.","ref":"BACnet.Protocol.AddressBinding.html#parse/1"},{"type":"function","title":"BACnet.Protocol.AddressBinding.valid?/1","doc":"Validates whether the given address binding is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.AddressBinding.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.AddressBinding.t/0","doc":"","ref":"BACnet.Protocol.AddressBinding.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.AlarmSummary","doc":"","ref":"BACnet.Protocol.AlarmSummary.html"},{"type":"function","title":"BACnet.Protocol.AlarmSummary.encode/2","doc":"Encodes a BACnet alarm summary into BACnet application tags encoding.","ref":"BACnet.Protocol.AlarmSummary.html#encode/2"},{"type":"function","title":"BACnet.Protocol.AlarmSummary.parse/1","doc":"Parses a BACnet alarm summary from BACnet application tags encoding.","ref":"BACnet.Protocol.AlarmSummary.html#parse/1"},{"type":"function","title":"BACnet.Protocol.AlarmSummary.valid?/1","doc":"Validates whether the given alarm summary is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.AlarmSummary.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.AlarmSummary.t/0","doc":"","ref":"BACnet.Protocol.AlarmSummary.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BACnetArray","doc":"A BACnet Array is a structured datatype in ordered sequences.\nA BACnet Array consists of data elements each having the same datatype.\n\nThe components of a BACnet Array may be individually accessed for read and write,\nusing an array index. An array index of zero specifies the size\nof the array. The index zero can not be directly written to using `set_item/3`,\nuse `truncate/1` instead.\n\nWhen a BACnet Array has a fixed size, the array can not be resized\nand any attempts will fail to do so. The BACnet array of fixed size\nwill contain elements with the default value, which will be returned\nupon call to `to_list/1` or inside `reduce_while/3`.","ref":"BACnet.Protocol.BACnetArray.html"},{"type":"function","title":"BACnet.Protocol.BACnetArray.fetch/2","doc":"Fetch an item from the array.\n\nThis is implemented for the `Access` module.","ref":"BACnet.Protocol.BACnetArray.html#fetch/2"},{"type":"function","title":"BACnet.Protocol.BACnetArray.fixed_size?/1","doc":"Check whether the BACnet array has a fixed size.","ref":"BACnet.Protocol.BACnetArray.html#fixed_size?/1"},{"type":"function","title":"BACnet.Protocol.BACnetArray.from_indexed_list/3","doc":"Create a new BACnet array from the given index list.\n\nThe indexed list is a list of `{index, item}`, where index is a positive integer.\nThe indexes do not need to be consecutively or sequentially ordered.\nNote however that interleaved values leave the default value at the \"holes\",\nwhich you will get upon calling `get_item/2`. See also `get_item/2`.\n\nThe list will be iterated once to insert them into the array.\nOptionally the resulting array can have a fixed size (derived from the list length).","ref":"BACnet.Protocol.BACnetArray.html#from_indexed_list/3"},{"type":"function","title":"BACnet.Protocol.BACnetArray.from_list/3","doc":"Create a new BACnet array from the given list.\n\nOptionally the resulting array can have a fixed size (derived from the list length).","ref":"BACnet.Protocol.BACnetArray.html#from_list/3"},{"type":"function","title":"BACnet.Protocol.BACnetArray.get_default/1","doc":"Get the default value for the BACnet array.","ref":"BACnet.Protocol.BACnetArray.html#get_default/1"},{"type":"function","title":"BACnet.Protocol.BACnetArray.get_item/2","doc":"Get the item from the specified position.\n\nArrays with interleaved values will typically use the default value,\nas such when getting interleave positions, you will get the default value.\nHowever `:undefined` is handled special and will return `:error` instead.\n\nPosition `0` conveniently returns the size (as specified by ASHRAE 135).","ref":"BACnet.Protocol.BACnetArray.html#get_item/2"},{"type":"function","title":"BACnet.Protocol.BACnetArray.get_size/1","doc":"Get the size of the array.","ref":"BACnet.Protocol.BACnetArray.html#get_size/1"},{"type":"function","title":"BACnet.Protocol.BACnetArray.new/2","doc":"Creates a new array. When specifying a fixed size,\nthe array can not grow or shrink.\n\nThere's no distinction between an unset value (an empty position)\nor an explicitely set value to the default value.","ref":"BACnet.Protocol.BACnetArray.html#new/2"},{"type":"function","title":"BACnet.Protocol.BACnetArray.reduce_while/3","doc":"Reduce the array items to an accumulator. See `Enum.reduce_while/3`.","ref":"BACnet.Protocol.BACnetArray.html#reduce_while/3"},{"type":"function","title":"BACnet.Protocol.BACnetArray.remove_item/2","doc":"Remove an item from the array. This function ignores positions greater than its capacity.\n\nNon-fixed size arrays get resized. Fixed size arrays will have the position reset to the\ndefault value.","ref":"BACnet.Protocol.BACnetArray.html#remove_item/2"},{"type":"function","title":"BACnet.Protocol.BACnetArray.set_item/3","doc":"Inserts an item at the specified position into the array.\n\nPosition `nil` can be used to append to the end of the array.\nPositions greater than the size of the array + 1 can not be used.","ref":"BACnet.Protocol.BACnetArray.html#set_item/3"},{"type":"function","title":"BACnet.Protocol.BACnetArray.to_list/1","doc":"Get all items as a list.","ref":"BACnet.Protocol.BACnetArray.html#to_list/1"},{"type":"function","title":"BACnet.Protocol.BACnetArray.truncate/1","doc":"Truncates the array to size zero.","ref":"BACnet.Protocol.BACnetArray.html#truncate/1"},{"type":"function","title":"BACnet.Protocol.BACnetArray.valid?/2","doc":"Validates whether the given BACnet array is in form valid.\nA type can be given to be verified, so that each entry\nis either the default value or of that type (see `Internal.check_type/2`).\n\nIf none or `:any` is given, no particular validation occurs.","ref":"BACnet.Protocol.BACnetArray.html#valid?/2"},{"type":"opaque","title":"BACnet.Protocol.BACnetArray.items/1","doc":"Implementation detail and thus private API. Changes to it do not count\ntowards Semantic Versioning.","ref":"BACnet.Protocol.BACnetArray.html#t:items/1"},{"type":"type","title":"BACnet.Protocol.BACnetArray.t/0","doc":"Base type for the BACnet array.","ref":"BACnet.Protocol.BACnetArray.html#t:t/0"},{"type":"type","title":"BACnet.Protocol.BACnetArray.t/1","doc":"Base type with subtype for the BACnet array.","ref":"BACnet.Protocol.BACnetArray.html#t:t/1"},{"type":"type","title":"BACnet.Protocol.BACnetArray.t/2","doc":"Representative type for the BACnet array.\n\nThe items get typed as `subtype`. `fixed_size` is either\na number in the range of `non_neg_integer` or `nil`.\n\nA fixed size array can not change its size.","ref":"BACnet.Protocol.BACnetArray.html#t:t/2"},{"type":"module","title":"BACnet.Protocol.BACnetDate","doc":"A BACnet Date is used to represent dates, but also can represent unspecific dates,\nsuch as a single component being unspecified (i.e. can match anything in that component),\nor can be something like targeting even or odd numbers.\n\nThis can be used, for example, for Calendar functionality\n(such as defining holidays occurring on the same day of year).\n\nThis module provides some helpers to convert `Date` into a `BACnetDate` and back.","ref":"BACnet.Protocol.BACnetDate.html"},{"type":"function","title":"BACnet.Protocol.BACnetDate.compare/2","doc":"Compares two BACnet Date.\n\nReturns `:gt` if first date is later than the second,\nand `:lt` for vice versa.\nIf the two dates are equal, `:eq` is returned.\n\nNote that this is achieved by converting to `Date` and then\ncomparing them.","ref":"BACnet.Protocol.BACnetDate.html#compare/2"},{"type":"function","title":"BACnet.Protocol.BACnetDate.encode/2","doc":"Encodes the given BACnet Date into an application tag.","ref":"BACnet.Protocol.BACnetDate.html#encode/2"},{"type":"function","title":"BACnet.Protocol.BACnetDate.from_date/1","doc":"Converts a `Date` to a BACnet Date.","ref":"BACnet.Protocol.BACnetDate.html#from_date/1"},{"type":"function","title":"BACnet.Protocol.BACnetDate.parse/1","doc":"Parses a BACnet Date from BACnet application tags encoding.","ref":"BACnet.Protocol.BACnetDate.html#parse/1"},{"type":"function","title":"BACnet.Protocol.BACnetDate.specific?/1","doc":"Checks whether the given BACnet Date is a specific date value\n(every component is a numeric value, `:last` in the day component counts as specific).","ref":"BACnet.Protocol.BACnetDate.html#specific?/1"},{"type":"function","title":"BACnet.Protocol.BACnetDate.to_date/2","doc":"Converts the BACnet Date to a `Date`.\n\nIf any of the fields are unspecified, the reference date (current UTC value) is used.\nIn case of even or odd, either the current or the previous value of the reference date is used.","ref":"BACnet.Protocol.BACnetDate.html#to_date/2"},{"type":"function","title":"BACnet.Protocol.BACnetDate.to_date!/2","doc":"Bang-version of `to_date/1`.","ref":"BACnet.Protocol.BACnetDate.html#to_date!/2"},{"type":"function","title":"BACnet.Protocol.BACnetDate.utc_today/0","doc":"Creates a new BACnet Date with the current UTC date.","ref":"BACnet.Protocol.BACnetDate.html#utc_today/0"},{"type":"function","title":"BACnet.Protocol.BACnetDate.valid?/1","doc":"Validates whether the given BACnet date is in form valid.\n\nIt only validates the struct is valid as per type specification,\nit does not validate that the day matches the weekday.","ref":"BACnet.Protocol.BACnetDate.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.BACnetDate.t/0","doc":"Represents a BACnet Date, which can have unspecified (= any) or even/odd values.\n\nWeekday specifies the day of the week, starting with monday to sunday (1-7).","ref":"BACnet.Protocol.BACnetDate.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BACnetDateTime","doc":"A BACnet DateTime is used to represent date with timepoints.\nIt wraps both `BACnetDate` and `BACnetTime`.\n\nThis module provides some helpers to convert `DateTime` and `NaiveDateTime`\ninto a `BACnetDateTime` and back.","ref":"BACnet.Protocol.BACnetDateTime.html"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.compare/2","doc":"Compares two BACnet DateTime.\n\nReturns `:gt` if first datetime is later than the second,\nand `:lt` for vice versa.\nIf the two datetimes are equal, `:eq` is returned.\n\nNote that this is achieved by converting to `DateTime` and then\ncomparing them.","ref":"BACnet.Protocol.BACnetDateTime.html#compare/2"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.encode/2","doc":"Encodes the given BACnet DateTime into an application tag.\n\nFor tagged encoding, you'll have to strip this down further\nusing manual efforts.","ref":"BACnet.Protocol.BACnetDateTime.html#encode/2"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.from_datetime/1","doc":"Converts a `DateTime` to a BACnet DateTime.","ref":"BACnet.Protocol.BACnetDateTime.html#from_datetime/1"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.from_naive_datetime/1","doc":"Converts a `NaiveDateTime` to a BACnet DateTime.","ref":"BACnet.Protocol.BACnetDateTime.html#from_naive_datetime/1"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.parse/1","doc":"Parses a BACnet DateTime from BACnet application tags encoding.","ref":"BACnet.Protocol.BACnetDateTime.html#parse/1"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.specific?/1","doc":"Checks whether the given BACnet DateTime is a specific date-time value\n(every component is a numeric value).","ref":"BACnet.Protocol.BACnetDateTime.html#specific?/1"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.to_datetime/3","doc":"Converts the BACnet DateTime to a `DateTime`.","ref":"BACnet.Protocol.BACnetDateTime.html#to_datetime/3"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.to_datetime!/3","doc":"Bang-version of `to_datetime/1`.","ref":"BACnet.Protocol.BACnetDateTime.html#to_datetime!/3"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.to_naive_datetime/1","doc":"Converts the BACnet DateTime to a `NaiveDateTime`.","ref":"BACnet.Protocol.BACnetDateTime.html#to_naive_datetime/1"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.to_naive_datetime!/1","doc":"Bang-version of `to_naive_datetime/1`.","ref":"BACnet.Protocol.BACnetDateTime.html#to_naive_datetime!/1"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.utc_now/0","doc":"Creates a new BACnet DateTime for the current UTC datetime.","ref":"BACnet.Protocol.BACnetDateTime.html#utc_now/0"},{"type":"function","title":"BACnet.Protocol.BACnetDateTime.valid?/1","doc":"Validates whether the given BACnet datetime is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.BACnetDateTime.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.BACnetDateTime.t/0","doc":"Represents a BACnet DateTime. It wraps both BACnet Date and Time.","ref":"BACnet.Protocol.BACnetDateTime.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BACnetError","doc":"","ref":"BACnet.Protocol.BACnetError.html"},{"type":"function","title":"BACnet.Protocol.BACnetError.encode/2","doc":"Encodes a BACnet error into BACnet application tags encoding.","ref":"BACnet.Protocol.BACnetError.html#encode/2"},{"type":"function","title":"BACnet.Protocol.BACnetError.parse/1","doc":"Parses a BACnet error from BACnet application tags encoding.","ref":"BACnet.Protocol.BACnetError.html#parse/1"},{"type":"function","title":"BACnet.Protocol.BACnetError.valid?/1","doc":"Validates whether the given status flags is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.BACnetError.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.BACnetError.t/0","doc":"Represents a casual BACnet Error.\n\nTo allow forward compatibility, each field can be an integer.","ref":"BACnet.Protocol.BACnetError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BACnetTime","doc":"A BACnet Time is used to represent timepoints of the day, but also can represent\nunspecific timepoints, such as a single component being unspecified\n(i.e. can match anything in that component).\n\nThis module provides some helpers to convert `Time` into a `BACnetTime` and back.","ref":"BACnet.Protocol.BACnetTime.html"},{"type":"function","title":"BACnet.Protocol.BACnetTime.compare/2","doc":"Compares two BACnet Time.\n\nReturns `:gt` if first time is later than the second,\nand `:lt` for vice versa.\nIf the two times are equal, `:eq` is returned.\n\nNote that this is achieved by converting to `Time` and then\ncomparing them.","ref":"BACnet.Protocol.BACnetTime.html#compare/2"},{"type":"function","title":"BACnet.Protocol.BACnetTime.encode/2","doc":"Encodes the given BACnet Time into an application tag.","ref":"BACnet.Protocol.BACnetTime.html#encode/2"},{"type":"function","title":"BACnet.Protocol.BACnetTime.from_time/1","doc":"Converts a `Time` into a BACnet Time.","ref":"BACnet.Protocol.BACnetTime.html#from_time/1"},{"type":"function","title":"BACnet.Protocol.BACnetTime.parse/1","doc":"Parses a BACnet Time from BACnet application tags encoding.","ref":"BACnet.Protocol.BACnetTime.html#parse/1"},{"type":"function","title":"BACnet.Protocol.BACnetTime.specific?/1","doc":"Checks whether the given BACnet Time is a specific time value\n(every component is a numeric value).","ref":"BACnet.Protocol.BACnetTime.html#specific?/1"},{"type":"function","title":"BACnet.Protocol.BACnetTime.to_time/2","doc":"Converts a BACnet Time into a `Time`.\n\nIf any of the fields are unspecified, the reference time (current UTC value) is used.","ref":"BACnet.Protocol.BACnetTime.html#to_time/2"},{"type":"function","title":"BACnet.Protocol.BACnetTime.to_time!/2","doc":"Bang-version of `to_time/1`.","ref":"BACnet.Protocol.BACnetTime.html#to_time!/2"},{"type":"function","title":"BACnet.Protocol.BACnetTime.utc_now/0","doc":"Creates a new BACnet Time with the current UTC time.","ref":"BACnet.Protocol.BACnetTime.html#utc_now/0"},{"type":"function","title":"BACnet.Protocol.BACnetTime.valid?/1","doc":"Validates whether the given BACnet time is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.BACnetTime.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.BACnetTime.t/0","doc":"Represents a BACnet Time, which can have unspecified values (= any).\n\nOne hundredth corresponds to 0.01 of a second.","ref":"BACnet.Protocol.BACnetTime.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BACnetTimestamp","doc":"","ref":"BACnet.Protocol.BACnetTimestamp.html"},{"type":"function","title":"BACnet.Protocol.BACnetTimestamp.encode/2","doc":"Encodes the given BACnet timestamp into an application tag.","ref":"BACnet.Protocol.BACnetTimestamp.html#encode/2"},{"type":"function","title":"BACnet.Protocol.BACnetTimestamp.parse/1","doc":"Decodes the given application tags encoding into a BACnet timestamp.\n\nExample:\n\n    iex> BACnetTimestamp.parse([{:tagged, {0, <<2, 12, 49, 0>>, 4}}])\n    {:ok,\n    {%BACnetTimestamp{\n      datetime: nil,\n      sequence_number: nil,\n      time: %BACnetTime{\n        hour: 2,\n        hundredth: 0,\n        minute: 12,\n        second: 49\n      },\n      type: :time\n    }, []}}","ref":"BACnet.Protocol.BACnetTimestamp.html#parse/1"},{"type":"function","title":"BACnet.Protocol.BACnetTimestamp.valid?/1","doc":"Validates whether the given BACnet timestamp is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.BACnetTimestamp.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.BACnetTimestamp.t/0","doc":"","ref":"BACnet.Protocol.BACnetTimestamp.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.CalendarEntry","doc":"","ref":"BACnet.Protocol.CalendarEntry.html"},{"type":"function","title":"BACnet.Protocol.CalendarEntry.encode/2","doc":"Encode a calendar entry into application tag-encoded.","ref":"BACnet.Protocol.CalendarEntry.html#encode/2"},{"type":"function","title":"BACnet.Protocol.CalendarEntry.parse/1","doc":"Parse application tag-encoded calendar entry into a struct.","ref":"BACnet.Protocol.CalendarEntry.html#parse/1"},{"type":"function","title":"BACnet.Protocol.CalendarEntry.valid?/1","doc":"Validates whether the given BACnet calendar entry is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.CalendarEntry.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.CalendarEntry.t/0","doc":"","ref":"BACnet.Protocol.CalendarEntry.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.CovSubscription","doc":"","ref":"BACnet.Protocol.CovSubscription.html"},{"type":"function","title":"BACnet.Protocol.CovSubscription.encode/2","doc":"Encodes a COV subscription struct into BACnet application tags encoding.","ref":"BACnet.Protocol.CovSubscription.html#encode/2"},{"type":"function","title":"BACnet.Protocol.CovSubscription.parse/1","doc":"Parses a BACnet COV subscription application tags encoding into a struct.","ref":"BACnet.Protocol.CovSubscription.html#parse/1"},{"type":"function","title":"BACnet.Protocol.CovSubscription.valid?/1","doc":"Validates whether the given COV subscription is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.CovSubscription.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.CovSubscription.t/0","doc":"","ref":"BACnet.Protocol.CovSubscription.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.DailySchedule","doc":"","ref":"BACnet.Protocol.DailySchedule.html"},{"type":"function","title":"BACnet.Protocol.DailySchedule.encode/2","doc":"Encode a BACnet daily schedule into application tag-encoded.","ref":"BACnet.Protocol.DailySchedule.html#encode/2"},{"type":"function","title":"BACnet.Protocol.DailySchedule.parse/1","doc":"Parse a BACnet daily schedule from application tags encoding.","ref":"BACnet.Protocol.DailySchedule.html#parse/1"},{"type":"function","title":"BACnet.Protocol.DailySchedule.valid?/1","doc":"Validates whether the given daily schedule is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.DailySchedule.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.DailySchedule.t/0","doc":"Represents a BACnet Daily Schedule.","ref":"BACnet.Protocol.DailySchedule.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.DateRange","doc":"","ref":"BACnet.Protocol.DateRange.html"},{"type":"function","title":"BACnet.Protocol.DateRange.encode/2","doc":"Encodes a BACnet date range into BACnet application tags encoding.","ref":"BACnet.Protocol.DateRange.html#encode/2"},{"type":"function","title":"BACnet.Protocol.DateRange.get_date_range/1","doc":"Get a `Date.Range` struct for this date range. Only specific dates are allowed.","ref":"BACnet.Protocol.DateRange.html#get_date_range/1"},{"type":"function","title":"BACnet.Protocol.DateRange.parse/1","doc":"Parses a BACnet date range from BACnet application tags encoding.","ref":"BACnet.Protocol.DateRange.html#parse/1"},{"type":"function","title":"BACnet.Protocol.DateRange.valid?/1","doc":"Validates whether the given BACnet date range is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.DateRange.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.DateRange.t/0","doc":"Represents a BACnet Date Range.","ref":"BACnet.Protocol.DateRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.DaysOfWeek","doc":"","ref":"BACnet.Protocol.DaysOfWeek.html"},{"type":"function","title":"BACnet.Protocol.DaysOfWeek.encode/2","doc":"Encodes a BACnet days of week into application tags encoding.","ref":"BACnet.Protocol.DaysOfWeek.html#encode/2"},{"type":"function","title":"BACnet.Protocol.DaysOfWeek.from_bitstring/1","doc":"Creates from an application tag bitstring a days of week.","ref":"BACnet.Protocol.DaysOfWeek.html#from_bitstring/1"},{"type":"function","title":"BACnet.Protocol.DaysOfWeek.parse/1","doc":"Parses a BACnet days of week from application tags encoding.","ref":"BACnet.Protocol.DaysOfWeek.html#parse/1"},{"type":"function","title":"BACnet.Protocol.DaysOfWeek.to_bitstring/1","doc":"Creates an application tag bitstring from a days of week.","ref":"BACnet.Protocol.DaysOfWeek.html#to_bitstring/1"},{"type":"function","title":"BACnet.Protocol.DaysOfWeek.valid?/1","doc":"Validates whether the given days of week is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.DaysOfWeek.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.DaysOfWeek.t/0","doc":"Represents a BACnet days of week.","ref":"BACnet.Protocol.DaysOfWeek.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Destination","doc":"","ref":"BACnet.Protocol.Destination.html"},{"type":"function","title":"BACnet.Protocol.Destination.encode/2","doc":"Encodes a BACnet destination into BACnet application tags encoding.","ref":"BACnet.Protocol.Destination.html#encode/2"},{"type":"function","title":"BACnet.Protocol.Destination.parse/1","doc":"Parses a BACnet destination from BACnet application tags encoding.","ref":"BACnet.Protocol.Destination.html#parse/1"},{"type":"function","title":"BACnet.Protocol.Destination.valid?/1","doc":"Validates whether the given BACnet destination is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.Destination.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.Destination.t/0","doc":"Represents a BACnet destination.","ref":"BACnet.Protocol.Destination.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.DeviceObjectPropertyRef","doc":"","ref":"BACnet.Protocol.DeviceObjectPropertyRef.html"},{"type":"function","title":"BACnet.Protocol.DeviceObjectPropertyRef.encode/2","doc":"Encodes a BACnet device object property reference into application tags encoding.","ref":"BACnet.Protocol.DeviceObjectPropertyRef.html#encode/2"},{"type":"function","title":"BACnet.Protocol.DeviceObjectPropertyRef.parse/1","doc":"Parses a BACnet device object property reference into a struct.","ref":"BACnet.Protocol.DeviceObjectPropertyRef.html#parse/1"},{"type":"function","title":"BACnet.Protocol.DeviceObjectPropertyRef.valid?/1","doc":"Validates whether the given device object property reference is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.DeviceObjectPropertyRef.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.DeviceObjectPropertyRef.t/0","doc":"","ref":"BACnet.Protocol.DeviceObjectPropertyRef.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.DeviceObjectRef","doc":"","ref":"BACnet.Protocol.DeviceObjectRef.html"},{"type":"function","title":"BACnet.Protocol.DeviceObjectRef.encode/2","doc":"Encodes a BACnet device object reference into application tags encoding.","ref":"BACnet.Protocol.DeviceObjectRef.html#encode/2"},{"type":"function","title":"BACnet.Protocol.DeviceObjectRef.parse/1","doc":"Parses a BACnet device object reference into a struct.","ref":"BACnet.Protocol.DeviceObjectRef.html#parse/1"},{"type":"function","title":"BACnet.Protocol.DeviceObjectRef.valid?/1","doc":"Validates whether the given device object reference is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.DeviceObjectRef.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.DeviceObjectRef.t/0","doc":"","ref":"BACnet.Protocol.DeviceObjectRef.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EnrollmentSummary","doc":"","ref":"BACnet.Protocol.EnrollmentSummary.html"},{"type":"function","title":"BACnet.Protocol.EnrollmentSummary.encode/2","doc":"Encodes a BACnet enrollment summary into BACnet application tags encoding.","ref":"BACnet.Protocol.EnrollmentSummary.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EnrollmentSummary.parse/1","doc":"Parses a BACnet enrollment summary from BACnet application tags encoding.","ref":"BACnet.Protocol.EnrollmentSummary.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EnrollmentSummary.valid?/1","doc":"Validates whether the given enrollment summary is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EnrollmentSummary.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EnrollmentSummary.t/0","doc":"","ref":"BACnet.Protocol.EnrollmentSummary.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventInformation","doc":"","ref":"BACnet.Protocol.EventInformation.html"},{"type":"function","title":"BACnet.Protocol.EventInformation.encode/2","doc":"Encodes a BACnet event information into BACnet application tags encoding.","ref":"BACnet.Protocol.EventInformation.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EventInformation.parse/1","doc":"Parses a BACnet event information from BACnet application tags encoding.","ref":"BACnet.Protocol.EventInformation.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EventInformation.valid?/1","doc":"Validates whether the given event information is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EventInformation.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EventInformation.t/0","doc":"","ref":"BACnet.Protocol.EventInformation.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventLogRecord","doc":"","ref":"BACnet.Protocol.EventLogRecord.html"},{"type":"function","title":"BACnet.Protocol.EventLogRecord.encode/2","doc":"Encode a BACnet log record into application tag-encoded.","ref":"BACnet.Protocol.EventLogRecord.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EventLogRecord.parse/1","doc":"Parse a BACnet event log record from application tags encoding.","ref":"BACnet.Protocol.EventLogRecord.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EventLogRecord.valid?/1","doc":"Validates whether the given event log record is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EventLogRecord.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EventLogRecord.t/0","doc":"","ref":"BACnet.Protocol.EventLogRecord.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventMessageTexts","doc":"","ref":"BACnet.Protocol.EventMessageTexts.html"},{"type":"function","title":"BACnet.Protocol.EventMessageTexts.encode/2","doc":"Encodes a BACnet event message texts (BACnetArray[3] of CharacterString) into BACnet application tags encoding.","ref":"BACnet.Protocol.EventMessageTexts.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EventMessageTexts.parse/1","doc":"Parses a BACnet event message texts (BACnetArray[3] of CharacterString) from BACnet application tags encoding.","ref":"BACnet.Protocol.EventMessageTexts.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EventMessageTexts.valid?/1","doc":"Validates whether the given event message texts is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EventMessageTexts.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EventMessageTexts.t/0","doc":"","ref":"BACnet.Protocol.EventMessageTexts.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventTimestamps","doc":"","ref":"BACnet.Protocol.EventTimestamps.html"},{"type":"function","title":"BACnet.Protocol.EventTimestamps.encode/2","doc":"Encodes a BACnet event timestamps into BACnet application tags encoding.","ref":"BACnet.Protocol.EventTimestamps.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EventTimestamps.parse/1","doc":"Parses a BACnet event timestamps from BACnet application tags encoding.","ref":"BACnet.Protocol.EventTimestamps.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EventTimestamps.valid?/1","doc":"Validates whether the given event timestamps is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EventTimestamps.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EventTimestamps.t/0","doc":"","ref":"BACnet.Protocol.EventTimestamps.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventTransitionBits","doc":"","ref":"BACnet.Protocol.EventTransitionBits.html"},{"type":"function","title":"BACnet.Protocol.EventTransitionBits.encode/2","doc":"Encodes a BACnet event transition bits into application tags encoding.","ref":"BACnet.Protocol.EventTransitionBits.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EventTransitionBits.from_bitstring/1","doc":"Creates from an application tag bitstring an event transition bits.","ref":"BACnet.Protocol.EventTransitionBits.html#from_bitstring/1"},{"type":"function","title":"BACnet.Protocol.EventTransitionBits.parse/1","doc":"Parses a BACnet event transition bits from application tags encoding.","ref":"BACnet.Protocol.EventTransitionBits.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EventTransitionBits.to_bitstring/1","doc":"Creates an application tag bitstring from an event transition bits.","ref":"BACnet.Protocol.EventTransitionBits.html#to_bitstring/1"},{"type":"function","title":"BACnet.Protocol.EventTransitionBits.valid?/1","doc":"Validates whether the given event transition bits is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EventTransitionBits.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EventTransitionBits.t/0","doc":"","ref":"BACnet.Protocol.EventTransitionBits.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.GroupChannelValue","doc":"","ref":"BACnet.Protocol.GroupChannelValue.html"},{"type":"function","title":"BACnet.Protocol.GroupChannelValue.encode/2","doc":"Encodes a group channel value struct into application tags encoding.","ref":"BACnet.Protocol.GroupChannelValue.html#encode/2"},{"type":"function","title":"BACnet.Protocol.GroupChannelValue.parse/1","doc":"Parses a BACnet group channel value into a struct.","ref":"BACnet.Protocol.GroupChannelValue.html#parse/1"},{"type":"function","title":"BACnet.Protocol.GroupChannelValue.valid?/1","doc":"Validates whether the given BACnet group channel value is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.GroupChannelValue.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.GroupChannelValue.t/0","doc":"Represents a BACnet Group Channel Value.","ref":"BACnet.Protocol.GroupChannelValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.LimitEnable","doc":"BACnet Limit Enable conveys several flags that describe the enabled limit detection algorithms.\n\n* The LOW_LIMIT_ENABLE flag indicates whether the low limit detection algorithm is enabled.\n* The HIGH_LIMIT_ENABLE flag indicates whether the high limit detection algorithm is enabled.","ref":"BACnet.Protocol.LimitEnable.html"},{"type":"function","title":"BACnet.Protocol.LimitEnable.encode/2","doc":"Encodes a BACnet limit enable into application tags encoding.","ref":"BACnet.Protocol.LimitEnable.html#encode/2"},{"type":"function","title":"BACnet.Protocol.LimitEnable.from_bitstring/1","doc":"Creates from an application tag bitstring a limit enable.","ref":"BACnet.Protocol.LimitEnable.html#from_bitstring/1"},{"type":"function","title":"BACnet.Protocol.LimitEnable.parse/1","doc":"Parses a BACnet limit enable from application tags encoding.","ref":"BACnet.Protocol.LimitEnable.html#parse/1"},{"type":"function","title":"BACnet.Protocol.LimitEnable.to_bitstring/1","doc":"Creates an application tag bitstring from a limit enable.","ref":"BACnet.Protocol.LimitEnable.html#to_bitstring/1"},{"type":"function","title":"BACnet.Protocol.LimitEnable.valid?/1","doc":"Validates whether the given limit enable is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.LimitEnable.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.LimitEnable.t/0","doc":"Represents BACnet limit enable flags.","ref":"BACnet.Protocol.LimitEnable.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.LogMultipleRecord","doc":"","ref":"BACnet.Protocol.LogMultipleRecord.html"},{"type":"function","title":"BACnet.Protocol.LogMultipleRecord.encode/2","doc":"Encode a BACnet log multiple record into application tag-encoded.","ref":"BACnet.Protocol.LogMultipleRecord.html#encode/2"},{"type":"function","title":"BACnet.Protocol.LogMultipleRecord.parse/1","doc":"Parse a BACnet log multiple record from application tags encoding.","ref":"BACnet.Protocol.LogMultipleRecord.html#parse/1"},{"type":"function","title":"BACnet.Protocol.LogMultipleRecord.valid?/1","doc":"Validates whether the given log multiple record is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.LogMultipleRecord.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.LogMultipleRecord.log_data/0","doc":"Representative type for log data - possible values it can take.","ref":"BACnet.Protocol.LogMultipleRecord.html#t:log_data/0"},{"type":"type","title":"BACnet.Protocol.LogMultipleRecord.t/0","doc":"","ref":"BACnet.Protocol.LogMultipleRecord.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.LogRecord","doc":"","ref":"BACnet.Protocol.LogRecord.html"},{"type":"function","title":"BACnet.Protocol.LogRecord.encode/2","doc":"Encode a BACnet log record into application tag-encoded.","ref":"BACnet.Protocol.LogRecord.html#encode/2"},{"type":"function","title":"BACnet.Protocol.LogRecord.parse/1","doc":"Parse a BACnet log record from application tags encoding.","ref":"BACnet.Protocol.LogRecord.html#parse/1"},{"type":"function","title":"BACnet.Protocol.LogRecord.valid?/1","doc":"Validates whether the given log record is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.LogRecord.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.LogRecord.t/0","doc":"","ref":"BACnet.Protocol.LogRecord.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.LogStatus","doc":"","ref":"BACnet.Protocol.LogStatus.html"},{"type":"function","title":"BACnet.Protocol.LogStatus.encode/2","doc":"Encodes a BACnet log status into application tags encoding.","ref":"BACnet.Protocol.LogStatus.html#encode/2"},{"type":"function","title":"BACnet.Protocol.LogStatus.from_bitstring/1","doc":"Creates from an application tag bitstring a log status.","ref":"BACnet.Protocol.LogStatus.html#from_bitstring/1"},{"type":"function","title":"BACnet.Protocol.LogStatus.parse/1","doc":"Parses a BACnet log status from application tags encoding.","ref":"BACnet.Protocol.LogStatus.html#parse/1"},{"type":"function","title":"BACnet.Protocol.LogStatus.to_bitstring/1","doc":"Creates an application tag bitstring from a log status.","ref":"BACnet.Protocol.LogStatus.html#to_bitstring/1"},{"type":"function","title":"BACnet.Protocol.LogStatus.valid?/1","doc":"Validates whether the given log status is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.LogStatus.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.LogStatus.t/0","doc":"","ref":"BACnet.Protocol.LogStatus.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationClassPriority","doc":"The notification class priority BACnet array is used to convey the priority\nused for event notifications. A lower number indicates a higher priority.","ref":"BACnet.Protocol.NotificationClassPriority.html"},{"type":"function","title":"BACnet.Protocol.NotificationClassPriority.encode/2","doc":"Encodes a BACnet notification class priority (BACnetArray[3] of Unsigned) into BACnet application tags encoding.","ref":"BACnet.Protocol.NotificationClassPriority.html#encode/2"},{"type":"function","title":"BACnet.Protocol.NotificationClassPriority.parse/1","doc":"Parses a BACnet notification class priority (BACnetArray[3] of Unsigned) from BACnet application tags encoding.","ref":"BACnet.Protocol.NotificationClassPriority.html#parse/1"},{"type":"function","title":"BACnet.Protocol.NotificationClassPriority.valid?/1","doc":"Validates whether the given notification class priority is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.NotificationClassPriority.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.NotificationClassPriority.t/0","doc":"Represents the notification class priority array (three priorities).","ref":"BACnet.Protocol.NotificationClassPriority.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectIdentifier","doc":"","ref":"BACnet.Protocol.ObjectIdentifier.html"},{"type":"function","title":"BACnet.Protocol.ObjectIdentifier.encode/2","doc":"Encodes an object identifier into application tags encoding.","ref":"BACnet.Protocol.ObjectIdentifier.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ObjectIdentifier.from_number/1","doc":"Parses the number and retrieves the object identifier from an object identifier number.\n\nThe object identifier number is a 32bit non-negative integer\nwhich consists of a 10bit object type number and 22bit instance number.","ref":"BACnet.Protocol.ObjectIdentifier.html#from_number/1"},{"type":"function","title":"BACnet.Protocol.ObjectIdentifier.parse/1","doc":"Parses an object identifier from application tags encoding.\n\nThere's actually nothing special that needs to be done here, it just unwraps\nand gets the `{:object_identifier, t()}` tuple from the head of the tags list.\nThe conversion is already handled by `ApplicationTags`.","ref":"BACnet.Protocol.ObjectIdentifier.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ObjectIdentifier.to_number/1","doc":"Converts the struct into an object identifier number.\n\nThe object identifier number is a 32bit non-negative integer\nwhich consists of a 10bit object type number and 22bit instance number.","ref":"BACnet.Protocol.ObjectIdentifier.html#to_number/1"},{"type":"function","title":"BACnet.Protocol.ObjectIdentifier.valid?/1","doc":"Validates whether the given object identifier is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ObjectIdentifier.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ObjectIdentifier.t/0","doc":"","ref":"BACnet.Protocol.ObjectIdentifier.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectPropertyRef","doc":"","ref":"BACnet.Protocol.ObjectPropertyRef.html"},{"type":"function","title":"BACnet.Protocol.ObjectPropertyRef.encode/2","doc":"Encodes a BACnet object property reference into application tags encoding.","ref":"BACnet.Protocol.ObjectPropertyRef.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ObjectPropertyRef.parse/1","doc":"Parses a BACnet object property reference into a struct.","ref":"BACnet.Protocol.ObjectPropertyRef.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ObjectPropertyRef.valid?/1","doc":"Validates whether the given object property reference is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ObjectPropertyRef.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ObjectPropertyRef.t/0","doc":"","ref":"BACnet.Protocol.ObjectPropertyRef.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Prescale","doc":"","ref":"BACnet.Protocol.Prescale.html"},{"type":"function","title":"BACnet.Protocol.Prescale.encode/2","doc":"Encodes a BACnet prescale into application tags encoding.","ref":"BACnet.Protocol.Prescale.html#encode/2"},{"type":"function","title":"BACnet.Protocol.Prescale.parse/1","doc":"Parses a BACnet prescale from application tags encoding.","ref":"BACnet.Protocol.Prescale.html#parse/1"},{"type":"function","title":"BACnet.Protocol.Prescale.valid?/1","doc":"Validates whether the given prescale is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.Prescale.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.Prescale.t/0","doc":"","ref":"BACnet.Protocol.Prescale.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.PriorityArray","doc":"","ref":"BACnet.Protocol.PriorityArray.html"},{"type":"function","title":"BACnet.Protocol.PriorityArray.fetch/2","doc":"Fetches the value for a specific `key` in the given `array`.\n\n`key` is the priority number or the struct field name.\n\nThis function is implemented for the `Access` behaviour and\nallows to access the fields using the priority number (or the atom key).\n\nThis function will raise for an invalid atom key.","ref":"BACnet.Protocol.PriorityArray.html#fetch/2"},{"type":"function","title":"BACnet.Protocol.PriorityArray.from_array/1","doc":"Create a Priority Array from a BACnetArray.\n\nThe types of the array values are not checked. However,\nthey should all be the same. The size of the array must\nbe 16 or smaller (lower priorities will be `nil`).","ref":"BACnet.Protocol.PriorityArray.html#from_array/1"},{"type":"function","title":"BACnet.Protocol.PriorityArray.from_list/1","doc":"Create a Priority Array from a list (or any other enumerable).\n\nThe types of the list values are not checked. However,\nthey should all be the same. The length of the list must\nbe 16 or smaller (lower priorities will be `nil`).\n\nWhen using a key-value based enumerable, if the key is a priority number,\nthen it will be used as such.","ref":"BACnet.Protocol.PriorityArray.html#from_list/1"},{"type":"function","title":"BACnet.Protocol.PriorityArray.get_and_update/3","doc":"Gets the value from `key` and updates it, all in one pass.\n\n`key` is the priority number or the struct field name.\n\n`fun` is called with the current value under `key` in `array` and must return\na two-element tuple: the current value (the retrieved value, which can be operated\non before being returned) and the new value to be stored under `key`\nin the resulting new array. `fun` may also return `:pop`,\nwhich means the current value will be set to `nil`.\n\nThis function is implemented for the `Access` behaviour.","ref":"BACnet.Protocol.PriorityArray.html#get_and_update/3"},{"type":"function","title":"BACnet.Protocol.PriorityArray.get_value/1","doc":"Get the highest active priority value. If none is active, `nil` is returned.","ref":"BACnet.Protocol.PriorityArray.html#get_value/1"},{"type":"function","title":"BACnet.Protocol.PriorityArray.pop/2","doc":"Resets the value associated with `key` in `array` to `nil` and\nreturns the value and the updated array.\n\n`key` is the priority number or the struct field name.\n\nIt returns `{value, updated_array}` where `value` is the value of\nthe key and `updated_map` is the result of setting `key` to `nil`.\n\nThis function is implemented for the `Access` behaviour.","ref":"BACnet.Protocol.PriorityArray.html#pop/2"},{"type":"function","title":"BACnet.Protocol.PriorityArray.to_array/1","doc":"Create a BACnetArray from a Priority Array.","ref":"BACnet.Protocol.PriorityArray.html#to_array/1"},{"type":"function","title":"BACnet.Protocol.PriorityArray.to_list/1","doc":"Create a list from a Priority Array.","ref":"BACnet.Protocol.PriorityArray.html#to_list/1"},{"type":"function","title":"BACnet.Protocol.PriorityArray.valid?/2","doc":"Validates whether the given priority array is in form valid.\n\nIt only validates the struct is valid as per type specification.\n\nOptionally, a type can be given to be verified, so that each priority\nis either nil or of that type (see `Internal.check_type/2`).","ref":"BACnet.Protocol.PriorityArray.html#valid?/2"},{"type":"type","title":"BACnet.Protocol.PriorityArray.t/0","doc":"Base type for the BACnet Priority Array.","ref":"BACnet.Protocol.PriorityArray.html#t:t/0"},{"type":"type","title":"BACnet.Protocol.PriorityArray.t/1","doc":"Represents the BACnet Priority Array with 16 priorities.\nThe lowest priority number has the highest priority.\n\nIf a priority is nil, the priority is unset.","ref":"BACnet.Protocol.PriorityArray.html#t:t/1"},{"type":"module","title":"BACnet.Protocol.PropertyRef","doc":"","ref":"BACnet.Protocol.PropertyRef.html"},{"type":"function","title":"BACnet.Protocol.PropertyRef.encode/2","doc":"Encodes a BACnet property reference into application tags encoding.","ref":"BACnet.Protocol.PropertyRef.html#encode/2"},{"type":"function","title":"BACnet.Protocol.PropertyRef.parse/1","doc":"Parses a BACnet property reference into a struct.","ref":"BACnet.Protocol.PropertyRef.html#parse/1"},{"type":"function","title":"BACnet.Protocol.PropertyRef.valid?/1","doc":"Validates whether the given property reference is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.PropertyRef.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.PropertyRef.t/0","doc":"","ref":"BACnet.Protocol.PropertyRef.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.PropertyState","doc":"","ref":"BACnet.Protocol.PropertyState.html"},{"type":"function","title":"BACnet.Protocol.PropertyState.encode/2","doc":"Encodes a BACnet property state into application tags encoding.","ref":"BACnet.Protocol.PropertyState.html#encode/2"},{"type":"function","title":"BACnet.Protocol.PropertyState.parse/1","doc":"Parses a BACnet property state from application tags encoding.","ref":"BACnet.Protocol.PropertyState.html#parse/1"},{"type":"function","title":"BACnet.Protocol.PropertyState.valid?/1","doc":"Validates whether the given property state is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.PropertyState.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.PropertyState.t/0","doc":"Represents a BACnet property state.","ref":"BACnet.Protocol.PropertyState.html#t:t/0"},{"type":"type","title":"BACnet.Protocol.PropertyState.value/0","doc":"Represents the value type for property states.\n\nThe name for each value type represents the property state type (`t:Constants.property_state/0`).","ref":"BACnet.Protocol.PropertyState.html#t:value/0"},{"type":"module","title":"BACnet.Protocol.PropertyValue","doc":"","ref":"BACnet.Protocol.PropertyValue.html"},{"type":"function","title":"BACnet.Protocol.PropertyValue.encode/2","doc":"Encodes a BACnet property value into application tags encoding.","ref":"BACnet.Protocol.PropertyValue.html#encode/2"},{"type":"function","title":"BACnet.Protocol.PropertyValue.encode_all/2","doc":"Encode a list of property values into application tag-encoded property values.","ref":"BACnet.Protocol.PropertyValue.html#encode_all/2"},{"type":"function","title":"BACnet.Protocol.PropertyValue.parse/1","doc":"Parse application tag-encoded property value into a struct.","ref":"BACnet.Protocol.PropertyValue.html#parse/1"},{"type":"function","title":"BACnet.Protocol.PropertyValue.parse_all/1","doc":"Parse application tag-encoded property values into a list of structs.","ref":"BACnet.Protocol.PropertyValue.html#parse_all/1"},{"type":"function","title":"BACnet.Protocol.PropertyValue.valid?/1","doc":"Validates whether the given property value is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.PropertyValue.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.PropertyValue.t/0","doc":"","ref":"BACnet.Protocol.PropertyValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ReadAccessResult","doc":"Represents BACnet Read Access Result, used in BACnet `Read-Property-Multiple`.","ref":"BACnet.Protocol.ReadAccessResult.html"},{"type":"function","title":"BACnet.Protocol.ReadAccessResult.encode/2","doc":"Encodes a BACnet Read Access Result into BACnet application tags encoding.","ref":"BACnet.Protocol.ReadAccessResult.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ReadAccessResult.parse/1","doc":"Parses a BACnet Read Access Result from BACnet application tags encoding.","ref":"BACnet.Protocol.ReadAccessResult.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ReadAccessResult.valid?/1","doc":"Validates whether the given read access result is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ReadAccessResult.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ReadAccessResult.t/0","doc":"","ref":"BACnet.Protocol.ReadAccessResult.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ReadAccessResult.ReadResult","doc":"","ref":"BACnet.Protocol.ReadAccessResult.ReadResult.html"},{"type":"function","title":"BACnet.Protocol.ReadAccessResult.ReadResult.encode/2","doc":"Encodes a BACnet Read Access Result Read Result into BACnet application tags encoding.","ref":"BACnet.Protocol.ReadAccessResult.ReadResult.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ReadAccessResult.ReadResult.parse/1","doc":"Parses a BACnet Read Access Result Read Result from BACnet application tags encoding.","ref":"BACnet.Protocol.ReadAccessResult.ReadResult.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ReadAccessResult.ReadResult.valid?/1","doc":"Validates whether the given read access read result is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ReadAccessResult.ReadResult.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ReadAccessResult.ReadResult.t/0","doc":"","ref":"BACnet.Protocol.ReadAccessResult.ReadResult.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Recipient","doc":"","ref":"BACnet.Protocol.Recipient.html"},{"type":"function","title":"BACnet.Protocol.Recipient.encode/2","doc":"Encodes a BACnet recipient into application tags encoding.","ref":"BACnet.Protocol.Recipient.html#encode/2"},{"type":"function","title":"BACnet.Protocol.Recipient.parse/1","doc":"Decodes the given application tags encoding into a BACnet recipient.","ref":"BACnet.Protocol.Recipient.html#parse/1"},{"type":"function","title":"BACnet.Protocol.Recipient.valid?/1","doc":"Validates whether the given BACnet recipient is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.Recipient.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.Recipient.t/0","doc":"","ref":"BACnet.Protocol.Recipient.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.RecipientAddress","doc":"","ref":"BACnet.Protocol.RecipientAddress.html"},{"type":"type","title":"BACnet.Protocol.RecipientAddress.t/0","doc":"","ref":"BACnet.Protocol.RecipientAddress.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ResultFlags","doc":"BACnet Result Flags conveys several flags that describe characteristics of the response data.\n\n* The FIRST_ITEM flag indicates whether this response includes the first list or array element\n  (in the case of positional indexing), or the oldest timestamped item (in the case of time indexing).\n* The LAST_ITEM flag indicates whether this response includes the last list or array element\n  (in the case of positional indexing), or the newest timestamped item (in the case of time indexing).\n* The MORE_ITEMS flag indicates whether more items matched the request but were not transmittable within the PDU.","ref":"BACnet.Protocol.ResultFlags.html"},{"type":"function","title":"BACnet.Protocol.ResultFlags.encode/2","doc":"Encodes a BACnet result flags into application tags encoding.","ref":"BACnet.Protocol.ResultFlags.html#encode/2"},{"type":"function","title":"BACnet.Protocol.ResultFlags.from_bitstring/1","doc":"Creates from an application tag bitstring a result flags.","ref":"BACnet.Protocol.ResultFlags.html#from_bitstring/1"},{"type":"function","title":"BACnet.Protocol.ResultFlags.parse/1","doc":"Parses a BACnet result flags from application tags encoding.","ref":"BACnet.Protocol.ResultFlags.html#parse/1"},{"type":"function","title":"BACnet.Protocol.ResultFlags.to_bitstring/1","doc":"Creates an application tag bitstring from a result flags.","ref":"BACnet.Protocol.ResultFlags.html#to_bitstring/1"},{"type":"function","title":"BACnet.Protocol.ResultFlags.valid?/1","doc":"Validates whether the given result flags is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.ResultFlags.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.ResultFlags.t/0","doc":"Represents BACnet result flags.","ref":"BACnet.Protocol.ResultFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.SetpointReference","doc":"","ref":"BACnet.Protocol.SetpointReference.html"},{"type":"function","title":"BACnet.Protocol.SetpointReference.encode/2","doc":"Encodes a BACnet setpoint reference into application tags encoding.","ref":"BACnet.Protocol.SetpointReference.html#encode/2"},{"type":"function","title":"BACnet.Protocol.SetpointReference.parse/1","doc":"Parses a BACnet setpoint reference from application tags encoding.","ref":"BACnet.Protocol.SetpointReference.html#parse/1"},{"type":"function","title":"BACnet.Protocol.SetpointReference.valid?/1","doc":"Validates whether the given setpoint reference is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.SetpointReference.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.SetpointReference.t/0","doc":"","ref":"BACnet.Protocol.SetpointReference.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.SpecialEvent","doc":"","ref":"BACnet.Protocol.SpecialEvent.html"},{"type":"function","title":"BACnet.Protocol.SpecialEvent.encode/2","doc":"Encode a BACnet special event into application tag-encoded.","ref":"BACnet.Protocol.SpecialEvent.html#encode/2"},{"type":"function","title":"BACnet.Protocol.SpecialEvent.parse/1","doc":"Parse a BACnet special event from application tags encoding.","ref":"BACnet.Protocol.SpecialEvent.html#parse/1"},{"type":"function","title":"BACnet.Protocol.SpecialEvent.valid?/1","doc":"Validates whether the given special event is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.SpecialEvent.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.SpecialEvent.t/0","doc":"Represents a BACnet Special Event.","ref":"BACnet.Protocol.SpecialEvent.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.StatusFlags","doc":"","ref":"BACnet.Protocol.StatusFlags.html"},{"type":"function","title":"BACnet.Protocol.StatusFlags.encode/2","doc":"Encodes a BACnet status flags into application tags encoding.","ref":"BACnet.Protocol.StatusFlags.html#encode/2"},{"type":"function","title":"BACnet.Protocol.StatusFlags.from_bitstring/1","doc":"Creates from an application tag bitstring a status flag.","ref":"BACnet.Protocol.StatusFlags.html#from_bitstring/1"},{"type":"function","title":"BACnet.Protocol.StatusFlags.parse/1","doc":"Parses a BACnet status flags from application tags encoding.","ref":"BACnet.Protocol.StatusFlags.html#parse/1"},{"type":"function","title":"BACnet.Protocol.StatusFlags.to_bitstring/1","doc":"Creates an application tag bitstring from a status flag.","ref":"BACnet.Protocol.StatusFlags.html#to_bitstring/1"},{"type":"function","title":"BACnet.Protocol.StatusFlags.valid?/1","doc":"Validates whether the given status flags is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.StatusFlags.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.StatusFlags.t/0","doc":"Represents the BACnet Status Flags.\n\nThe `IN_ALARM` flag is set, if the Event State is not normal.\n\nThe `FAULT` flag is set, if the reliability has detected a fault.\n\nThe `OVERRIDDEN` flag is set, if the output has been overridden by some sort\nof BACnet device local mechanism.\n\nThe `OUT_OF_SERVICE` flag is set, if the Out Of Service property is set.","ref":"BACnet.Protocol.StatusFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.TimeValue","doc":"","ref":"BACnet.Protocol.TimeValue.html"},{"type":"function","title":"BACnet.Protocol.TimeValue.encode/2","doc":"Encodes a BACnet time value into BACnet application tags encoding.","ref":"BACnet.Protocol.TimeValue.html#encode/2"},{"type":"function","title":"BACnet.Protocol.TimeValue.parse/1","doc":"Parses a BACnet time value from BACnet application tags encoding.","ref":"BACnet.Protocol.TimeValue.html#parse/1"},{"type":"function","title":"BACnet.Protocol.TimeValue.valid?/1","doc":"Validates whether the given time value is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.TimeValue.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.TimeValue.t/0","doc":"Represents a BACnet Time Value (used in Daily Schedule and Special Event).","ref":"BACnet.Protocol.TimeValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.WeekNDay","doc":"","ref":"BACnet.Protocol.WeekNDay.html"},{"type":"function","title":"BACnet.Protocol.WeekNDay.encode/2","doc":"Encodes a BACnet week and day into application tags encoding.","ref":"BACnet.Protocol.WeekNDay.html#encode/2"},{"type":"function","title":"BACnet.Protocol.WeekNDay.parse/1","doc":"Parses a BACnet week and day from application tags encoding.","ref":"BACnet.Protocol.WeekNDay.html#parse/1"},{"type":"function","title":"BACnet.Protocol.WeekNDay.valid?/1","doc":"Validates whether the given BACnet week and day is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.WeekNDay.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.WeekNDay.t/0","doc":"Represents a BACnet Week And Day, which can have unspecified (= any) or even/odd values.\n\nWeek of month specifies which week of the month:\n- `1` - Days numbered 1-7\n- `2` - Days numbered 8-14\n- `3` - Days numbered 15-21\n- `4` - Days numbered 22-28\n- `5` - Days numbered 29-31\n- `6` - Last 7 days of this month\n\nWeekday specifies the day of the week, starting with monday to sunday (1-7).","ref":"BACnet.Protocol.WeekNDay.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Device.ObjectTypesSupported","doc":"BACnet object types need to be supported by the device, in order for a BACnet client\nto be able to handle them.\n\nThis module contains a struct that represents the support state for each object type.","ref":"BACnet.Protocol.Device.ObjectTypesSupported.html"},{"type":"function","title":"BACnet.Protocol.Device.ObjectTypesSupported.encode/2","doc":"Encodes the struct into BACnet application tag bitstring.","ref":"BACnet.Protocol.Device.ObjectTypesSupported.html#encode/2"},{"type":"function","title":"BACnet.Protocol.Device.ObjectTypesSupported.new/0","doc":"Creates a new struct, defaulting to the local implementation status.\nSee `ObjectsUtility.get_supported_object_types/0`.","ref":"BACnet.Protocol.Device.ObjectTypesSupported.html#new/0"},{"type":"function","title":"BACnet.Protocol.Device.ObjectTypesSupported.parse/1","doc":"Decodes the BACnet application tag bitstring into a struct.","ref":"BACnet.Protocol.Device.ObjectTypesSupported.html#parse/1"},{"type":"type","title":"BACnet.Protocol.Device.ObjectTypesSupported.t/0","doc":"Represents which BACnet object types are supported.","ref":"BACnet.Protocol.Device.ObjectTypesSupported.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Device.ServicesSupported","doc":"BACnet Services need to be supported by the device, in order for a BACnet client\nto be able to invoke them.\n\nThis module contains a struct that represents the support state for each service.","ref":"BACnet.Protocol.Device.ServicesSupported.html"},{"type":"function","title":"BACnet.Protocol.Device.ServicesSupported.encode/2","doc":"Encodes the struct into BACnet application tag bitstring.","ref":"BACnet.Protocol.Device.ServicesSupported.html#encode/2"},{"type":"function","title":"BACnet.Protocol.Device.ServicesSupported.parse/1","doc":"Decodes the BACnet application tag bitstring into a struct.","ref":"BACnet.Protocol.Device.ServicesSupported.html#parse/1"},{"type":"type","title":"BACnet.Protocol.Device.ServicesSupported.t/0","doc":"Represents which BACnet protocol services are supported.\n\nThe following services are deprecated:\n- authenticate\n- request_key","ref":"BACnet.Protocol.Device.ServicesSupported.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectsUtility","doc":"This module offers utility functions that work on all object types.\n\nThis is mostly complementary to the object module itself and offers some\nadditional generic functions for working with objects.\n\nSome functions will call `Code.ensure_loaded/1` on object modules to ensure the\nmodule is loaded and available - however only if `Mix.env/0` does not return `:prod`.\nIf this library is a dependency in a project, Mix always compiles dependencies in `:prod`.\nTo override this behaviour, see `mix help deps`.","ref":"BACnet.Protocol.ObjectsUtility.html"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.add_property/3","doc":"Adds an optional property to an object (see `t:bacnet_object/0`).\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created.\n\nThis function calls to the object module directly, as such it enforces the `t:bacnet_object/0` contract.","ref":"BACnet.Protocol.ObjectsUtility.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.cast_properties_to_object/3","doc":"Create an object from a map of properties.\nThis function is used for remote objects, not for local objects.\n\nThis function invokes the object module's `create` function.\n\nNote: In prod environment, required modules are not explicitely loaded.\n\nThe following options are available:\n- `ignore_unknown_properties: boolean()` - Optional. Ignores properties the object module doesn't support (defaults to `false`).\n- `remote_device_id: non_neg_integer()` - Optional. Adds the remote BACnet device ID to the object (ID is used for trend logging).\n- `revision: Constants.protocol_revision()` - Optional. The BACnet protocol revision to check the properties against.\n- `object_opts: Keyword.t()` - Optional. All other object creation options to pass to the `create` function.","ref":"BACnet.Protocol.ObjectsUtility.html#cast_properties_to_object/3"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.cast_property_to_value/4","doc":"Casts a property from application tag `Encoding` to a more sane data type.\n\nTo cast the property to the proper data type, the correct object module needs to be known,\nwhich contains that property. The object module will tell us which data type should it be.\nAs such, an object identifier is required.\n\nNote: In prod environment, required modules are not explicitely loaded.\n\nThe following options are available:\n- `allow_partial: boolean()` - Optional. Allows partial values of array or list properties (a single value).","ref":"BACnet.Protocol.ObjectsUtility.html#cast_property_to_value/4"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.cast_read_properties_ack/3","doc":"Casts the properties and its values from `Read-Property-(Multiple-)Ack`s into a map of properties.\n\nNote: In prod environment, required modules are not explicitely loaded.\n\nThe following options are available:\n- `ignore_array_indexes: boolean()` - Optional. Ignores property array indexes as they are currently not supported (defaults to `false`).\n- `ignore_invalid_properties: boolean()` - Optional. Ignores invalid properties (defaults to `false`).\n- `ignore_object_identifier_mismatch: boolean()` - Optional. Ignores mismatches between object identifiers (defaults to `false`).\n- `ignore_unknown_properties: boolean()` - Optional. Ignores unknown property identifiers (defaults to `false`).","ref":"BACnet.Protocol.ObjectsUtility.html#cast_read_properties_ack/3"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.cast_value_to_property/4","doc":"Casts a property value to application tag `Encoding`.\n\nTo cast the property from the proper data type, the correct object module needs to be known,\nwhich contains that property. The object module will tell us which data type should it be.\nAs such, an object identifier is required. No validation happens on the data.\n\nNote: In prod environment, required modules are not explicitely loaded.\n\nThe following options are available:\n- `allow_nil: boolean()` - Optional. Allows `nil` values (only useful for present value with write priority).\n- `allow_partial: boolean()` - Optional. Allows partial values of array or list properties (a single value).","ref":"BACnet.Protocol.ObjectsUtility.html#cast_value_to_property/4"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.delete_object_type_mapping/1","doc":"Delete an object type to module relationship from the mappings.\n\nSee also `get_object_type_mappings/0` for more information.","ref":"BACnet.Protocol.ObjectsUtility.html#delete_object_type_mapping/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_object_identifier/1","doc":"Get the object identifier for the BACnet object. The `bacnet_object` contract is enforced.","ref":"BACnet.Protocol.ObjectsUtility.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_object_type/1","doc":"Get the BACnet object type. The `bacnet_object` contract is enforced.","ref":"BACnet.Protocol.ObjectsUtility.html#get_object_type/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_object_type_mappings/0","doc":"Get the object type to module mappings.\n\nThis mapping is used for object properties casting (such as `cast_property_to_value/4`).\nThis mapping is stored in `:persistent_term` and is automatically populated on first use\nwith all object types from the `bacstack` application.","ref":"BACnet.Protocol.ObjectsUtility.html#get_object_type_mappings/0"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectsUtility.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectsUtility.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_property/2","doc":"Get the property of an object (see `t:bacnet_object/0`).\n\nThis function calls to the object module directly, as such it enforces the `t:bacnet_object/0` contract.","ref":"BACnet.Protocol.ObjectsUtility.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.get_remote_device_id/1","doc":"Get the remote device ID for remote objects.\n\nFor remote objects with no remote device ID attached,\nthis function will return `:error`.\nFor local objects, this function will return `nil`.","ref":"BACnet.Protocol.ObjectsUtility.html#get_remote_device_id/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.has_priority_array?/1","doc":"Checks whether the given object has a priority array.\nThis function does not verify if the property is in the properties list of the object.","ref":"BACnet.Protocol.ObjectsUtility.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.has_property?/2","doc":"Checks if the given object has the given property.\n\n> #### Implementation Detail {: .info}\n> This function is O(n), as it traverses the properties list.\n> This actually represents what on the BACnet side can be seen, as only properties in the\n> properties list can be used (observable).","ref":"BACnet.Protocol.ObjectsUtility.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectsUtility.html#intrinsic_reporting?/1"},{"type":"macro","title":"BACnet.Protocol.ObjectsUtility.is_object/1","doc":"Checks whether the given struct is a supported BACnet object (see `t:bacnet_object/0`).\n\nNote: This guard is not widely used by this module itself, but may be useful for others.","ref":"BACnet.Protocol.ObjectsUtility.html#is_object/1"},{"type":"macro","title":"BACnet.Protocol.ObjectsUtility.is_object_intrinsic/1","doc":"Checks whether the given BACnet object has Intrinsic Reporting enabled.\n\nThis is the same functionality as `intrinsic_reporting?/1`, but as a guard.","ref":"BACnet.Protocol.ObjectsUtility.html#is_object_intrinsic/1"},{"type":"macro","title":"BACnet.Protocol.ObjectsUtility.is_object_local/1","doc":"Checks whether the given BACnet object is a local object (identified through metadata).\n\nA local object is a BACnet object that resides in the local BACnet device (this bacstack).","ref":"BACnet.Protocol.ObjectsUtility.html#is_object_local/1"},{"type":"macro","title":"BACnet.Protocol.ObjectsUtility.is_object_remote/1","doc":"Checks whether the given BACnet object is a remote object (identified through metadata).\n\nA remote object is a BACnet object that resides in a remote BACnet device - as such\nsome operations don't work (such as adding optional properties).","ref":"BACnet.Protocol.ObjectsUtility.html#is_object_remote/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.property_writable?/2","doc":"Checks if the given property is writable.\n\nThis implementation checks for arbitary properties, if the property exists\nand is not annotated as readonly. For commandable objects and the present value, it\nchecks if the object is out of service. For the event algorithm inhibit property,\nit checks if ref is absent or uninitialized and event detection is enabled.\n\nObject-specific behaviour are not checked and should instead be directly checked\nthrough the object module.","ref":"BACnet.Protocol.ObjectsUtility.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.put_many_object_type_mapping/1","doc":"Put many object type to module relationships into the mappings at once.\n\nSee also `get_object_type_mappings/0` for more information.","ref":"BACnet.Protocol.ObjectsUtility.html#put_many_object_type_mapping/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.put_object_type_mapping/2","doc":"Put an object type to module relationship into the mappings.\n\nSee also `get_object_type_mappings/0` for more information.","ref":"BACnet.Protocol.ObjectsUtility.html#put_object_type_mapping/2"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.remove_property/2","doc":"Removes an optional property from an object (see `t:bacnet_object/0`). This function is idempotent.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created. Required properties can not be removed.\n\nThis function calls to the object module directly, as such it enforces the `t:bacnet_object/0` contract.","ref":"BACnet.Protocol.ObjectsUtility.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.set_priority/3","doc":"Sets the given priority in the priority array of an object (see `t:bacnet_object/0`).\nThis function also updates the present value.\n\nThis function calls to the object module directly, as such it enforces the `t:bacnet_object/0` contract,\nand additionally only objects with a priority array can be used.","ref":"BACnet.Protocol.ObjectsUtility.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.to_list/1","doc":"Turns the given object's properties with their values into a keyword list.\nOnly properties in the properties list are taken. The `bacnet_object` contract is enforced.\n\nThe key `:object_instance` will be converted into `:object_identifier`.\n\nThe list is sorted in ascending order by the property name.","ref":"BACnet.Protocol.ObjectsUtility.html#to_list/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.to_map/1","doc":"Turns the given object's properties with their values into a map.\nOnly properties in the properties list are taken. The `bacnet_object` contract is enforced.\n\nThe key `:object_instance` will be converted into `:object_identifier`.","ref":"BACnet.Protocol.ObjectsUtility.html#to_map/1"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.truncate_float_properties/3","doc":"Truncates each property, which is a float, to the given precision (float rounding).\n\nWhen giving an integer as precision, this function will behave just like `Float.round/2`.\nWhen giving a float as precision, this function will determine\nthe precision (i.e. 1 for `0.1`, 2 for `0.01`, 0 for any value >= `1.0` or `0.0`).\nThe float value itself is not relevant, only how many decimal points there are.\n\nDepending on the selected mode, the float will be rounded or the value is truncated.","ref":"BACnet.Protocol.ObjectsUtility.html#truncate_float_properties/3"},{"type":"function","title":"BACnet.Protocol.ObjectsUtility.update_property/3","doc":"Updates a property of an object (see `t:bacnet_object/0`).\n\nThis function calls to the object module directly, as such it enforces the `t:bacnet_object/0` contract.","ref":"BACnet.Protocol.ObjectsUtility.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectsUtility.bacnet_object/0","doc":"BACnet object types that this module works with.","ref":"BACnet.Protocol.ObjectsUtility.html#t:bacnet_object/0"},{"type":"type","title":"BACnet.Protocol.ObjectsUtility.cast_properties_to_object_option/0","doc":"Valid options for `cast_properties_to_object/3`.","ref":"BACnet.Protocol.ObjectsUtility.html#t:cast_properties_to_object_option/0"},{"type":"type","title":"BACnet.Protocol.ObjectsUtility.cast_property_to_value_option/0","doc":"Valid options for `cast_property_to_value/4`.","ref":"BACnet.Protocol.ObjectsUtility.html#t:cast_property_to_value_option/0"},{"type":"type","title":"BACnet.Protocol.ObjectsUtility.cast_read_properties_ack_option/0","doc":"Valid options for `cast_read_properties_ack/3`.","ref":"BACnet.Protocol.ObjectsUtility.html#t:cast_read_properties_ack_option/0"},{"type":"type","title":"BACnet.Protocol.ObjectsUtility.cast_value_to_property_option/0","doc":"Valid options for `cast_value_to_property/4`.","ref":"BACnet.Protocol.ObjectsUtility.html#t:cast_value_to_property_option/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Accumulator","doc":"The Accumulator object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a device that indicates\nmeasurements made by counting pulses.\n\nThis object maintains precise measurement of input count values, accumulated over time.\nThe accumulation of pulses represents the measured quantity in unsigned integer units.\nThis object is also concerned with the accurate representation of values presented\non meter read-outs. This includes the ability to initially set the Present_Value\nproperty to the value currently displayed by the meter (as when the meter is installed),\nand to duplicate the means by which it is advanced, including simulating a\nmodulo-N divider prescaling the actual meter display value, as shown in Figure 12-1.\n\nTypical applications of such devices are in peak load management and in accounting\nand billing management systems. This object is not intended to meet all such applications.\n\nIts purpose is to provide information about the quantity being measured,\nsuch as electric power, water, or natural gas usage, according to criteria\nspecific to the application.\n\nAccumulator objects that support intrinsic reporting shall apply the UNSIGNED_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.1)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `accumulator`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| limit_monitoring_interval |  |  |  |  | X |\n| logging_object |  |  |  |  |  |\n| logging_record |  |  | X |  |  |\n| low_limit |  |  |  |  | X |\n| max_present_value |  | X |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| prescale |  | X |  |  |  |\n| present_value |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| pulse_rate |  |  |  |  | X |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| scale |  | X |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n| value_before_change |  |  | X |  |  |\n| value_change_time |  |  | X |  |  |\n| value_set |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| limit_monitoring_interval | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| max_present_value | X |  |  |  |  |\n| present_value | X |  |  |  |  |\n| pulse_rate |  |  | limit_monitoring_interval |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| units | X |  |  |  |  |\n| value_before_change | X |  | value_change_time |  |  |\n| value_change_time |  | X |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| high_limit | `0` |  |\n| limit_monitoring_interval | `1` |  |\n| low_limit | `0` |  |\n| max_present_value | `4294967295` |  |\n| present_value | `0` |  |\n| units | `:no_units` |  |\n| value_before_change | `0` |  |\n| value_change_time |  | `BACnet.Protocol.ObjectsMacro.get_default_bacnet_datetime/0` |","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Accumulator.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Accumulator.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Accumulator.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Accumulator.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Accumulator.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Accumulator.t/0","doc":"Represents an Accumulator object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nThe `max_present_value` property defaults to `2^32-1` and can be manually\nset to a higher value, if desired and/or needed.","ref":"BACnet.Protocol.ObjectTypes.Accumulator.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.AnalogInput","doc":"The Analog Input object type defines a standardized object whose properties represent\nthe externally visible characteristics of an analog input.\n\nAnalog Input objects that support intrinsic reporting shall apply the OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.2)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `analog_input`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| max_present_value |  |  |  |  |  |\n| min_present_value |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| resolution |  |  | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n| update_interval |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  | Fun |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| resolution | X |  |  |  |  |\n| units | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| cov_increment | `0.1` |  |\n| deadband | `0.0` |  |\n| high_limit | `0.0` |  |\n| low_limit | `0.0` |  |\n| present_value | `0.0` |  |\n| resolution | `0.1` |  |\n| units | `:no_units` |  |","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0.1` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogInput.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogInput.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogInput.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogInput.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogInput.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogInput.t/0","doc":"Represents an Analog Input object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.","ref":"BACnet.Protocol.ObjectTypes.AnalogInput.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.AnalogOutput","doc":"The Analog Output object type defines a standardized object whose properties represent\nthe externally visible characteristics of an analog output.\n\nAnalog Output objects that support intrinsic reporting shall apply the OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.3)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `analog_output`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| max_present_value |  |  |  |  |  |\n| min_present_value |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  | X |  |  |  |\n| resolution |  |  | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  | Fun |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  | Fun |  |\n| units | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| cov_increment | `0.1` |  |\n| deadband | `0.0` |  |\n| high_limit | `0.0` |  |\n| low_limit | `0.0` |  |\n| present_value | `0.0` |  |\n| relinquish_default | `0.0` |  |\n| units | `:no_units` |  |","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0.1` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogOutput.t/0","doc":"Represents an Analog Output object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogOutput.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.AnalogValue","doc":"The Analog Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of an analog value.\nAn \"analog value\" is a control system parameter residing in the memory of the BACnet Device.\n\nAnalog Value objects that support intrinsic reporting shall apply the OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.4)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `analog_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| max_present_value |  |  |  |  |  |\n| min_present_value |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| resolution |  |  | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  | Fun |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  | Fun |  |\n| units | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| cov_increment | `0.1` |  |\n| deadband | `0.0` |  |\n| high_limit | `0.0` |  |\n| low_limit | `0.0` |  |\n| present_value | `0.0` |  |\n| relinquish_default | `0.0` |  |\n| units | `:no_units` |  |","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0.1` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.AnalogValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.AnalogValue.t/0","doc":"Represents an Analog Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.AnalogValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Averaging","doc":"The Averaging object type defines a standardized object whose properties represent\nthe externally visible characteristics of a value that is sampled periodically over\na specified time interval. The Averaging object records the minimum, maximum and\naverage value over the interval, and makes these values visible as properties of\nthe Averaging object. The sampled value may be the value of any BOOLEAN, INTEGER,\nUnsigned, Enumerated or REAL property value of any object within the BACnet\nDevice in which the object resides. Optionally, the object property to be sampled\nmay exist in a different BACnet Device.\n\nThe Averaging object shall use a \"sliding window\" technique that maintains a buffer\nof N samples distributed over the specified interval. Every (time interval/N) seconds\na new sample is recorded displacing the oldest sample from the buffer. At this time,\nthe minimum, maximum and average are recalculated. The buffer shall maintain an\nindication for each sample that permits the average calculation and minimum/maximum\nalgorithm to determine the number of valid samples in the buffer.\n\n(ASHRAE 135 - Clause 12.5)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `averaging`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| attempted_samples |  | X |  |  |  |\n| average_value |  | X | X |  |  |\n| description |  |  |  |  |  |\n| max_value |  | X | X |  |  |\n| max_value_timestamp |  |  | X |  |  |\n| min_value |  | X | X |  |  |\n| min_value_timestamp |  |  | X |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| object_property_reference |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| valid_samples |  | X | X |  |  |\n| variance_value |  |  | X |  |  |\n| window_interval |  | X |  |  |  |\n| window_samples |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| attempted_samples | X |  |  |  |  |\n| average_value | X |  |  |  |  |\n| max_value | X |  |  |  |  |\n| max_value_timestamp | X |  |  |  |  |\n| min_value | X |  |  |  |  |\n| min_value_timestamp | X |  |  |  |  |\n| object_property_reference | X |  |  |  |  |\n| valid_samples | X |  |  |  |  |\n| variance_value | X |  |  |  |  |\n| window_samples | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| attempted_samples | `0` |  |\n| average_value | `:NaN` |  |\n| max_value | `:infn` |  |\n| max_value_timestamp | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| min_value | `:inf` |  |\n| min_value_timestamp | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| object_property_reference | `%BACnet.Protocol.DeviceObjectPropertyRef{...}` |  |\n| valid_samples | `0` |  |\n| variance_value | `:NaN` |  |\n| window_samples | `0` |  |","ref":"BACnet.Protocol.ObjectTypes.Averaging.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Averaging.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Averaging.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Averaging.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Averaging.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Averaging.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Averaging.t/0","doc":"Represents an Averaging object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Averaging.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.BinaryInput","doc":"The Binary Input object type defines a standardized object whose properties represent\nthe externally visible characteristics of a binary input.\nA \"binary input\" is a physical device or hardware input that can be in only one of two distinct states.\nIn this description, those states are referred to as ACTIVE (`true`) and INACTIVE (`false`).\nA typical use of a binary input is to indicate whether a particular piece of mechanical equipment,\nsuch as a fan or pump, is running or idle.\n\nThe state ACTIVE corresponds to the situation when the equipment is on or running,\nand INACTIVE corresponds to the situation when the equipment is off or idle.\n\nIn some applications, electronic circuits may reverse the relationship between the application-level\nlogical states ACTIVE and INACTIVE and the physical state of the underlying hardware.\nFor example, a normally open relay contact may result in an ACTIVE state when the relay is energized,\nwhile a normally closed relay contact may result in an INACTIVE state when the relay is energized.\nThe Binary Input object provides for this possibility by including a Polarity property.\n\nBinary Input objects that support intrinsic reporting shall apply the CHANGE_OF_STATE event algorithm.\n\n(ASHRAE 135 - Clause 12.6)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `binary_input`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| active_text |  |  |  |  |  |\n| alarm_value |  |  |  |  | X |\n| change_of_state_count |  |  |  |  |  |\n| change_of_state_time |  |  |  |  |  |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| elapsed_active_time |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| inactive_text |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| polarity |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| time_of_active_time_reset |  |  |  |  |  |\n| time_of_state_count_reset |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| active_text | X |  | inactive_text |  |  |\n| alarm_value | X |  |  |  | `encode_as: :enumerated` |\n| change_of_state_count | X |  |  |  |  |\n| change_of_state_time | X |  | change_of_state_count |  |  |\n| elapsed_active_time | X |  | time_of_active_time_reset | Type |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| inactive_text | X |  |  |  |  |\n| polarity | X |  |  |  |  |\n| present_value | X |  |  |  | `encode_as: :enumerated` |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| time_of_active_time_reset | X |  |  |  |  |\n| time_of_state_count_reset | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| active_text | `\"Active\"` |  |\n| alarm_value | `true` |  |\n| change_of_state_count | `0` |  |\n| change_of_state_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| elapsed_active_time | `0` |  |\n| inactive_text | `\"Inactive\"` |  |\n| polarity | `:normal` |  |\n| time_of_active_time_reset | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| time_of_state_count_reset | `%BACnet.Protocol.BACnetDateTime{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.set_input/2","doc":"Sets the physical input and writes to the present value property in respect to the polarity.\n\nIf the object is out of service, the present value won't be updated.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#set_input/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryInput.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryInput.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryInput.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryInput.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryInput.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryInput.t/0","doc":"Represents a Binary Input object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nThe physical input decouples the present value and the polarity from the physical state.\nThe present value reflects the logical state of the object.\nTo set the logical state, call `set_input/2` and the function writes to the present value in respect to the polarity.\nThe physical input is NOT a real BACnet property.","ref":"BACnet.Protocol.ObjectTypes.BinaryInput.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.BinaryOutput","doc":"The Binary Output object type defines a standardized object whose properties represent\nthe externally visible characteristics of a binary output.\nA \"binary output\" is a physical device or hardware output that can be in only one of two distinct states.\nIn this description, those states are referred to as ACTIVE (`true`) and INACTIVE (`false`).\nA typical use of a binary output is to switch a particular piece of mechanical equipment,\nsuch as a fan or pump, on or off. The state ACTIVE corresponds to the situation when the\nequipment is on or running, and INACTIVE corresponds to the situation when the equipment is off or idle.\n\nIn some applications, electronic circuits may reverse the relationship between the application-level\nlogical states, ACTIVE and INACTIVE, and the physical state of the underlying hardware.\nFor example, a normally open relay contact may result in an ACTIVE state (device energized) when the relay\nis energized, while a normally closed relay contact may result in an ACTIVE state (device energized) when\nthe relay is not energized. The Binary Output object provides for this possibility by\nincluding a Polarity property.\n\nBinary Output objects that support intrinsic reporting shall apply the COMMAND_FAILURE event algorithm.\n\n(ASHRAE 135 - Clause 12.7)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `binary_output`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| active_text |  |  |  |  |  |\n| change_of_state_count |  |  |  |  |  |\n| change_of_state_time |  |  |  |  |  |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| elapsed_active_time |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| feedback_value |  |  |  |  | X |\n| inactive_text |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| min_off_time |  |  |  |  |  |\n| min_on_time |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| polarity |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  | X |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| time_of_active_time_reset |  |  |  |  |  |\n| time_of_state_count_reset |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| active_text | X |  | inactive_text |  |  |\n| change_of_state_count | X |  |  |  |  |\n| change_of_state_time | X |  | change_of_state_count |  |  |\n| elapsed_active_time | X |  | time_of_active_time_reset | Type |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| feedback_value | X |  |  |  | `encode_as: :enumerated` |\n| inactive_text | X |  |  |  |  |\n| min_off_time |  |  |  | Type |  |\n| min_on_time |  |  |  | Type |  |\n| polarity | X |  |  |  |  |\n| present_value | X |  |  |  | `encode_as: :enumerated` |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  |  | `encode_as: :enumerated` |\n| time_of_active_time_reset | X |  |  |  |  |\n| time_of_state_count_reset | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| active_text | `\"Active\"` |  |\n| change_of_state_count | `0` |  |\n| change_of_state_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| elapsed_active_time | `0` |  |\n| inactive_text | `\"Inactive\"` |  |\n| polarity | `:normal` |  |\n| time_of_active_time_reset | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| time_of_state_count_reset | `%BACnet.Protocol.BACnetDateTime{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_output/1","doc":"Get the logical state of the object from the present value property in respect to the polarity.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_output/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryOutput.t/0","doc":"Represents a Binary Output object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nThe physical output decouples the present value and the polarity from the physical state.\nThe present value reflects the logical state of the object.\nTo get the physical state, call `get_output/1` and the function gets the present value in respect to the polarity.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryOutput.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.BinaryValue","doc":"The Binary Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a binary value.\nA \"binary value\" is a control system parameter residing in the memory of the BACnet Device.\nThis parameter may assume only one of two distinct states.\nIn this description, those states are referred to as ACTIVE and INACTIVE.\n\nBinary Value objects that support intrinsic reporting shall apply the CHANGE_OF_STATE event algorithm.\n\n(ASHRAE 135 - Clause 12.8)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `binary_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| active_text |  |  |  |  |  |\n| alarm_value |  |  |  |  | X |\n| change_of_state_count |  |  |  |  |  |\n| change_of_state_time |  |  |  |  |  |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| elapsed_active_time |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| inactive_text |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| min_off_time |  |  |  |  |  |\n| min_on_time |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| polarity |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| time_of_active_time_reset |  |  |  |  |  |\n| time_of_state_count_reset |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| active_text | X |  | inactive_text |  |  |\n| alarm_value | X |  |  |  | `encode_as: :enumerated` |\n| change_of_state_count | X |  |  | Type |  |\n| change_of_state_time | X |  | change_of_state_count |  |  |\n| elapsed_active_time | X |  | time_of_active_time_reset | Type |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| inactive_text | X |  |  |  |  |\n| min_off_time |  |  |  | Type |  |\n| min_on_time |  |  |  | Type |  |\n| polarity | X |  |  |  |  |\n| present_value | X |  |  |  | `encode_as: :enumerated` |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  |  | `encode_as: :enumerated` |\n| time_of_active_time_reset | X |  |  |  |  |\n| time_of_state_count_reset | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| active_text | `\"Active\"` |  |\n| alarm_value | `true` |  |\n| change_of_state_count | `0` |  |\n| change_of_state_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| elapsed_active_time | `0` |  |\n| inactive_text | `\"Inactive\"` |  |\n| polarity | `:normal` |  |\n| time_of_active_time_reset | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| time_of_state_count_reset | `%BACnet.Protocol.BACnetDateTime{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_output/1","doc":"Get the logical state of the object from the present value property in respect to the polarity.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_output/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BinaryValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BinaryValue.t/0","doc":"Represents a Binary Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nThe physical output decouples the present value and the polarity from the physical state.\nThe present value reflects the logical state of the object.\nTo get the physical state, call `get_output/1` and the function gets the present value in respect to the polarity.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.BinaryValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.BitstringValue","doc":"The Bitstring Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a named data value\nin a BACnet device. A BACnet device can use a Bitstring Value object to make\nany kind of bitstring data value accessible to other BACnet devices.\nThe mechanisms by which the value is derived are not visible to the BACnet\nclient.\n\nBitstring Value objects that support intrinsic reporting shall apply\nthe CHANGE_OF_BITSTRING event algorithm.\n\n(ASHRAE 135 - Clause 12.40)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `bitstring_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| alarm_values |  |  |  |  | X |\n| bit_mask |  |  |  |  | X |\n| bit_text |  |  |  |  |  |\n| description |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  |  |  |  | X |\n| event_timestamps |  |  | X |  | X |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| alarm_values | X |  |  | Fun |  |\n| bit_text | X |  |  | Fun |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| present_value |  |  |  | Fun |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default |  |  |  | Fun |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| alarm_values | `[]` |  |\n| bit_text | `%BACnet.Protocol.BACnetArray{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.BitstringValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BitstringValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BitstringValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BitstringValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BitstringValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.BitstringValue.t/0","doc":"Represents a Bitstring Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.BitstringValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Calendar","doc":"The Calendar object type defines a standardized object used to describe\na list of calendar dates, which might be thought of as \"holidays\", \"special events\",\nor simply as a list of dates.\n\n(ASHRAE 135 - Clause 12.9)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `calendar`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| date_list |  | X |  |  |  |\n| description |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| present_value |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| date_list | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| date_list | `[]` |  |","ref":"BACnet.Protocol.ObjectTypes.Calendar.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Calendar.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Calendar.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Calendar.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Calendar.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Calendar.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Calendar.t/0","doc":"Represents a Calendar object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Calendar.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue","doc":"The CharacterString Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a CharacterString Value object to make any kind of character\nstring data value accessible to other BACnet devices. The mechanisms by which the\nvalue is derived are not visible to the BACnet client.\n\nIf a set of strings is known and fixed, then a Multi-state Value object is an alternative\nthat may provide some benefit to automated processes consuming the numeric Present_Value.\nCharacterString Value objects that support intrinsic reporting shall apply the\nCHANGE_OF_CHARACTERSTRING event algorithm.\n\nFor reliability-evaluation, the FAULT_CHARACTERSTRING fault algorithm can be applied.\n\n(ASHRAE 135 - Clause 12.37)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `character_string_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| alarm_values |  |  |  |  | X |\n| description |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  |  |  |  | X |\n| event_timestamps |  |  | X |  | X |\n| fault_values |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| alarm_values | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| fault_values | X |  |  |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  | `required_when: {:property, :fault_values}` |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| alarm_values | `%BACnet.Protocol.BACnetArray{...}` |  |\n| fault_values | `%BACnet.Protocol.BACnetArray{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.CharacterStringValue.t/0","doc":"Represents a Character String Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.CharacterStringValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Command","doc":"The Command object type defines a standardized object whose properties represent\nthe externally visible characteristics of a multi-action command procedure.\nA Command object is used to write a set of values to a group of object properties,\nbased on the \"action code\" that is written to the Present_Value of the Command object.\nWhenever the Present_Value property of the Command object is written to,\nit triggers the Command object to take a set of actions that change the values of\na set of other objects' properties.\n\nThe Command object would typically be used to represent a complex context involving\nmultiple variables. The Command object is particularly useful for representing contexts\nthat have multiple states. For example, a particular zone of a building might have\nthree states: UNOCCUPIED, WARMUP, and OCCUPIED. To establish the operating context\nfor each state, numerous objects' properties may need to be changed to a collection\nof known values. For example, when unoccupied, the temperature setpoint might be 18°C\nand the lights might be off. When occupied, the setpoint might be 22°C and the lights\nturned on, etc.\n\nThe Command object defines the relationship between a given state and those values\nthat shall be written to a collection of different objects' properties to realize that state.\nNormally, a Command object is passive. Its In_Process property is FALSE, indicating\nthat the Command object is waiting for its Present_Value property to be written with a value.\nWhen Present_Value is written, the Command object shall begin a sequence of actions.\nThe In_Process property shall be set to TRUE, indicating that the Command object has begun\nprocessing one of a set of action sequences that is selected based on the particular value\nwritten to the Present_Value property. If an attempt is made to write to the Present_Value\nproperty through WriteProperty services while In_Process is TRUE, then a Result(-) shall be\nreturned with 'error class' = OBJECT and 'error code' = BUSY, rejecting the write.\n\nThe new value of the Present_Value property determines which sequence of actions the Command\nobject shall take. These actions are specified in an array of action lists indexed by this value.\nThe Action property contains these lists. A given list may be empty, in which case no action\ntakes place, except that In_Process is returned to FALSE and All_Writes_Successful is set to TRUE.\nIf the list is not empty, then for each action in the list the Command object shall write a\nparticular value to a particular property of a particular object in a particular BACnet Device.\nNote, however, that the capability to write to remote devices is not required.\nNote also that the Command object does not guarantee that every write will be successful,\nand no attempt is made by the Command object to \"roll back\" successfully written properties\nto their previous values in the event that one or more writes fail. If any of the writes fail,\nthen the All_Writes_Successful property is set to FALSE and the Write_Successful flag for that\nBACnetActionCommand is set to FALSE. If the Quit_On_Failure flag is TRUE for the failed\nBACnetActionCommand, then all subsequent BACnetActionCommands in the list shall have their\nWrite_Successful flag set to FALSE. If an individual write succeeds, then the Write_Successful flag\nfor that BACnetActionCommand shall be set to TRUE. If all the writes are successful,\nthen the All_Writes_Successful property is set to TRUE. Once all the writes have been processed\nto completion by the Command object, the In_Process property is set back to FALSE and the\nCommand object becomes passive again, waiting for another command.\n\nIt is important to note that the particular value that is written to the Present_Value property\nis not what triggers the action, but the act of writing itself. Thus if the Present_Value property\nhas the value 5 and it is again written with the value 5, then the 5th list of actions will be\nperformed again. Writing zero to the Present_Value causes no action to be taken and is the same as\ninvoking an empty list of actions. The Command object is a powerful concept with many beneficial applications.\nHowever, there are unique aspects of the Command object that can cause confusing or destructive side effects\nif the Command object is improperly configured. Since the Command object can manipulate other\nobjects' properties, it is possible that a Command object could be configured to command itself.\nIn such a case, the In_Process property acts as an interlock and protects the Command object\nfrom selfoscillation.\nHowever, it is also possible for a Command object to command another Command object that commands the first\nCommand object and so on. The possibility exists for Command objects that command GROUP objects.\nIn these cases of \"circular referencing,\" it is possible for confusing side effects to occur.\nWhen references occur to objects in other BACnet Devices, there is an increased possibility of time delays,\nwhich could cause oscillatory behavior between Command objects that are improperly configured\nin such a circular manner. Caution should be exercised when configuring Command objects\nthat reference objects outside the BACnet device that contains them.\n\n(ASHRAE 135 - Clause 12.10)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `command`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| action |  | X | X |  |  |\n| action_text |  |  |  |  |  |\n| all_writes_successful |  | X | X |  |  |\n| description |  |  |  |  |  |\n| in_process |  | X |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| present_value |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| action | X |  |  |  |  |\n| action_text |  |  |  | Fun |  |\n| present_value | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| action | `%BACnet.Protocol.BACnetArray{...}` |  |\n| present_value | `0` |  |","ref":"BACnet.Protocol.ObjectTypes.Command.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Command.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Command.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Command.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Command.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Command.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Command.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Command.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Command.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Command.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Command.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Command.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Command.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Command.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Command.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Command.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Command.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Command.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Command.t/0","doc":"Represents a Command object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Command.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.DatePatternValue","doc":"The Date Pattern Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a Date Pattern Value object to make any kind of date data\nvalue accessible to other BACnet devices. The mechanisms by which the value is derived\nare not visible to the BACnet client.\n\nDate Pattern objects can be used to represent multiple recurring dates based on rules\ndefined by the pattern of individual fields of the date, some of which can be\nspecial values like \"even months\", or \"don't care\", which matches any value in that field.\n\nExamples of possibilities would be: \"every Thursday in May of any year\", or \"every day in May 2009\".\n\n(ASHRAE 135 - Clause 12.48)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `date_pattern_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DatePatternValue.t/0","doc":"Represents a Date Pattern Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.DatePatternValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue","doc":"The DateTime Pattern Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a DateTime Pattern Value object to make any kind of datetime data\nvalue accessible to other BACnet devices. The mechanisms by which the value is derived are\nnot visible to the BACnet client.\n\nDateTime Pattern objects can be used to represent multiple recurring dates and times based\non rules defined by the pattern of individual fields of the date and time, some of which\ncan be special values like \"even months\", or \"don't care\", which matches any value in that field.\n\nExamples of possibilities would be: \"11:00 every Thursday in any June\", or \"every day in\nMay 2009\".\n\n(ASHRAE 135 - Clause 12.46)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `datetime_pattern_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| is_utc |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.t/0","doc":"Represents a DateTime Pattern Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimePatternValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.DateTimeValue","doc":"The DateTime Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a DateTime Value object to make any kind of datetime data value\naccessible to other BACnet devices. The mechanisms by which the value is derived are not\nvisible to the BACnet client. A DateTime Value object is used to represent a\nsingle moment in time. In contrast, the DateTime Pattern Value object can be used to\nrepresent multiple recurring dates and times.\n\n(ASHRAE 135 - Clause 12.38)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `datetime_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| is_utc |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateTimeValue.t/0","doc":"Represents a DateTime Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.DateTimeValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.DateValue","doc":"The Date Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a Date Value object to make any kind of date data value\naccessible to other BACnet devices. The mechanisms by which the value is derived\nare not visible to the BACnet client.\nA Date Value object is used to represent a single day. In contrast,\nthe Date Pattern Value object can be used to represent multiple recurring dates.\n\n(ASHRAE 135 - Clause 12.45)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `date_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.DateValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.DateValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.DateValue.t/0","doc":"Represents a Date Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.DateValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Device","doc":"The Device object type defines a standardized object whose properties represent\nthe externally visible characteristics of a BACnet Device.\nThere shall be exactly one Device object in each BACnet Device.\nA Device object is referenced by its Object_Identifier property,\nwhich is not only unique to the BACnet Device that maintains this object\nbut is also unique throughout the BACnet internetwork.\n\n(ASHRAE 135 - Clause 12.11)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `device`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| active_cov_subscriptions |  |  | X |  |  |\n| align_intervals |  |  |  |  |  |\n| apdu_segment_timeout |  |  | X |  |  |\n| apdu_timeout |  | X | X |  |  |\n| application_software_version |  | X | X |  |  |\n| auto_slave_discovery |  |  |  |  |  |\n| backup_and_restore_state |  |  | X |  |  |\n| backup_failure_timeout |  |  | X |  |  |\n| backup_preparation_time |  |  | X |  |  |\n| configuration_files |  |  | X |  |  |\n| database_revision |  | X | X |  |  |\n| daylight_savings_status |  |  | X |  |  |\n| description |  |  |  |  |  |\n| device_address_binding |  | X |  |  |  |\n| firmware_revision |  | X | X |  |  |\n| interval_offset |  |  |  |  |  |\n| last_restart_reason |  |  | X |  |  |\n| last_restore_time |  |  | X |  |  |\n| local_date |  |  | X |  |  |\n| local_time |  |  | X |  |  |\n| location |  |  |  |  |  |\n| manual_slave_address_binding |  |  |  |  |  |\n| max_apdu_length_accepted |  | X | X |  |  |\n| max_info_frames |  |  | X |  |  |\n| max_master |  |  | X |  |  |\n| max_segments_accepted |  |  | X |  |  |\n| model_name |  | X | X |  |  |\n| number_of_apdu_retries |  | X | X |  |  |\n| object_instance |  | X | X |  |  |\n| object_list |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| protocol_object_types_supported |  | X | X |  |  |\n| protocol_revision |  | X | X |  |  |\n| protocol_services_supported |  | X | X |  |  |\n| protocol_version |  | X | X |  |  |\n| restart_notification_recipients |  |  |  |  |  |\n| restore_completion_time |  |  | X |  |  |\n| restore_preparation_time |  |  | X |  |  |\n| segmentation_supported |  | X | X |  |  |\n| serial_number |  |  |  |  |  |\n| slave_address_binding |  |  |  |  |  |\n| slave_proxy_enable |  |  |  |  |  |\n| structured_object_list |  | X | X |  |  |\n| time_of_device_restart |  |  | X |  |  |\n| time_synchronization_recipients |  |  |  |  |  |\n| utc_offset |  |  | X |  |  |\n| utc_time_synchronization_recipients |  |  |  |  |  |\n| vendor_identifier |  | X | X |  |  |\n| vendor_name |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| active_cov_subscriptions | X |  |  |  |  |\n| align_intervals | X |  | interval_offset |  |  |\n| apdu_segment_timeout |  |  |  |  | `required_when: {:{}, [line: 123, column: 35], [:property, :segmentation_supported, :!=, :no_segmentation]}` |\n| apdu_timeout | X |  |  |  |  |\n| application_software_version | X |  |  |  |  |\n| auto_slave_discovery |  |  | slave_address_binding |  |  |\n| backup_and_restore_state |  |  |  |  | `required_when: {:opts, :supports_backup_restore}` |\n| backup_failure_timeout |  |  | backup_preparation_time | Type | `required_when: {:opts, :supports_backup_restore}` |\n| backup_preparation_time |  |  | restore_preparation_time | Type | `required_when: {:opts, :supports_backup_restore}` |\n| configuration_files |  |  | last_restore_time |  | `required_when: {:opts, :supports_backup_restore}` |\n| database_revision | X |  |  |  |  |\n| device_address_binding | X |  |  |  |  |\n| firmware_revision | X |  |  |  |  |\n| interval_offset | X |  |  |  |  |\n| last_restart_reason | X |  | time_of_device_restart |  |  |\n| last_restore_time |  |  | backup_failure_timeout |  | `required_when: {:opts, :supports_backup_restore}` |\n| local_date |  | X |  |  |  |\n| local_time |  | X |  |  |  |\n| manual_slave_address_binding | X |  |  |  |  |\n| max_apdu_length_accepted | X |  |  |  |  |\n| max_master |  |  | max_info_frames | Type |  |\n| max_segments_accepted |  |  |  |  | `required_when: {:{}, [line: 128, column: 35], [:property, :segmentation_supported, :!=, :no_segmentation]}` |\n| model_name | X |  |  |  |  |\n| number_of_apdu_retries | X |  |  |  |  |\n| object_list | X |  |  |  |  |\n| protocol_object_types_supported | X |  |  |  |  |\n| protocol_revision | X |  |  |  |  |\n| protocol_services_supported | X |  |  |  |  |\n| protocol_version | X |  |  |  |  |\n| restart_notification_recipients | X |  |  |  | `required_when: {:&, [line: 170, column: 35], [{:and, [line: 170, column: 48], [{:is_map, [line: 170, column: 37], [{:&, [line: 170, column: 44], [1]}]}, {:==, [line: 170, column: 74], [{{:., [from_brackets: true, line: 170, column: 54], [Access, :get]}, [from_brackets: true, line: 170, column: 54], [{:&, [line: 170, column: 52], [2]}, :supports_restart]}, true]}]}]}` |\n| restore_completion_time |  |  | backup_and_restore_state | Type | `required_when: {:opts, :supports_backup_restore}` |\n| restore_preparation_time |  |  | restore_completion_time | Type | `required_when: {:opts, :supports_backup_restore}` |\n| slave_address_binding | X |  | manual_slave_address_binding |  |  |\n| slave_proxy_enable |  |  | auto_slave_discovery |  |  |\n| structured_object_list | X |  |  |  |  |\n| time_of_device_restart | X |  | restart_notification_recipients |  |  |\n| time_synchronization_recipients | X |  | interval_offset |  |  |\n| utc_offset | X |  |  |  |  |\n| utc_time_synchronization_recipients | X |  | interval_offset |  |  |\n| vendor_identifier |  |  |  | Type |  |\n| vendor_name | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| active_cov_subscriptions | `[]` |  |\n| apdu_timeout | `3000` |  |\n| application_software_version | `\"bacstack-ex v0.1.0\"` |  |\n| database_revision | `1` |  |\n| device_address_binding | `[]` |  |\n| firmware_revision | `\"bacstack-ex v0.1.0\"` |  |\n| interval_offset | `\"\"` |  |\n| last_restart_reason | `:unknown` |  |\n| local_date |  | `BACnet.Protocol.BACnetDate.utc_today/0` |\n| local_time |  | `BACnet.Protocol.BACnetTime.utc_now/0` |\n| manual_slave_address_binding | `[]` |  |\n| max_apdu_length_accepted | `1476` |  |\n| model_name | `\"bacstack-ex\"` |  |\n| number_of_apdu_retries | `3` |  |\n| object_list | `%BACnet.Protocol.BACnetArray{...}` |  |\n| protocol_object_types_supported | `%BACnet.Protocol.Device.ObjectTypesSupported{...}` |  |\n| protocol_revision | `0` |  |\n| protocol_services_supported | `%BACnet.Protocol.Device.ServicesSupported{...}` |  |\n| protocol_version | `1` |  |\n| restart_notification_recipients | `[]` |  |\n| slave_address_binding | `[]` |  |\n| structured_object_list | `%BACnet.Protocol.BACnetArray{...}` |  |\n| time_of_device_restart | `%BACnet.Protocol.BACnetTimestamp{...}` |  |\n| time_synchronization_recipients | `[]` |  |\n| utc_offset | `0` |  |\n| utc_time_synchronization_recipients | `[]` |  |\n| vendor_name | `\"bacstack-ex\"` |  |","ref":"BACnet.Protocol.ObjectTypes.Device.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Device.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Device.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Device.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Device.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Device.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Device.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Device.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Device.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Device.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Device.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Device.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Device.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Device.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Device.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Device.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Device.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Device.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Device.t/0","doc":"Represents a Device object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Device.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.EventEnrollment","doc":"The Event Enrollment object type defines a standardized object that represents\nand contains the information required for algorithmic reporting of events.\nFor the general event concepts and algorithmic event reporting, see Clause 13.2.\n\nFor the Event Enrollment object, detecting events is accomplished by performing\nparticular event and fault algorithms on monitored values of a referenced object.\nThe parameters for the algorithms are provided by the Event Enrollment object.\nThe standard event algorithms are defined in Clause 13.3.\nThe standard fault algorithms are defined in Clause 13.4.\nEvent Enrollment objects do not modify or otherwise influence the state or\noperation of the referenced object. For the reliability indication by the\nReliability property of the Event Enrollment object, internal unreliable operation\nsuch as configuration error or communication failure takes precedence over\nreliability indication for the monitored object (i.e., MONITORED_OBJECT_FAULT).\nFault indications determined by the fault algorithm, if any, have least precedence.\nClause 13.2 describes the interaction between Event Enrollment objects,\nthe Notification Class objects, and the Alarm and Event application services.\n\n(ASHRAE 135 - Clause 12.12)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `event_enrollment`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  |  |\n| description |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  |  |  |  |\n| event_detection_enable |  | X |  |  |  |\n| event_enable |  | X |  |  |  |\n| event_message_texts |  |  | X |  |  |\n| event_message_texts_config |  |  |  |  |  |\n| event_parameters |  | X |  |  |  |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  |  |\n| event_type |  | X |  |  |  |\n| fault_parameters |  |  |  |  |  |\n| fault_type |  |  | X |  |  |\n| notification_class |  | X |  |  |  |\n| notify_type |  | X |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| object_property_reference |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| status_flags |  | X |  |  |  |\n| time_delay_normal |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| event_algorithm_inhibit |  |  | event_algorithm_inhibit_ref |  |  |\n| event_detection_enable | X |  |  |  |  |\n| event_enable | X |  |  |  |  |\n| event_parameters | X |  |  |  |  |\n| event_state | X |  |  |  |  |\n| event_type | X |  |  |  |  |\n| notify_type | X |  |  |  |  |\n| object_property_reference | X |  |  |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| event_detection_enable | `true` |  |\n| event_enable | `%BACnet.Protocol.EventTransitionBits{...}` |  |\n| event_parameters | `%BACnet.Protocol.EventParameters.None{...}` |  |\n| event_state | `:normal` |  |\n| event_type | `:none` |  |\n| notify_type | `:alarm` |  |\n| object_property_reference | `%BACnet.Protocol.DeviceObjectPropertyRef{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventEnrollment.t/0","doc":"Represents an Event Enrollment object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.EventEnrollment.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.EventLog","doc":"An Event Log object records event notifications with timestamps and other\npertinent data in an internal buffer for subsequent retrieval.\nEach timestamped buffer entry is called an event log \"record\".\n\nEach Event Log object maintains an internal, optionally fixed-size buffer.\nThis buffer fills or grows as event log records are added.\nIf the buffer becomes full, the least recent records are overwritten when\nnew records are added, or collection may be set to stop.\nEvent log records are transferred as BACnetEventLogRecords using\nthe ReadRange service. The buffer may be cleared by writing a zero to\nthe Record_Count property. The determination of which notifications are\nplaced into the log is a local matter. Each record in the buffer has an\nimplied SequenceNumber that is equal to the value of the Total_Record_Count\nproperty immediately after the record is added.\n\nLogging may be enabled and disabled through the Enable property and\nat dates and times specified by the Start_Time and Stop_Time properties.\nEvent Log enabling and disabling is recorded in the event log buffer.\nEvent reporting (notification) may be provided to facilitate automatic\nfetching of event log records by processes on other devices such as fileservers.\nSupport is provided for algorithmic reporting; optionally, intrinsic reporting may be provided.\nEvent Log objects that support intrinsic reporting shall apply the BUFFER_READY event algorithm.\n\nIn intrinsic reporting, when the number of records specified by\nthe Notification_Threshold property has been collected since the previous\nnotification (or startup), a new notification is sent to all subscribed devices.\nIn response to a notification, subscribers may fetch all of the new records.\nIf a subscriber needs to fetch all of the new records, it should use\nthe 'By Sequence Number' form of the ReadRange service request.\nA missed notification may be detected by a subscriber if the 'Current Notification'\nparameter received in the previous BUFFER_READY notification is different than\nthe 'Previous Notification' parameter of the current BUFFER_READY notification.\nIf the ReadRange-ACK response to the ReadRange request issued under these conditions\nhas the FIRST_ITEM bit of the 'Result Flags' parameter set to TRUE, event log records\nhave probably been missed by this subscriber. The acquisition of log records by\nremote devices has no effect upon the state of the Event Log object itself.\nThis allows completely independent, but properly sequential, access to its log records\nby all remote devices. Any remote device can independently update its records at any time.\n\n(ASHRAE 135 - Clause 12.27)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `event_log`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| buffer_size |  | X | X |  |  |\n| description |  |  |  |  |  |\n| enable |  | X |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| last_notify_record |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| log_buffer |  | X |  |  |  |\n| notification_class |  |  |  |  | X |\n| notification_threshold |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| record_count |  | X |  |  |  |\n| records_since_notification |  |  |  |  | X |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| start_time |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| stop_time |  |  |  |  |  |\n| stop_when_full |  | X |  |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| total_record_count |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| buffer_size |  |  |  | Fun/Type |  |\n| enable | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| event_state | X |  |  |  |  |\n| last_notify_record | X |  |  | Type |  |\n| log_buffer | X |  |  | Fun |  |\n| notification_threshold | X |  |  | Type |  |\n| record_count | X |  |  | Type |  |\n| records_since_notification | X |  |  | Type |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| start_time |  |  | stop_time |  |  |\n| total_record_count | X |  |  | Type |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| enable | `true` |  |\n| event_state | `:normal` |  |\n| last_notify_record | `0` |  |\n| log_buffer | `[]` |  |\n| notification_threshold | `0` |  |\n| record_count | `0` |  |\n| records_since_notification | `0` |  |\n| total_record_count | `0` |  |","ref":"BACnet.Protocol.ObjectTypes.EventLog.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.EventLog.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventLog.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventLog.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventLog.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventLog.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.EventLog.t/0","doc":"Represents a Event Log object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.","ref":"BACnet.Protocol.ObjectTypes.EventLog.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.File","doc":"The File object type defines a standardized object that is used\nto describe properties of data files that may be accessed using\nFile Services (see Clause 14).\n\n(ASHRAE 135 - Clause 12.13)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `file`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| archive |  | X |  |  |  |\n| description |  |  |  |  |  |\n| file_access_method |  | X | X |  |  |\n| file_size |  | X | X |  |  |\n| file_type |  | X |  |  |  |\n| modification_date |  | X |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| read_only |  | X |  |  |  |\n| record_count |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| file_access_method | X |  |  |  |  |\n| file_size | X |  |  |  |  |\n| file_type | X |  |  |  |  |\n| modification_date | X |  |  |  |  |\n| record_count |  |  |  | Fun |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| file_access_method | `:stream_access` |  |\n| file_size | `0` |  |\n| file_type | `\"regular\"` |  |\n| modification_date | `%BACnet.Protocol.BACnetDateTime{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.File.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.File.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.File.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.File.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.File.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.File.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.File.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.File.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.File.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.File.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.File.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.File.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.File.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.File.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.File.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.File.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.File.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.File.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.File.t/0","doc":"Represents a File object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.File.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Group","doc":"The Group object type defines a standardized object whose properties\nrepresent a collection of other objects and one or more of their properties.\nA group object is used to simplify the exchange of information between\nBACnet Devices by providing a shorthand way to specify all members of the\ngroup at once. A group may be formed using any combination of object types.\n\n(ASHRAE 135 - Clause 12.14)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `group`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| list_of_group_members |  | X |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| present_value |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| list_of_group_members | X |  |  | Fun |  |\n| present_value | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| list_of_group_members | `[]` |  |\n| present_value | `[]` |  |","ref":"BACnet.Protocol.ObjectTypes.Group.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Group.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Group.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Group.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Group.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Group.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Group.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Group.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Group.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Group.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Group.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Group.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Group.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Group.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Group.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Group.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Group.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Group.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Group.t/0","doc":"Represents a Group object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nThe device server needs to verify that each group member resides in the same device.","ref":"BACnet.Protocol.ObjectTypes.Group.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.IntegerValue","doc":"The Integer Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use an Integer Value object to make any kind of signed integer data\nvalue accessible to other BACnet devices.\nThe mechanisms by which the value is derived are not visible to the BACnet client.\n\nInteger Value objects that support intrinsic reporting shall apply the SIGNED_OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.43)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `integer_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| max_present_value |  |  |  |  |  |\n| min_present_value |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| resolution |  |  | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  |  |  |\n| units | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| cov_increment | `0` |  |\n| deadband | `0` |  |\n| high_limit | `0` |  |\n| low_limit | `0` |  |\n| present_value | `0` |  |\n| relinquish_default | `0` |  |\n| units | `:no_units` |  |","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.IntegerValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.IntegerValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.IntegerValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.IntegerValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.IntegerValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.IntegerValue.t/0","doc":"Represents an Integer Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.IntegerValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue","doc":"The Large Analog Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a Large Analog Value object to make any kind of\ndouble-precision data value accessible to other BACnet devices. The mechanisms by\nwhich the value is derived are not visible to the BACnet client.\n\nLarge Analog Value objects that support intrinsic reporting shall apply\nthe DOUBLE_OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.39)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `large_analog_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  |  |  |  | X |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| max_present_value |  |  |  |  |  |\n| min_present_value |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| resolution |  |  | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  |  |  |\n| units | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| cov_increment | `0.1` |  |\n| deadband | `0.0` |  |\n| high_limit | `0.0` |  |\n| low_limit | `0.0` |  |\n| present_value | `0.0` |  |\n| relinquish_default | `0.0` |  |\n| units | `:no_units` |  |","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0.1` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.t/0","doc":"Represents a Large Analog Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.LargeAnalogValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Loop","doc":"The Loop object type defines a standardized object whose properties represent\nthe externally visible characteristics of any form of feedback control loop.\nFlexibility is achieved by providing three independent gain constants with\nno assumed values for units. The appropriate gain units are determined by\nthe details of the control algorithm, which is a local matter.\n\nLoop objects that support intrinsic reporting shall apply the FLOATING_LIMIT event algorithm.\n\n(ASHRAE 135 - Clause 12.17)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `loop`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| action |  | X |  |  |  |\n| bias |  |  |  |  |  |\n| controlled_variable_reference |  | X |  |  |  |\n| controlled_variable_units |  | X |  |  |  |\n| controlled_variable_value |  | X |  |  |  |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| derivative_constant |  |  |  |  |  |\n| derivative_constant_units |  |  |  |  |  |\n| description |  |  |  |  |  |\n| error_limit |  |  |  |  | X |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| integral_constant |  |  |  |  |  |\n| integral_constant_units |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| manipulated_variable_reference |  | X |  |  |  |\n| max_output |  |  |  |  |  |\n| min_output |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| output_units |  | X |  |  |  |\n| present_value |  | X | X |  |  |\n| priority_for_writing |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| proportional_constant |  |  |  |  |  |\n| proportional_constant_units |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| setpoint |  | X |  |  |  |\n| setpoint_reference |  | X |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| update_interval |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| action | X |  |  |  |  |\n| controlled_variable_reference | X |  |  |  |  |\n| controlled_variable_units | X |  |  |  |  |\n| controlled_variable_value | X |  |  |  |  |\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| derivative_constant |  |  | derivative_constant_units |  |  |\n| error_limit | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| integral_constant |  |  | integral_constant_units |  |  |\n| manipulated_variable_reference | X |  |  |  |  |\n| output_units | X |  |  |  |  |\n| present_value | X |  |  |  |  |\n| priority_for_writing | X |  |  |  |  |\n| proportional_constant |  |  | proportional_constant_units |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| setpoint | X |  |  |  |  |\n| setpoint_reference | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| action | `:direct` |  |\n| controlled_variable_reference | `%BACnet.Protocol.ObjectPropertyRef{...}` |  |\n| controlled_variable_units | `:no_units` |  |\n| controlled_variable_value | `0.0` |  |\n| cov_increment | `0.1` |  |\n| deadband | `0.0` |  |\n| error_limit | `0.0` |  |\n| manipulated_variable_reference | `%BACnet.Protocol.ObjectPropertyRef{...}` |  |\n| output_units | `:no_units` |  |\n| present_value | `0.0` |  |\n| priority_for_writing | `16` |  |\n| setpoint | `0.0` |  |\n| setpoint_reference | `%BACnet.Protocol.SetpointReference{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.Loop.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0.1` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Loop.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Loop.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Loop.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Loop.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Loop.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Loop.t/0","doc":"Represents a Loop object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Loop.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.MultistateInput","doc":"The Multi-state Input object type defines a standardized object whose Present_Value\nrepresents the result of an algorithmic process within the BACnet Device in which\nthe object resides.\n\nThe algorithmic process itself is a local matter and is not defined by the protocol.\nFor example, the Present_Value or state of the Multi-state Input object may be the\nresult of a logical combination of multiple binary inputs or the threshold of one or\nmore analog inputs or the result of a mathematical computation.\nThe Present_Value property is an integer number representing the state.\nThe State_Text property associates a description with each state.\n\nMulti-state Input objects that support intrinsic reporting shall apply the CHANGE_OF_STATE event algorithm.\nFor reliability-evaluation, the FAULT_STATE fault algorithm can be applied.\n\n(ASHRAE 135 - Clause 12.18)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `multi_state_input`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| alarm_values |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| fault_values |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| number_of_states |  | X | X |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| state_text |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| alarm_values | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| fault_values | X |  | reliability |  |  |\n| number_of_states | X |  |  | Type |  |\n| present_value | X |  |  | Fun/Type |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| state_text |  |  |  | Fun |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| alarm_values | `[]` |  |\n| fault_values | `[]` |  |\n| number_of_states | `1` |  |\n| present_value | `1` |  |","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateInput.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateInput.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateInput.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateInput.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateInput.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateInput.t/0","doc":"Represents an Multistate Input object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.","ref":"BACnet.Protocol.ObjectTypes.MultistateInput.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.MultistateOutput","doc":"The Multi-state Output object type defines a standardized object whose properties\nrepresent the desired state of one or more physical outputs or processes within\nthe BACnet Device in which the object resides.\n\nThe actual functions associated with a specific state are a local matter and not\nspecified by the protocol. For example, a particular state may represent the\nactive/inactive condition of several physical outputs or perhaps the value of an\nanalog output. The Present_Value property is an unsigned integer number representing\nthe state. The State_Text property associates a description with each state.\n\nMulti-state Output objects that support intrinsic reporting shall apply the COMMAND_FAILURE event algorithm.\n\n(ASHRAE 135 - Clause 12.19)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `multi_state_output`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| alarm_values |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| fault_values |  |  |  |  |  |\n| feedback_value |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| number_of_states |  | X | X |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  | X |  |  |  |\n| state_text |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| alarm_values | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| fault_values | X |  | reliability |  |  |\n| feedback_value | X |  |  | Type |  |\n| number_of_states | X |  |  | Type |  |\n| present_value | X |  |  | Fun/Type |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  | Fun/Type |  |\n| state_text |  |  |  | Fun |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| alarm_values | `[]` |  |\n| fault_values | `[]` |  |\n| feedback_value | `1` |  |\n| number_of_states | `1` |  |\n| present_value | `1` |  |\n| relinquish_default | `1` |  |","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateOutput.t/0","doc":"Represents an Multistate Output object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateOutput.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.MultistateValue","doc":"The Multi-state Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a multi-state value.\nA \"multi-state value\" is a control system parameter residing in the memory of the\nBACnet Device. The actual functions associated with a specific state are a\nlocal matter and not specified by the protocol. For example, a particular state may\nrepresent the active/inactive condition of several physical inputs and outputs or\nperhaps the value of an analog input or output.\nThe Present_Value property is an unsigned integer number representing the state.\nThe State_Text property associates a description with each state.\n\nMulti-state Value objects that support intrinsic reporting shall apply the CHANGE_OF_ STATE event algorithm.\nFor reliability-evaluation, the FAULT_STATE fault algorithm can be applied.\n\n(ASHRAE 135 - Clause 12.20)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `multi_state_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| alarm_values |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| fault_values |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| number_of_states |  | X | X |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| state_text |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| alarm_values | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| fault_values | X |  | reliability |  |  |\n| number_of_states | X |  |  | Type |  |\n| present_value | X |  |  | Fun/Type |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  | Fun/Type |  |\n| state_text |  |  |  | Fun |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| alarm_values | `[]` |  |\n| fault_values | `[]` |  |\n| number_of_states | `1` |  |\n| present_value | `1` |  |\n| relinquish_default | `1` |  |","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.MultistateValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.MultistateValue.t/0","doc":"Represents an Multistate Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.MultistateValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.NotificationClass","doc":"The Notification Class object type defines a standardized object that represents\nand contains information required for the distribution of event notifications\nwithin BACnet systems. Notification Classes are useful for event-initiating objects\nthat have identical needs in terms of how their notifications should be handled,\nwhat the destination(s) for their notifications should be, and how they should\nbe acknowledged. A notification class defines how event notifications shall be\nprioritized in their handling according to TO_OFFNORMAL, TO_FAULT, and TO_NORMAL events;\nwhether these categories of events require acknowledgment (nearly always by a\nhuman operator); and what destination devices or processes should receive notifications.\n\nThe purpose of prioritization is to provide a means to ensure that alarms or event\nnotifications with critical time considerations are not unnecessarily delayed.\nThe possible range of priorities is 0 - 255. A lower number indicates a higher priority.\nThe priority and the Network Priority (Clause 6.2.2) are associated as defined in Table 13-5.\n\nPriorities may be assigned to TO_OFFNORMAL, TO_FAULT, and TO_NORMAL events\nindividually within a notification class. The purpose of acknowledgment is to\nprovide assurance that a notification has been acted upon by some other agent,\nrather than simply having been received correctly by another device.\nIn most cases, acknowledgments come from human operators.\nTO_OFFNORMAL, TO_FAULT, and TO_NORMAL events may, or may not, require individual\nacknowledgment within a notification class.\nIt is often necessary for event notifications to be sent to multiple destinations or\nto different destinations based on the time of day or day of week.\n\nNotification Classes may specify a list of destinations, each of which is qualified by time\nday of week, and type of handling. A destination specifies a set of days of the week\n(Monday through Sunday) during which the destination is considered viable by\nthe Notification Class object. In addition, each destination has a FromTime and ToTime,\nwhich specify a window using specific times, on those days of the week,\nduring which the destination is viable. If an event that uses a Notification Class object\noccurs and the day is one of the days of the week that is valid for a given destination and\nthe time is within the window specified in the destination, then the destination shall be\nsent a notification. Destinations may be further qualified, as applicable, by any combination\nof the three event transitions TO_OFFNORMAL, TO_FAULT, or TO_NORMAL.\nThe destination also defines the recipient device to receive the notification and a process\nwithin the device. Processes are identified by numeric handles that are only meaningful to\nthe destination device. The administration of these handles is a local matter.\nThe recipient device may be specified by either its unique Device Object_Identifier\nor its BACnetAddress. In the latter case, a specific node address, a multicast address,\nor a broadcast address may be used. The destination further specifies whether the notification\nshall be sent using a confirmed or unconfirmed event notification.\n\n(ASHRAE 135 - Clause 12.21)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `notification_class`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| ack_required |  | X |  |  |  |\n| description |  |  |  |  |  |\n| notification_class |  | X |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| priority |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| recipient_list |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| ack_required | X |  |  |  |  |\n| priority | X |  |  |  |  |\n| recipient_list | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| ack_required | `%BACnet.Protocol.EventTransitionBits{...}` |  |\n| priority | `%BACnet.Protocol.NotificationClassPriority{...}` |  |\n| recipient_list | `[]` |  |","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.NotificationClass.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.NotificationClass.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.NotificationClass.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.NotificationClass.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.NotificationClass.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.NotificationClass.t/0","doc":"Represents a Notification Class object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.NotificationClass.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.OctetStringValue","doc":"The OctetString Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a named data value in a\nBACnet device.\nA BACnet device can use an OctetString Value object to make any kind of\nOCTET STRING data value accessible to other BACnet devices.\nThe mechanisms by which the value is derived are not visible to the BACnet client.\n\n(ASHRAE 135 - Clause 12.41)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `octet_string_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.OctetStringValue.t/0","doc":"Represents a Octet String Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.OctetStringValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue","doc":"The Integer Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a Positive Integer Value object to make any kind of unsigned\ninteger data value accessible to other BACnet devices.\nThe mechanisms by which the value is derived are not visible to the BACnet client.\n\nPositive Integer Value objects that support intrinsic reporting shall apply\nthe UNSIGNED_OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.44)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `positive_integer_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| cov_increment |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| max_present_value |  |  |  |  |  |\n| min_present_value |  |  |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| resolution |  |  | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| cov_increment | X |  |  |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  | Fun |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| relinquish_default | X |  |  | Fun |  |\n| units | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| cov_increment | `0` |  |\n| deadband | `0` |  |\n| high_limit | `0` |  |\n| low_limit | `0` |  |\n| present_value | `0` |  |\n| relinquish_default | `0` |  |\n| units | `:no_units` |  |","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.t/0","doc":"Represents a Positive Integer Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.PositiveIntegerValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Program","doc":"The Program object type defines a standardized object whose properties represent\nthe externally visible characteristics of an application program. In this context,\nan application program is an abstract representation of a process within a BACnet\nDevice, which is executing a particular body of instructions that act upon a particular\ncollection of data structures. The logic that is embodied in these instructions and\nthe form and content of these data structures are local matters. The Program object\nprovides a network-visible view of selected parameters of an application program\nin the form of properties of the Program object. Some of these properties are\nspecified in the standard and exhibit a consistent behavior across different\nBACnet Devices. The operating state of the process that executes the application\nprogram may be viewed and controlled through these standardized properties,\nwhich are required for all Program objects. In addition to these standardized\nproperties, a Program object may also provide vendor-specific properties.\nThese vendor-specific properties may serve as inputs to the program, outputs from\nthe program, or both. However, these vendor-specific properties may not be present at all.\n\nIf any vendor-specific properties are present, the standard does not define what they\nare or how they work, as this is specific to the particular application program and vendor.\n\nProgram objects may optionally support intrinsic reporting to facilitate the reporting\nof fault conditions. Program objects that support intrinsic reporting shall apply\nthe NONE event algorithm.\n\n(ASHRAE 135 - Clause 12.22)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `program`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| description |  |  |  |  |  |\n| description_of_halt |  |  | X |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_timestamps |  |  | X |  | X |\n| instance_of |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| program_change |  | X |  |  |  |\n| program_state |  | X | X |  |  |\n| reason_for_halt |  |  | X |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| program_change | X |  |  |  |  |\n| reason_for_halt |  |  | description_of_halt |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| program_change | `:ready` |  |","ref":"BACnet.Protocol.ObjectTypes.Program.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Program.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Program.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Program.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Program.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.Program.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Program.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Program.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Program.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Program.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Program.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Program.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Program.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Program.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Program.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Program.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Program.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Program.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Program.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Program.t/0","doc":"Represents a Program object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Program.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.PulseConverter","doc":"The Pulse Converter object type defines a standardized object that represents\na process whereby ongoing measurements made of some quantity, such as\nelectric power or water or natural gas usage, and represented by pulses or counts,\nmight be monitored over some time interval for applications such as\npeak load management, where it is necessary to make periodic measurements\nbut where a precise accounting of every input pulse or count is not required.\nThe Pulse Converter object might represent a physical input. As an alternative,\nit might acquire the data from the Present_Value of an Accumulator object,\nrepresenting an input in the same device as the Pulse Converter object.\nThis linkage is illustrated by the dotted line in Figure 12-4. Every time the\nPresent_Value property of the Accumulator object is incremented, the Count property\nof the Pulse Converter object is also incremented.\nThe Present_Value property of the Pulse Converter object can be adjusted at any time\nby writing to the Adjust_Value property, which causes the Count property to be adjusted,\nand the Present_Value recomputed from Count. In the illustration in Figure 12-4,\nthe Count property of the Pulse Converter was adjusted down to 0 when the Total_Count\nof the Accumulator object had the value 0070.\n\nPulse Converter objects that support intrinsic reporting shall apply the OUT_OF_RANGE event algorithm.\n\n(ASHRAE 135 - Clause 12.23)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `pulse_converter`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| adjust_value |  | X |  |  |  |\n| count |  | X | X |  |  |\n| count_before_change |  | X | X |  |  |\n| count_change_time |  | X | X |  |  |\n| cov_increment |  |  |  |  |  |\n| cov_period |  |  |  |  |  |\n| deadband |  |  |  |  | X |\n| description |  |  |  |  |  |\n| device_type |  |  |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| high_limit |  |  |  |  | X |\n| input_reference |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| low_limit |  |  |  |  | X |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| scale_factor |  | X | X |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| units |  | X |  |  |  |\n| update_time |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| adjust_value | X |  |  |  |  |\n| count | X |  |  |  |  |\n| count_before_change | X |  |  |  |  |\n| count_change_time | X |  |  |  |  |\n| cov_increment | X |  |  |  |  |\n| cov_period | X |  | cov_increment |  |  |\n| deadband | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| high_limit | X |  |  |  |  |\n| low_limit | X |  |  |  |  |\n| present_value | X |  |  |  |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| scale_factor | X |  |  |  |  |\n| units | X |  |  |  |  |\n| update_time | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| adjust_value | `0.0` |  |\n| count | `0` |  |\n| count_before_change | `0` |  |\n| count_change_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| cov_increment | `0.1` |  |\n| cov_period | `0` |  |\n| deadband | `0.0` |  |\n| high_limit | `0.0` |  |\n| low_limit | `0.0` |  |\n| present_value | `0.0` |  |\n| scale_factor | `1.0` |  |\n| units | `:no_units` |  |\n| update_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.\n\nBy default,  a default `cov_increment` of `0.1` is used.\nIt is strongly advised to change this to something reasonable for the application.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.PulseConverter.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PulseConverter.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PulseConverter.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PulseConverter.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PulseConverter.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.PulseConverter.t/0","doc":"Represents an Pulse Converter object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.PulseConverter.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.Schedule","doc":"The Schedule object type defines a standardized object used to describe a periodic schedule\nthat may recur during a range of dates, with optional exceptions at arbitrary times on\narbitrary dates. The Schedule object also serves as a binding between these scheduled times\nand the writing of specified \"values\" to specific properties of specific objects at those times.\n\nSchedules are divided into days, of which there are two types: normal days within a week and\nexception days. Both types of days can specify scheduling events for either the full day or\nportions of a day, and a priority mechanism defines which scheduled event is in control at any\ngiven time. The current state of the Schedule object is represented by the value of its\nPresent_Value property, which is normally calculated using the time/value pairs from the\nWeekly_Schedule and Exception_Schedule properties, with a default value for use when no schedules\nare in effect. Details of this calculation are provided in the description of the Present_Value property.\n\nVersions of the Schedule object prior to Protocol_Revision 4 only support schedules that define\nan entire day, from midnight to midnight. For compatibility with these versions, this whole day\nbehavior can be achieved by using a specific schedule format.\nWeekly_Schedule and Exception_Schedule values that begin at 00:00, and do not use any NULL values,\nwill define schedules for the entire day. Property values in this format will produce the same\nresults in all versions of the Schedule object.\n\nSchedule objects may optionally support intrinsic reporting to facilitate the reporting of fault conditions.\nSchedule objects that support intrinsic reporting shall apply the NONE event algorithm.\n\n(ASHRAE 135 - Clause 12.24)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `schedule`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| description |  |  |  |  |  |\n| effective_period |  | X |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_timestamps |  |  | X |  | X |\n| exception_schedule |  |  |  |  |  |\n| limit_enable |  |  |  |  | X |\n| list_of_object_property_references |  | X |  |  |  |\n| notification_class |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  | X |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_for_writing |  | X |  |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  | X |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| schedule_default |  | X |  |  |  |\n| status_flags |  | X | X |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| weekly_schedule |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| effective_period | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| list_of_object_property_references | X |  |  |  |  |\n| present_value | X |  |  |  |  |\n| priority_for_writing | X |  |  |  |  |\n| schedule_default | X |  |  |  |  |\n| weekly_schedule |  | X |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| effective_period | `%BACnet.Protocol.DateRange{...}` |  |\n| list_of_object_property_references | `%BACnet.Protocol.BACnetArray{...}` |  |\n| present_value | `%BACnet.Protocol.ApplicationTags.Encoding{...}` |  |\n| priority_for_writing | `16` |  |\n| schedule_default | `%BACnet.Protocol.ApplicationTags.Encoding{...}` |  |\n| weekly_schedule |  | `Utility.Internal.init_fun_schedule_weekly_schedule/0` |","ref":"BACnet.Protocol.ObjectTypes.Schedule.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.Schedule.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Schedule.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Schedule.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Schedule.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Schedule.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.Schedule.t/0","doc":"Represents a Schedule object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.Schedule.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.StructuredView","doc":"The Structured View object type defines a standardized object that provides\na container to hold references to subordinate objects, which may include other\nStructured View objects, thereby allowing multilevel hierarchies to be created.\n\nThe hierarchies are intended to convey a structure or organization such as a\ngeographical distribution or application organization.\nSubordinate objects may reside in the same device as the Structured View object\nor in other devices on the network.\n\n(ASHRAE 135 - Clause 12.29)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `structured_view`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| node_subtype |  |  |  |  |  |\n| node_type |  | X |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| subordinate_annotations |  |  |  |  |  |\n| subordinate_list |  | X |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| subordinate_list | X |  |  |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| subordinate_list | `[]` |  |","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.StructuredView.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.StructuredView.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.StructuredView.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.StructuredView.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.StructuredView.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.StructuredView.t/0","doc":"Represents a Structured View object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.","ref":"BACnet.Protocol.ObjectTypes.StructuredView.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.TimePatternValue","doc":"The Time Pattern Value object type defines a standardized object whose properties\nrepresent the externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a Time Pattern Value object to make any kind of time data value\naccessible to other BACnet devices. The mechanisms by which the value is derived are not\nvisible to the BACnet client.\n\nTime Pattern objects can be used to represent multiple recurring times based on rules defined\nby the pattern of individual fields of the time, some of which may be \"don't care\",\nwhich matches any value in that field.\n\nExamples of possibilities would be: \"every minute of the 11 o'clock hour of the day\",\nor \"the thirteenth minute of any hour\".\n\n(ASHRAE 135 - Clause 12.47)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `time_pattern_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimePatternValue.t/0","doc":"Represents a Time Pattern Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.TimePatternValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.TimeValue","doc":"The Time Value object type defines a standardized object whose properties represent\nthe externally visible characteristics of a named data value in a BACnet device.\nA BACnet device can use a Time Value object to make any kind of time data value\naccessible to other BACnet devices. The mechanisms by which the value is derived\nare not visible to the BACnet client.\nA Time Value object is used to represent a single moment in time. In contrast,\nthe Time Pattern Value object can be used to represent multiple recurring times.\n\n(ASHRAE 135 - Clause 12.42)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `time_value`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| description |  |  |  |  |  |\n| event_state |  |  |  |  |  |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| out_of_service |  |  |  |  |  |\n| present_value |  | X |  |  |  |\n| priority_array |  |  | X |  |  |\n| profile_name |  |  |  |  |  |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| relinquish_default |  |  |  |  |  |\n| status_flags |  | X | X |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_priority_value/1","doc":"Get the active priority value from the priority array, or nil.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_priority_value/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.has_priority_array?/1","doc":"Checks whether the given object has a priority array.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#has_priority_array?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.set_priority/3","doc":"Sets the given priority in the priority array of an object.\nThis function also updates the present value.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#set_priority/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TimeValue.update_property/3","doc":"Updates a property of an object. To update the priority array, use `set_priority/3` instead.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimeValue.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimeValue.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimeValue.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimeValue.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TimeValue.t/0","doc":"Represents a Time Value object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.","ref":"BACnet.Protocol.ObjectTypes.TimeValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.TrendLog","doc":"A Trend Log object monitors a property of a referenced object and,\nwhen predefined conditionsare met, saves (\"logs\") the value of the property\nand a timestamp in an internal buffer for subsequent retrieval.\nThe data may be logged periodically, upon a change of value or\nwhen \"triggered\" by a write to the Trigger property.\nThe Trigger property allows the acquisition of samples to be controlled by\nnetwork write operations or internal processes. Errors that prevent the acquisition\nof the data, as well as changes in the status or operation of the logging process itself,\nare also recorded. Each timestamped buffer entry is called a trend log \"record.\"\n\nThe referenced object may reside in the same device as the Trend Log object\nor in an external device. The referenced property's value may be recorded upon\nCOV subscription or periodic poll. If the value of the monitored object's Status_Flags\nproperty is available, then it may optionally be recorded along with the value of\nthe referenced property. Each Trend Log object maintains an internal,\noptionally fixed-size buffer. This buffer fills or grows as log records are added.\nIf the buffer becomes full, the least recent record is overwritten when a new record is added,\nor collection may be set to stop. Trend Log records are transferred as BACnetLogRecords\nusing the ReadRange service. The buffer may be cleared by writing a zero to the\nRecord_Count property. Each record in the buffer has an implied SequenceNumber which is\nequal to the value of the Total_Record_Count property immediately after the record is added.\nSeveral datatypes are defined for storage in the log records.\nThe ability to store ANY datatypes is optional. Data stored in the log buffer may be optionally\nrestricted in size to 32 bits, as in the case of bit strings,\nto facilitate implementation in devices with strict storage requirements.\n\nLogging may be enabled and disabled through the Enable property and at dates and times\nspecified by the Start_Time and Stop_Time properties. Trend Log enabling and disabling\nis recorded in the log buffer.\nEvent reporting (notification) may be provided to facilitate automatic fetching of\nlog records by processes on other devices such as fileservers.\n\nSupport is provided for algorithmic reporting; optionally, intrinsic reporting may be provided.\nTrend Log objects that support intrinsic reporting shall apply the BUFFER_READY event algorithm.\nIn intrinsic reporting, when the number of records specified by the Notification_Threshold property\nhave been collected since the previous notification (or startup),\na new notification is sent to all subscribed devices. In response to a notification,\nsubscribers may fetch all of the new records. If a subscriber needs to fetch all of the new\nrecords, it should use the 'By Sequence Number' form of the ReadRange service request.\nA missed notification may be detected by a subscriber if the 'Current Notification' parameter\nreceived in the previous BUFFER_READY notification is different than the\n'Previous Notification' parameter of the current BUFFER_READY notification.\nIf the ReadRange-ACK response to the ReadRange request issued under these conditions\nhas the FIRST_ITEM bit of the 'Result Flags' parameter set to TRUE, Trend Log records have\nprobably been missed by this subscriber. The acquisition of log records by remote devices has\nno effect upon the state of the Trend Log object itself. This allows completely independent,\nbut properly sequential, access to its log records by all remote devices. Any remote device can\nindependently update its records at any time.\n\n(ASHRAE 135 - Clause 12.25)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `trend_log`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| align_intervals |  |  |  |  |  |\n| buffer_size |  | X | X |  |  |\n| client_cov_increment |  |  |  |  |  |\n| cov_resubscription_interval |  |  |  |  |  |\n| description |  |  |  |  |  |\n| enable |  | X |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| interval_offset |  |  |  |  |  |\n| last_notify_record |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| log_buffer |  | X |  |  |  |\n| log_device_object_property |  | X |  |  |  |\n| log_interval |  | X |  |  |  |\n| logging_type |  | X |  |  |  |\n| notification_class |  |  |  |  | X |\n| notification_threshold |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| record_count |  | X |  |  |  |\n| records_since_notification |  |  |  |  | X |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| start_time |  | X |  |  |  |\n| status_flags |  | X | X |  |  |\n| stop_time |  | X |  |  |  |\n| stop_when_full |  | X |  |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| total_record_count |  | X | X |  |  |\n| trigger |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| align_intervals |  |  |  |  | `required_when: {:opts, :clock_aligned_logging}` |\n| buffer_size |  |  |  | Fun/Type |  |\n| cov_resubscription_interval |  |  |  | Type |  |\n| enable | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| event_state | X |  |  |  |  |\n| interval_offset |  |  |  |  | `required_when: {:opts, :clock_aligned_logging}` |\n| last_notify_record | X |  |  | Type |  |\n| log_buffer | X |  |  | Fun |  |\n| logging_type | X |  |  |  |  |\n| notification_threshold | X |  |  | Type |  |\n| record_count | X |  |  | Type |  |\n| records_since_notification | X |  |  | Type |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| start_time | X |  |  |  |  |\n| stop_time | X |  |  |  |  |\n| total_record_count | X |  |  | Type |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| enable | `true` |  |\n| event_state | `:normal` |  |\n| last_notify_record | `0` |  |\n| log_buffer | `[]` |  |\n| logging_type | `:cov` |  |\n| notification_threshold | `0` |  |\n| record_count | `0` |  |\n| records_since_notification | `0` |  |\n| start_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| stop_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| total_record_count | `0` |  |","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLog.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLog.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLog.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLog.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLog.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLog.t/0","doc":"Represents a Trend Log object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.","ref":"BACnet.Protocol.ObjectTypes.TrendLog.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple","doc":"A Trend Log Multiple object monitors one or more properties of one or more\nreferenced objects, either in the same device as the Trend Log Multiple object\nor in an external device. When predefined conditions are met,\nthe object saves (\"logs\") the value of the properties and a timestamp into\nan internal buffer for subsequent retrieval. The data may be logged periodically\nor when \"triggered\" by a write to the Trigger property. Errors that prevent the\nacquisition of the data, as well as changes in the status or operation of the\nlogging process itself, are also recorded. Each timestamped buffer entry is\ncalled a \"log record\". The Log_DeviceObjectProperty array holds the list of\nproperties to be monitored and logged. If an element of the\nLog_DeviceObjectProperty array has an object or device instance number equal to 4194303,\nthis indicates that the element is 'empty' or 'uninitialized'.\nFor empty or uninitialized elements, an indication that no property was specified\nshall be written to the corresponding entry in each log record.\n\nEach Trend Log Multiple object maintains an internal, optionally fixed-size,\nbuffer in its Log_Buffer property. This buffer fills or grows as log records are added.\nIf the buffer becomes full, the least recent log record is overwritten when a new log\nrecord is added, or collection may be set to stop. Trend Log Multiple buffers are\ntransferred as a list of BACnetLogMultipleRecord using the ReadRange service.\nThe buffer may be cleared by writing a zero to the Record_Count property.\nEach log record in the buffer has an implied SequenceNumber that is equal to\nthe value of the Total_Record_Count property immediately after the log record is added.\n\nLogging may be enabled and disabled through the Enable property and at dates and times\nspecified by the Start_Time and Stop_Time properties. The enabling and disabling of\nrecord collection is recorded in the Log_Buffer.\nEvent reporting (notification) may be provided to facilitate automatic fetching of\nlog records by processes on other devices such as fileservers.\nMechanisms for both algorithmic and intrinsic reporting are provided.\nTrend Log Multiple objects that support intrinsic reporting shall apply the BUFFER_READY event algorithm.\n\nIn intrinsic reporting, when the number of records specified by the\nNotification_Threshold property has been collected since the previous notification (or startup),\na new notification is sent to all subscribed devices. In response to a notification,\nsubscribers may fetch all of the new log records. If a subscriber needs to fetch all\nof the new log records, it should use the 'By Sequence Number' form of the\nReadRange service request. A missed notification may be detected by a subscriber\nif the 'Current Notification' parameter received in the previous BUFFER_READY notification\nis different than the 'Previous Notification' parameter of the current BUFFER_READY\nnotification. If the ReadRange-ACK response to the ReadRange request issued under these conditions\nhas the FIRST_ITEM bit of the 'Result Flags' parameter set to TRUE, Trend Log Multiple log records\nhave probably been missed by this subscriber.\nThe acquisition of log records by remote devices has no effect upon the state of the\nTrend Log Multiple object itself. This allows completely independent, but properly sequential,\naccess to its log records by all remote devices. Any remote device can independently\nupdate its records at any time.\n\n(ASHRAE 135 - Clause 12.30)\n\n\n---------------------------------------------------------------------------\nThe following part has been automatically generated.\n\n \n Click to expand \n\nThis module defines a BACnet object of the type `trend_log_multiple`. The following properties are defined:\n\n| Property | Revision | Required | Readonly | Protected | Intrinsic |\n|----------|----------|----------|----------|-----------|-----------|\n| acked_transitions |  |  | X |  | X |\n| align_intervals |  |  |  |  |  |\n| buffer_size |  | X | X |  |  |\n| client_cov_increment |  |  |  |  |  |\n| cov_resubscription_interval |  |  |  |  |  |\n| description |  |  |  |  |  |\n| enable |  | X |  |  |  |\n| event_algorithm_inhibit |  |  |  |  | X |\n| event_algorithm_inhibit_ref |  |  |  |  | X |\n| event_detection_enable |  |  |  |  | X |\n| event_enable |  |  |  |  | X |\n| event_message_texts |  |  | X |  | X |\n| event_message_texts_config |  |  |  |  | X |\n| event_state |  | X |  |  |  |\n| event_timestamps |  |  | X |  | X |\n| interval_offset |  |  |  |  |  |\n| last_notify_record |  |  |  |  | X |\n| limit_enable |  |  |  |  | X |\n| log_buffer |  | X |  |  |  |\n| log_device_object_property |  | X |  |  |  |\n| log_interval |  | X |  |  |  |\n| logging_type |  | X |  |  |  |\n| notification_class |  |  |  |  | X |\n| notification_threshold |  |  |  |  | X |\n| notify_type |  |  |  |  | X |\n| object_instance |  | X | X |  |  |\n| object_name |  | X | X |  |  |\n| profile_name |  |  |  |  |  |\n| record_count |  | X |  |  |  |\n| records_since_notification |  |  |  |  | X |\n| reliability |  |  |  |  |  |\n| reliability_evaluation_inhibit |  |  |  |  |  |\n| start_time |  | X |  |  |  |\n| status_flags |  | X | X |  |  |\n| stop_time |  | X |  |  |  |\n| stop_when_full |  | X |  |  |  |\n| time_delay |  |  |  |  | X |\n| time_delay_normal |  |  |  |  | X |\n| total_record_count |  | X | X |  |  |\n| trigger |  |  |  |  |  |\n\nThe following properties have additional semantics:\n\n| Property | Has Default | Has Init | Implicit Relationships | Validators | Annotations |\n|----------|-------------|----------|------------------------|------------|-------------|\n| align_intervals |  |  |  |  | `required_when: {:opts, :clock_aligned_logging}` |\n| buffer_size |  |  |  | Fun/Type |  |\n| cov_resubscription_interval |  |  |  | Type |  |\n| enable | X |  |  |  |  |\n| event_algorithm_inhibit_ref |  |  | event_algorithm_inhibit |  |  |\n| event_state | X |  |  |  |  |\n| interval_offset |  |  |  |  | `required_when: {:opts, :clock_aligned_logging}` |\n| last_notify_record | X |  |  | Type |  |\n| log_buffer | X |  |  | Fun |  |\n| notification_threshold | X |  |  | Type |  |\n| record_count | X |  |  | Type |  |\n| records_since_notification | X |  |  | Type |  |\n| reliability |  |  | reliability_evaluation_inhibit |  |  |\n| start_time | X |  |  |  |  |\n| stop_time | X |  |  |  |  |\n| total_record_count | X |  |  | Type |  |\n\nThe following table shows the default values and/or init functions:\n\n| Property | Default Value | Init Function |\n|----------|---------------|---------------|\n| enable | `true` |  |\n| event_state | `:normal` |  |\n| last_notify_record | `0` |  |\n| log_buffer | `[]` |  |\n| notification_threshold | `0` |  |\n| record_count | `0` |  |\n| records_since_notification | `0` |  |\n| start_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| stop_time | `%BACnet.Protocol.BACnetDateTime{...}` |  |\n| total_record_count | `0` |  |","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.add_property/3","doc":"Adds an optional property to an object.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically added and instead\nthe object must be newly created using `create/4`.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#add_property/3"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.create/4","doc":"Creates a new object struct with the defined properties. Optional properties are not\ncreated when not given, only required, given and dependency properties are created.\nProperties with a value of `nil` are ignored.\n\nOnly properties that are required for specific services (i.e. Intrinsic Reporting)\nare automatically created.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#create/4"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_all_properties/0","doc":"Auto generated function to get the names of all properties this object supports.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_all_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_annotation/1","doc":"Auto generated function to get the annotations for the given property name.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_annotation/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_annotations/0","doc":"Auto generated function to get the list of annotations for each property.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_annotations/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_cov_properties/0","doc":"Auto generated function to get the names of properties used for COV reporting.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_cov_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_intrinsic_properties/0","doc":"Auto generated function to get the names of intrinsic properties.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_intrinsic_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_object_identifier/1","doc":"Get the BACnet object identifier.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_object_identifier/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_optional_properties/0","doc":"Auto generated function to get the names of optional properties.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_optional_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_properties/1","doc":"Get the list of properties the object has.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_properties/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_properties_type_map/0","doc":"Auto generated function to get a map of property name to type.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_properties_type_map/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_property/2","doc":"Get a property's value from an object.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_protected_properties/0","doc":"Auto generated function to get the names of protected properties.\n\nProtected is an annotation and the object modules prevent writing to\nthis property directly in code. The protected properties are either\nwritten on creation or updated automatically depending on other properties\nbeing written to. Some properties are only written once at creation and\nnever updated.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_protected_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_readonly_properties/0","doc":"Auto generated function to get the names of readonly properties.\n\nReadonly is only an annotation that the property should be write protected\non the BACnet side, there is no actual write protection in the object.\nThis is a hint to the device server. If you need actual write protection, see `protected`.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_readonly_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.get_required_properties/0","doc":"Auto generated function to get the names of required properties.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#get_required_properties/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.has_property?/2","doc":"Checks if the given object has the given property.\n\nSee `BACnet.Protocol.ObjectsUtility.has_property?/2` for implementation details.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#has_property?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.intrinsic_reporting?/1","doc":"Checks if the given object has Intrinsic Reporting enabled.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#intrinsic_reporting?/1"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.property_writable?/2","doc":"Checks if the given property is writable.\n\nCheck `BACnet.Protocol.ObjectsUtility.property_writable?/2` for a basic run-down.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#property_writable?/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.remove_property/2","doc":"Removes an optional property from an object. This function is idempotent.\nRemote objects can not be mutated using this operation.\n\nPlease note that properties of services can **not** be dynamically removed and instead\nthe object must be newly created using `create/4`. Required properties can not be removed.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#remove_property/2"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.supports_intrinsic/0","doc":"Auto generated function to check whether the object type supports intrinsic reporting.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#supports_intrinsic/0"},{"type":"function","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.update_property/3","doc":"Updates a property of an object.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#update_property/3"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.common_object_opts/0","doc":"Common object options for creation - all are optional.\n\n- `ignore_unknown_properties` - Properties that are unknown to the object implementation\n  get ignored (instead of error).\n- `revision` - The BACnet protocol revision to check required properties against.\n  Optional properties are regardless of revision available.\n  See `t:Constants.revision/0` for the available revisions.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#t:common_object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.object_opts/0","doc":"Available object options.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#t:object_opts/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.property_name/0","doc":"Available property names for this object.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#t:property_name/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.property_update_error/0","doc":"The structure for property errors.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#t:property_update_error/0"},{"type":"type","title":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.t/0","doc":"Represents a Trend Log Multiple object. All keys should be treated as read-only,\nall updates should go only through `update_property/3`.\n\nProperties which are for Intrinsic Reporting are nil, if disabled. If Intrinsic Reporting is enabled on the object,\nthen the properties can not be nil.","ref":"BACnet.Protocol.ObjectTypes.TrendLogMultiple.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.AcknowledgeAlarm","doc":"This module represents the BACnet Acknowledge Alarm service.\n\nThe Acknowledge Alarm service is used to acknowledge a human operator has seen the alarm notification.\n\nService Description (ASHRAE 135):\n> In some systems a device may need to know that an operator has seen the alarm notification. The AcknowledgeAlarm service\n> is used by a notification-client to acknowledge that a human operator has seen and responded to an event notification with\n> 'AckRequired' = TRUE. Ensuring that the acknowledgment actually comes from a person with appropriate authority is a local\n> matter. This service may be used in conjunction with either the ConfirmedEventNotification service or the\n> UnconfirmedEventNotification service.","ref":"BACnet.Protocol.Services.AcknowledgeAlarm.html"},{"type":"function","title":"BACnet.Protocol.Services.AcknowledgeAlarm.from_apdu/1","doc":"Converts the given Confirmed Service Request into an Acknowledge Alarm Service.","ref":"BACnet.Protocol.Services.AcknowledgeAlarm.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.AcknowledgeAlarm.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.AcknowledgeAlarm.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.AcknowledgeAlarm.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.AcknowledgeAlarm.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.AcknowledgeAlarm.to_apdu/2","doc":"Get the Confirmed Service request for the given Acknowledge Alarm Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.AcknowledgeAlarm.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.AcknowledgeAlarm.t/0","doc":"","ref":"BACnet.Protocol.Services.AcknowledgeAlarm.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.AddListElement","doc":"This module represents the BACnet Add List Element service.\n\nThe Add List Element service is used to add elements to a list property.\n\nService Description (ASHRAE 135):\n> The AddListElement service is used by a client BACnet-user to add one or more list elements\n> to an object property that is a list.","ref":"BACnet.Protocol.Services.AddListElement.html"},{"type":"function","title":"BACnet.Protocol.Services.AddListElement.from_apdu/1","doc":"Converts the given Confirmed Service Request into an Add List Element Service.","ref":"BACnet.Protocol.Services.AddListElement.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.AddListElement.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.AddListElement.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.AddListElement.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.AddListElement.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.AddListElement.to_apdu/2","doc":"Get the Confirmed Service request for the given Add List Element Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.AddListElement.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.AddListElement.t/0","doc":"","ref":"BACnet.Protocol.Services.AddListElement.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.AtomicReadFile","doc":"This module represents the BACnet Atomic Read File service.\n\nThe Atomic Read File service is used to atomically read from a file on a device.\n\nService Description (ASHRAE 135):\n> The AtomicReadFile Service is used by a client BACnet-user to perform an open-read-close operation on the contents of the\n> specified file. The file may be accessed as records or as a stream of octets.","ref":"BACnet.Protocol.Services.AtomicReadFile.html"},{"type":"function","title":"BACnet.Protocol.Services.AtomicReadFile.from_apdu/1","doc":"Converts the given Confirmed Service Request into an Atomic Read File Service.","ref":"BACnet.Protocol.Services.AtomicReadFile.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.AtomicReadFile.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.AtomicReadFile.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.AtomicReadFile.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.AtomicReadFile.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.AtomicReadFile.to_apdu/2","doc":"Get the Confirmed Service request for the given Atomic Read File Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.AtomicReadFile.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.AtomicReadFile.t/0","doc":"","ref":"BACnet.Protocol.Services.AtomicReadFile.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.AtomicWriteFile","doc":"This module represents the BACnet Atomic Write File service.\n\nThe Atomic Write File service is used to atomically write to a file on a device.\n\nService Description (ASHRAE 135):\n> The AtomicWriteFile Service is used by a client BACnet-user to perform an open-write-close operation of an OCTET\n> STRING into a specified position or a list of OCTET STRINGs into a specified group of records in a file. The file may be\n> accessed as records or as a stream of octets.","ref":"BACnet.Protocol.Services.AtomicWriteFile.html"},{"type":"function","title":"BACnet.Protocol.Services.AtomicWriteFile.from_apdu/1","doc":"Converts the given Confirmed Service Request into an Atomic Write File Service.","ref":"BACnet.Protocol.Services.AtomicWriteFile.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.AtomicWriteFile.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.AtomicWriteFile.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.AtomicWriteFile.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.AtomicWriteFile.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.AtomicWriteFile.to_apdu/2","doc":"Get the Confirmed Service request for the given Atomic Write File Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.AtomicWriteFile.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.AtomicWriteFile.t/0","doc":"","ref":"BACnet.Protocol.Services.AtomicWriteFile.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ConfirmedCovNotification","doc":"This module represents the BACnet Confirmed COV Notification service.\n\nThe Confirmed COV Notification service is used to notify a subscriber of a changed value or changed values and requires an\nacknowledge by the subscriber of reception of this event notification.\n\nService Description (ASHRAE 135):\n> The ConfirmedCOVNotification service is used to notify subscribers about changes that may have occurred to the properties\n> of a particular object. Subscriptions for COV notifications are made using the SubscribeCOV service or the\n> SubscribeCOVProperty service.","ref":"BACnet.Protocol.Services.ConfirmedCovNotification.html"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedCovNotification.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Confirmed COV Notification Service.","ref":"BACnet.Protocol.Services.ConfirmedCovNotification.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedCovNotification.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ConfirmedCovNotification.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedCovNotification.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ConfirmedCovNotification.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedCovNotification.to_apdu/2","doc":"Get the Confirmed Service request for the given Confirmed COV Notification Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ConfirmedCovNotification.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ConfirmedCovNotification.t/0","doc":"","ref":"BACnet.Protocol.Services.ConfirmedCovNotification.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ConfirmedEventNotification","doc":"This module represents the BACnet Confirmed Event Notification service.\n\nThe Confirmed Event Notification service is used to notify a subscriber of an event that has occurred and requires an\nacknowledge by the subscriber of reception of this event notification.\n\nService Description (ASHRAE 135):\n> The ConfirmedEventNotification service is used by a notification-server to notify a remote device that an event has occurred\n> and that the notification-server needs a confirmation that the notification has been received. This confirmation means only\n> that the device received the message. It does not imply that a human operator has been notified. A separate\n> AcknowledgeAlarm service is used to indicate that an operator has acknowledged the receipt of the notification if the\n> notification specifies that acknowledgment is required. If multiple recipients must be notified, a separate invocation of this\n> service shall be used to notify each intended recipient. If a confirmation that a notification was received is not needed, then\n> the UnconfirmedEventNotification may be used.","ref":"BACnet.Protocol.Services.ConfirmedEventNotification.html"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedEventNotification.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Confirmed Event Notification Service.","ref":"BACnet.Protocol.Services.ConfirmedEventNotification.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedEventNotification.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ConfirmedEventNotification.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedEventNotification.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ConfirmedEventNotification.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedEventNotification.to_apdu/2","doc":"Get the Confirmed Service request for the given Confirmed Event Notification Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ConfirmedEventNotification.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ConfirmedEventNotification.t/0","doc":"","ref":"BACnet.Protocol.Services.ConfirmedEventNotification.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ConfirmedPrivateTransfer","doc":"This module represents the BACnet Confirmed Private Transfer service.\n\nThe Confirmed Private Transfer service is used to invoke proprietary or non-standard services in a BACnet device.\n\nService Description (ASHRAE 135):\n> The ConfirmedPrivateTransfer is used by a client BACnet-user to invoke proprietary or non-standard services in a remote\n> device. The specific proprietary services that may be provided by a given device are not defined by this standard. The\n> PrivateTransfer services provide a mechanism for specifying a particular proprietary service in a standardized manner. The\n> only required parameters for these services are a vendor identification code and a service number. Additional parameters\n> may be supplied for each service if required. The form and content of these additional parameters, if any, are not defined by\n> this standard. The vendor identification code and service number together serve to unambiguously identify the intended\n> purpose of the information conveyed by the remainder of the APDU or the service to be performed by the remote device\n> based on parameters in the remainder of the APDU.","ref":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.html"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Confirmed Private Transfer Service.","ref":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.to_apdu/2","doc":"Get the Confirmed Service request for the given Confirmed Private Transfer Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.t/0","doc":"","ref":"BACnet.Protocol.Services.ConfirmedPrivateTransfer.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ConfirmedTextMessage","doc":"This module represents the BACnet Confirmed Text Message service.\n\nThe Confirmed Text Message service is used to send a text message to one devices. What the device does with\nthe text message is a local matter of the recipient.\n\nService Description (ASHRAE 135):\n> The ConfirmedTextMessage service is used by a client BACnet-user to send a text message to another BACnet device. This\n> service is not a broadcast or multicast service. This service may be used in cases when confirmation that the text message\n> was received is required. The confirmation does not guarantee that a human operator has seen the message. Messages may\n> be prioritized into normal or urgent categories. In addition, a given text message may be optionally classified by a numeric\n> class code or class identification string. This classification may be used by the receiving BACnet device to determine how\n> to handle the text message. For example, the message class might indicate a particular output device on which to print text\n> or a set of actions to take when the text is received. In any case, the interpretation of the class is a local matter.","ref":"BACnet.Protocol.Services.ConfirmedTextMessage.html"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedTextMessage.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an Confirmed Text Message Service.","ref":"BACnet.Protocol.Services.ConfirmedTextMessage.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedTextMessage.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ConfirmedTextMessage.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedTextMessage.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ConfirmedTextMessage.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ConfirmedTextMessage.to_apdu/2","doc":"Get the Confirmed Service request for the given Confirmed Text Message Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ConfirmedTextMessage.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ConfirmedTextMessage.t/0","doc":"","ref":"BACnet.Protocol.Services.ConfirmedTextMessage.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.CreateObject","doc":"This module represents the BACnet Create Object service.\n\nThe Create Object service is used to dynamically create an object in the remote device.\n\nService Description (ASHRAE 135):\n> The CreateObject service is used by a client BACnet-user to create a new instance of an object. This service may be used to\n> create instances of both standard and vendor specific objects. The standard object types supported by this service shall be\n> specified in the PICS. The properties of standard objects created with this service may be initialized in two ways: initial\n> values may be provided as part of the CreateObject service request or values may be written to the newly created object using\n> the BACnet WriteProperty services. The initialization of non-standard objects is a local matter. The behavior of objects\n> created by this service that are not supplied, or only partially supplied, with initial property values is dependent upon the\n> device and is a local matter.","ref":"BACnet.Protocol.Services.CreateObject.html"},{"type":"function","title":"BACnet.Protocol.Services.CreateObject.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Create Object Service.","ref":"BACnet.Protocol.Services.CreateObject.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.CreateObject.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.CreateObject.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.CreateObject.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.CreateObject.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.CreateObject.to_apdu/2","doc":"Get the Confirmed Service request for the given Create Object Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.CreateObject.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.CreateObject.t/0","doc":"","ref":"BACnet.Protocol.Services.CreateObject.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.DeleteObject","doc":"This module represents the BACnet Delete Object service.\n\nThe Delete Object service is used to delete an existing object in the remote device.\n\nService Description (ASHRAE 135):\n> The DeleteObject service is used by a client BACnet-user to delete an existing object. Although this service is general in the\n> sense that it can be applied to any object type, it is expected that most objects in a control system cannot be deleted by this\n> service because they are protected as a security feature. There are some objects, however, that may be created and deleted\n> dynamically. Group objects and Event Enrollment objects are examples. This service is primarily used to delete objects of\n> these types but may also be used to remove vendor-specific deletable objects.","ref":"BACnet.Protocol.Services.DeleteObject.html"},{"type":"function","title":"BACnet.Protocol.Services.DeleteObject.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Delete Object Service.","ref":"BACnet.Protocol.Services.DeleteObject.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.DeleteObject.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.DeleteObject.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.DeleteObject.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.DeleteObject.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.DeleteObject.to_apdu/2","doc":"Get the Confirmed Service request for the given Delete Object Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.DeleteObject.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.DeleteObject.t/0","doc":"","ref":"BACnet.Protocol.Services.DeleteObject.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.DeviceCommunicationControl","doc":"This module represents the BACnet Device Communication Control service.\n\nThe Device Communication Control service is used to control the communication of a device.\n\nService Description (ASHRAE 135):\n> The DeviceCommunicationControl service is used by a client BACnet-user to instruct a remote device to stop initiating and\n> optionally stop responding to all APDUs (except DeviceCommunicationControl or, if supported, ReinitializeDevice) on the\n> communication network or internetwork for a specified duration of time. This service is primarily used by a human operator\n> for diagnostic purposes. A password may be required from the client BACnet-user prior to executing the service. The time\n> duration may be set to \"indefinite,\" meaning communication must be re-enabled by a DeviceCommunicationControl or, if\n> supported, ReinitializeDevice service, not by time.","ref":"BACnet.Protocol.Services.DeviceCommunicationControl.html"},{"type":"function","title":"BACnet.Protocol.Services.DeviceCommunicationControl.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Device Communication Control Service.","ref":"BACnet.Protocol.Services.DeviceCommunicationControl.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.DeviceCommunicationControl.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.DeviceCommunicationControl.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.DeviceCommunicationControl.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.DeviceCommunicationControl.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.DeviceCommunicationControl.to_apdu/2","doc":"Get the Confirmed Service request for the given Device Communication Control Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.DeviceCommunicationControl.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.DeviceCommunicationControl.t/0","doc":"","ref":"BACnet.Protocol.Services.DeviceCommunicationControl.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.GetAlarmSummary","doc":"This module represents the BACnet Get Alarm Summary service.\n\nThe Get Alarm Summary service is used to get a list of active alarms from a device.\nActive alarm refers to all abnormal events.\n\nService Description (ASHRAE 135):\n> The GetAlarmSummary service is used by a client BACnet-user to obtain a summary of \"active alarms.\" The term \"active\n> alarm\" refers to BACnet standard objects that have an Event_State property whose value is not equal to NORMAL and a\n> Notify_Type property whose value is ALARM. The GetEnrollmentSummary service provides a more sophisticated approach\n> with various kinds of filters.","ref":"BACnet.Protocol.Services.GetAlarmSummary.html"},{"type":"function","title":"BACnet.Protocol.Services.GetAlarmSummary.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Get Alarm Summary Service.","ref":"BACnet.Protocol.Services.GetAlarmSummary.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.GetAlarmSummary.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.GetAlarmSummary.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.GetAlarmSummary.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.GetAlarmSummary.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.GetAlarmSummary.to_apdu/2","doc":"Get the Confirmed Service request for the given Get Alarm Summary Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.GetAlarmSummary.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.GetAlarmSummary.t/0","doc":"","ref":"BACnet.Protocol.Services.GetAlarmSummary.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.GetEnrollmentSummary","doc":"This module represents the BACnet Get Enrollment Summary service.\n\nThe Get Enrollment Summary service is used to get a list of event-initiating objects.\nSeveral different filters may be applied.\n\nService Description (ASHRAE 135):\n> The GetEnrollmentSummary service is used by a client BACnet-user to obtain a summary of event-initiating objects. Several\n> different filters may be applied to define the search criteria. This service may be used to obtain summaries of objects with any\n> event type and is thus a superset of the functionality provided by the GetAlarmSummary Service.","ref":"BACnet.Protocol.Services.GetEnrollmentSummary.html"},{"type":"function","title":"BACnet.Protocol.Services.GetEnrollmentSummary.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Get Enrollment Summary Service.","ref":"BACnet.Protocol.Services.GetEnrollmentSummary.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.GetEnrollmentSummary.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.GetEnrollmentSummary.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.GetEnrollmentSummary.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.GetEnrollmentSummary.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.GetEnrollmentSummary.to_apdu/2","doc":"Get the Confirmed Service request for the given Get Enrollment Summary Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.GetEnrollmentSummary.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.GetEnrollmentSummary.t/0","doc":"","ref":"BACnet.Protocol.Services.GetEnrollmentSummary.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.GetEventInformation","doc":"This module represents the BACnet Get Event Information service.\n\nThe Get Event Information service is used to get a list of active event states from a device.\nActive event states refers to all abnormal events of event-initiating objects.\n\nService Description (ASHRAE 135):\n> The GetEventInformation service is used by a client BACnet-user to obtain a summary of all \"active event states\". The term\n> \"active event states\" refers to all event-initiating objects that\n>   (a) have an Event_State property whose value is not equal to NORMAL, or\n>   (b) have an Acked_Transitions property, which has at least one of the bits (TO_OFFNORMAL, TO_FAULT, TO_NORMAL) set to FALSE.\n> This service is intended to be implemented in all devices that generate event notifications.","ref":"BACnet.Protocol.Services.GetEventInformation.html"},{"type":"function","title":"BACnet.Protocol.Services.GetEventInformation.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Get Event Information Service.","ref":"BACnet.Protocol.Services.GetEventInformation.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.GetEventInformation.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.GetEventInformation.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.GetEventInformation.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.GetEventInformation.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.GetEventInformation.to_apdu/2","doc":"Get the Confirmed Service request for the given Get Event Information Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.GetEventInformation.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.GetEventInformation.t/0","doc":"","ref":"BACnet.Protocol.Services.GetEventInformation.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.IAm","doc":"This module represents the BACnet I-Am service.\n\nThe I-Am service is used as a response to the Who-Is service. It may also be used to announce itself (the device).\n\nService Description (ASHRAE 135):\n> The I-Am service is used to respond to Who-Is service requests. However, the IAm service request may be issued at any time.\n> It does not need to be preceded by the receipt of a Who-Is service request.\n> In particular, a device may wish to broadcast an I-Am service request when it powers up. The network address is derived either\n> from the MAC address associated with the I-Am service request, if the device issuing the request is on the local network, or\n> from the NPCI if the device is on a remote network.","ref":"BACnet.Protocol.Services.IAm.html"},{"type":"function","title":"BACnet.Protocol.Services.IAm.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an I-Am Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.IAm.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.IAm.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.IAm.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.IAm.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.IAm.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.IAm.to_apdu/2","doc":"Get the Unconfirmed Service request for the given I-Am Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.IAm.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.IAm.t/0","doc":"","ref":"BACnet.Protocol.Services.IAm.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.IHave","doc":"This module represents the BACnet I-Have service.\n\nThe I-Have service is used as a response to the Who-Has service.\n\nService Description (ASHRAE 135):\n> The IHave service is used to respond to Who-Has service requests or to advertise the existence of an object with a given\n> Object_Name or Object_Identifier. The I-Have service request may be issued at any time and does not need to be preceded\n> by the receipt of a Who-Has service request.","ref":"BACnet.Protocol.Services.IHave.html"},{"type":"function","title":"BACnet.Protocol.Services.IHave.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an I-Have Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.IHave.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.IHave.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.IHave.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.IHave.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.IHave.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.IHave.to_apdu/2","doc":"Get the Unconfirmed Service request for the given I-Have Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.IHave.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.IHave.t/0","doc":"","ref":"BACnet.Protocol.Services.IHave.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.LifeSafetyOperation","doc":"This module represents the BACnet Life Safety Operation service.\n\nThe Life Safety Operation service is used to provide a mechanism for human operators to silence audible or visual appliances,\nreset notification appliances, or unsilence previously silenced appliances.\n\nService Description (ASHRAE 135):\n> The LifeSafetyOperation service is intended for use in fire, life safety and security systems to provide a mechanism for\n> conveying specific instructions from a human operator to accomplish any of the following objectives:\n>   (a) silence audible or visual notification appliances,\n>   (b) reset latched notification appliances, or\n>   (c) unsilence previously silenced audible or visual notification appliances.\n> Ensuring that the LifeSafetyOperation request actually comes from a person with appropriate authority is a local matter.","ref":"BACnet.Protocol.Services.LifeSafetyOperation.html"},{"type":"function","title":"BACnet.Protocol.Services.LifeSafetyOperation.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Life Safety Operation Service.","ref":"BACnet.Protocol.Services.LifeSafetyOperation.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.LifeSafetyOperation.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.LifeSafetyOperation.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.LifeSafetyOperation.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.LifeSafetyOperation.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.LifeSafetyOperation.to_apdu/2","doc":"Get the Confirmed Service request for the given Life Safety Operation Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.LifeSafetyOperation.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.LifeSafetyOperation.t/0","doc":"","ref":"BACnet.Protocol.Services.LifeSafetyOperation.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ReadProperty","doc":"This module represents the BACnet Read Property service.\n\nThe Read Property service is used to read a property of an object.\n\nService Description (ASHRAE 135):\n> The ReadProperty service is used by a client BACnet-user to request the value of one property of one BACnet Object. This\n> service allows read access to any property of any object, whether a BACnet-defined object or not.","ref":"BACnet.Protocol.Services.ReadProperty.html"},{"type":"function","title":"BACnet.Protocol.Services.ReadProperty.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Read Property Service.","ref":"BACnet.Protocol.Services.ReadProperty.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ReadProperty.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ReadProperty.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ReadProperty.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ReadProperty.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ReadProperty.to_apdu/2","doc":"Get the Confirmed Service request for the given Read Property Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ReadProperty.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ReadProperty.t/0","doc":"","ref":"BACnet.Protocol.Services.ReadProperty.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ReadPropertyMultiple","doc":"This module represents the BACnet Read Property Multiple service.\n\nThe Read Property Multiple service is used to read multiple properties of one or multiple objects.\n\nService Description (ASHRAE 135):\n> The ReadPropertyMultiple service is used by a client BACnet-user to request the values of one or more specified properties\n> of one or more BACnet Objects. This service allows read access to any property of any object, whether a BACnet-defined\n> object or not. The user may read a single property of a single object, a list of properties of a single object, or any number of\n> properties of any number of objects. A 'Read Access Specification' with the property identifier ALL can be used to learn the\n> implemented properties of an object along with their values.","ref":"BACnet.Protocol.Services.ReadPropertyMultiple.html"},{"type":"function","title":"BACnet.Protocol.Services.ReadPropertyMultiple.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Read Property Multiple Service.","ref":"BACnet.Protocol.Services.ReadPropertyMultiple.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ReadPropertyMultiple.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ReadPropertyMultiple.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ReadPropertyMultiple.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ReadPropertyMultiple.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ReadPropertyMultiple.to_apdu/2","doc":"Get the Confirmed Service request for the given Read Property Multiple Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ReadPropertyMultiple.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ReadPropertyMultiple.t/0","doc":"","ref":"BACnet.Protocol.Services.ReadPropertyMultiple.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ReadRange","doc":"This module represents the BACnet Read Range service.\n\nThe Read Range service is used to read range of a property of an object.\n\nService Description (ASHRAE 135):\n> The ReadRange service is used by a client BACnet-user to read a specific range of data items representing a subset of data\n> available within a specified object property. The service may be used with any list or array of lists property.","ref":"BACnet.Protocol.Services.ReadRange.html"},{"type":"function","title":"BACnet.Protocol.Services.ReadRange.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Read Range Service.","ref":"BACnet.Protocol.Services.ReadRange.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ReadRange.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ReadRange.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ReadRange.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ReadRange.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ReadRange.to_apdu/2","doc":"Get the Confirmed Service request for the given Read Range Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ReadRange.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ReadRange.range/0","doc":"","ref":"BACnet.Protocol.Services.ReadRange.html#t:range/0"},{"type":"type","title":"BACnet.Protocol.Services.ReadRange.t/0","doc":"","ref":"BACnet.Protocol.Services.ReadRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.ReinitializeDevice","doc":"This module represents the BACnet Reinitialize Device service.\n\nThe Device Communication Control service is used to instruct a device to reboot or reset to a predefined state,\nor to control backup or restore services.\n\nService Description (ASHRAE 135):\n> The ReinitializeDevice service is used by a client BACnet-user to instruct a remote device to reboot itself (cold start), reset\n> itself to some predefined initial state (warm start), or to control the backup or restore procedure. Resetting or rebooting a\n> device is primarily initiated by a human operator for diagnostic purposes. Use of this service during the backup or restore\n> procedure is usually initiated on behalf of the user by the device controlling the backup or restore. Due to the sensitive\n> nature of this service, a password may be required by the responding BACnet-user prior to executing the service.","ref":"BACnet.Protocol.Services.ReinitializeDevice.html"},{"type":"function","title":"BACnet.Protocol.Services.ReinitializeDevice.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Reinitialize Device Service.","ref":"BACnet.Protocol.Services.ReinitializeDevice.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.ReinitializeDevice.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.ReinitializeDevice.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.ReinitializeDevice.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.ReinitializeDevice.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.ReinitializeDevice.to_apdu/2","doc":"Get the Confirmed Service request for the given Reinitialize Device Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.ReinitializeDevice.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.ReinitializeDevice.t/0","doc":"","ref":"BACnet.Protocol.Services.ReinitializeDevice.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.RemoveListElement","doc":"This module represents the BACnet Remove List Element service.\n\nThe Remove List Element service is used to remove elements from a list property.\n\nService Description (ASHRAE 135):\n> The RemoveListElement service is used by a client BACnet-user to remove one or more elements from the property of an\n> object that is a list. If an element is itself a list, the entire element shall be removed. This service does not operate on nested\n> lists.","ref":"BACnet.Protocol.Services.RemoveListElement.html"},{"type":"function","title":"BACnet.Protocol.Services.RemoveListElement.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Remove List Element Service.","ref":"BACnet.Protocol.Services.RemoveListElement.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.RemoveListElement.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.RemoveListElement.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.RemoveListElement.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.RemoveListElement.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.RemoveListElement.to_apdu/2","doc":"Get the Confirmed Service request for the given Remove List Element Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.RemoveListElement.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.RemoveListElement.t/0","doc":"","ref":"BACnet.Protocol.Services.RemoveListElement.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.SubscribeCov","doc":"This module represents the BACnet Subscribe COV service.\n\nThe Subscribe COV service is used to subscribe to changes of an object. The standardized objects that may optionally\nprovide COV support and the change of value algorithms they shall employ are summarized in ASHRAE 135 Table 13-1.\n\nService Description (ASHRAE 135):\n> The SubscribeCOV service is used by a COV-client to subscribe for the receipt of notifications of changes that may occur to\n> the properties of a particular object. Certain BACnet standard objects may optionally support COV reporting. If a standard\n> object provides COV reporting, then changes of value of specific properties of the object, in some cases based on\n> programmable increments, trigger COV notifications to be sent to one or more subscriber clients. Typically, COV\n> notifications are sent to supervisory programs in BACnet client devices or to operators or logging devices. Proprietary objects\n> may support COV reporting at the implementor's option. The standardized objects that may optionally provide COV support\n> and the change of value algorithms they shall employ are summarized in Table 13-1.\n> The subscription establishes a connection between the change of value detection and reporting mechanism within the COVserver\n> device and a \"process\" within the COV-client device. Notifications of changes are issued by the COV-server device\n> when changes occur after the subscription has been established. The ConfirmedCOVNotification and\n> UnconfirmedCOVNotification services are used by the COV-server device to convey change notifications. The choice of\n> confirmed or unconfirmed service is made at the time the subscription is established.","ref":"BACnet.Protocol.Services.SubscribeCov.html"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCov.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Subscribe COV Service.","ref":"BACnet.Protocol.Services.SubscribeCov.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCov.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.SubscribeCov.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCov.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.SubscribeCov.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCov.to_apdu/2","doc":"Get the Confirmed Service request for the given Subscribe COV Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.SubscribeCov.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.SubscribeCov.t/0","doc":"","ref":"BACnet.Protocol.Services.SubscribeCov.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.SubscribeCovProperty","doc":"This module represents the BACnet Subscribe COV Property service.\n\nThe Subscribe COV Property service is used to get subscribe to changes for a particular property of an object.\n\nService Description (ASHRAE 135):\n> The SubscribeCOVProperty service is used by a COV-client to subscribe for the receipt of notifications of changes that may\n> occur to the properties of a particular object. Any object may optionally support COV reporting. If a standard object provides\n> COV reporting, then changes of value of subscribed-to properties of the object, in some cases based on programmable\n> increments, trigger COV notifications to be sent to one or more subscriber clients. Typically, COV notifications are sent to\n> supervisory programs in BACnet client devices or to operators or logging devices.\n> The subscription establishes a connection between the change of value detection and reporting mechanism within the COVserver\n> device and a \"process\" within the COV-client device. Notifications of changes are issued by the COV-server device\n> when changes occur after the subscription has been established. The ConfirmedCOVNotification and\n> UnconfirmedCOVNotification services are used by the COV-server device to convey change notifications. The choice of\n> confirmed or unconfirmed service is made at the time the subscription is established. Any object, proprietary or standard,\n> may support COV reporting for any property at the implementor's option.\n> The SubscribeCOVProperty service differs from the SubscribeCOV service in that it allows monitoring of properties other\n> than those listed in Table 13-1.","ref":"BACnet.Protocol.Services.SubscribeCovProperty.html"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCovProperty.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Subscribe COV Property Service.","ref":"BACnet.Protocol.Services.SubscribeCovProperty.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCovProperty.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.SubscribeCovProperty.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCovProperty.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.SubscribeCovProperty.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.SubscribeCovProperty.to_apdu/2","doc":"Get the Confirmed Service request for the given Subscribe COV Property Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.SubscribeCovProperty.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.SubscribeCovProperty.t/0","doc":"","ref":"BACnet.Protocol.Services.SubscribeCovProperty.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.TimeSynchronization","doc":"This module represents the BACnet Time Synchronization service.\n\nThe Time Synchronization service is used to send the correct local date and time onto the BACnet network or to a single recipient.\n\nService Description (ASHRAE 135):\n> The TimeSynchronization service is used by a requesting BACnet-user to notify a remote device of the correct current time.\n> This service may be broadcast, multicast, or addressed to a single recipient. Its purpose is to notify recipients of the correct\n> current time so that devices may synchronize their internal clocks with one another.","ref":"BACnet.Protocol.Services.TimeSynchronization.html"},{"type":"function","title":"BACnet.Protocol.Services.TimeSynchronization.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an TimeSynchronization Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.TimeSynchronization.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.TimeSynchronization.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.TimeSynchronization.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.TimeSynchronization.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.TimeSynchronization.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.TimeSynchronization.to_apdu/2","doc":"Get the Unconfirmed Service request for the given TimeSynchronization Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.TimeSynchronization.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.TimeSynchronization.t/0","doc":"","ref":"BACnet.Protocol.Services.TimeSynchronization.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.UnconfirmedCovNotification","doc":"This module represents the BACnet Unconfirmed COV Notification service (Change Of Value).\n\nThe Unconfirmed COV Notification service is used to notify a subscriber of a changed value or changed values.\n\nService Description (ASHRAE 135):\n> The UnconfirmedCOVNotification Service is used to notify subscribers about changes that may have occurred to the\n> properties of a particular object, or to distribute object properties of wide interest (such as outside air conditions) to many\n> devices simultaneously without a subscription. Subscriptions for COV notifications are made using the SubscribeCOV\n> service. For unsubscribed notifications, the algorithm for determining when to issue this service is a local matter and may be\n> based on a change of value, periodic updating, or some other criteria.","ref":"BACnet.Protocol.Services.UnconfirmedCovNotification.html"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedCovNotification.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an Unconfirmed COV Notification Service.","ref":"BACnet.Protocol.Services.UnconfirmedCovNotification.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedCovNotification.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.UnconfirmedCovNotification.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedCovNotification.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.UnconfirmedCovNotification.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedCovNotification.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Unconfirmed COV Notification Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.UnconfirmedCovNotification.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.UnconfirmedCovNotification.t/0","doc":"","ref":"BACnet.Protocol.Services.UnconfirmedCovNotification.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.UnconfirmedEventNotification","doc":"This module represents the BACnet Unconfirmed Event Notification service.\n\nThe Unconfirmed Event Notification service is used to notify a subscriber of an event that has occurred.\n\nService Description (ASHRAE 135):\n> The UnconfirmedEventNotification service is used by a notification-server to notify a remote device that an event has\n> occurred. Its purpose is to notify recipients that an event has occurred, but confirmation that the notification was received is\n> not required. Applications that require confirmation that the notification was received by the remote device should use the\n> ConfirmedEventNotification service. The fact that this is an unconfirmed service does not mean it is inappropriate for\n> notification of alarms. Events of type Alarm may require a human acknowledgment that is conveyed using the\n> AcknowledgeAlarm service. Thus, using an unconfirmed service to announce the alarm has no effect on the ability to\n> confirm that an operator has been notified. Any device that executes this service shall support programmable process\n> identifiers to allow broadcast and multicast 'Process Identifier' parameters to be assigned on a per installation basis.","ref":"BACnet.Protocol.Services.UnconfirmedEventNotification.html"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedEventNotification.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an Unconfirmed Event Notification Service.","ref":"BACnet.Protocol.Services.UnconfirmedEventNotification.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedEventNotification.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.UnconfirmedEventNotification.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedEventNotification.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.UnconfirmedEventNotification.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedEventNotification.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Unconfirmed Event Notification Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.UnconfirmedEventNotification.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.UnconfirmedEventNotification.t/0","doc":"","ref":"BACnet.Protocol.Services.UnconfirmedEventNotification.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer","doc":"This module represents the BACnet Unconfirmed Private Transfer service.\n\nThe Unconfirmed Private Transfer service is used to invoke proprietary or non-standard services in a BACnet device.\n\nService Description (ASHRAE 135):\n> The UnconfirmedPrivateTransfer is used by a client BACnet-user to invoke proprietary or non-standard services in a\n> remote device. The specific proprietary services that may be provided by a given device are not defined by this standard.\n> The PrivateTransfer services provide a mechanism for specifying a particular proprietary service in a standardized manner.\n> The only required parameters for these services are a vendor identification code and a service number. Additional\n> parameters may be supplied for each service if required. The form and content of these additional parameters, if any, are not\n> defined by this standard. The vendor identification code and service number together serve to unambiguously identify the\n> intended purpose of the information conveyed by the remainder of the APDU or the service to be performed by the remote\n> device based on parameters in the remainder of the APDU.","ref":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.html"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an Unconfirmed Private Transfer Service.","ref":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Unconfirmed Private Transfer Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.t/0","doc":"","ref":"BACnet.Protocol.Services.UnconfirmedPrivateTransfer.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.UnconfirmedTextMessage","doc":"This module represents the BACnet Unconfirmed Text Message service.\n\nThe Unconfirmed Text Message service is used to send a text message to one or more devices. What devices do with\nthe text message is a local matter of the recipient.\n\nService Description (ASHRAE 135):\n> The UnconfirmedTextMessage service is used by a client BACnet-user to send a text message to one or more BACnet\n> devices. This service may be broadcast, multicast, or addressed to a single recipient. This service may be used in cases\n> where confirmation that the text message was received is not required. Messages may be prioritized into normal or urgent\n> categories. In addition, a given text message may optionally be classified by a numeric class code or class identification\n> string. This classification may be used by receiving BACnet devices to determine how to handle the text message. For\n> example, the message class might indicate a particular output device on which to print text or a set of actions to take when\n> the text message is received. In any case, the interpretation of the class is a local matter.","ref":"BACnet.Protocol.Services.UnconfirmedTextMessage.html"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedTextMessage.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an Unconfirmed Text Message Service.","ref":"BACnet.Protocol.Services.UnconfirmedTextMessage.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedTextMessage.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.UnconfirmedTextMessage.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedTextMessage.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.UnconfirmedTextMessage.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.UnconfirmedTextMessage.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Unconfirmed Text Message Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.UnconfirmedTextMessage.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.UnconfirmedTextMessage.t/0","doc":"","ref":"BACnet.Protocol.Services.UnconfirmedTextMessage.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.UtcTimeSynchronization","doc":"This module represents the BACnet UTC Time Synchronization service.\n\nThe UTC Time Synchronization service is used to send the correct UTC date and time onto the BACnet network or to a single recipient.\n\nService Description (ASHRAE 135):\n> The UTCTimeSynchronization service is used by a requesting BACnet-user to notify one or more remote devices of the\n> correct Universal Time Coordinated (UTC). This service may be broadcast, multicast, or addressed to a single recipient.\n> Its purpose is to notify recipients of the correct UTC so that devices may synchronize their internal clocks with one another.","ref":"BACnet.Protocol.Services.UtcTimeSynchronization.html"},{"type":"function","title":"BACnet.Protocol.Services.UtcTimeSynchronization.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into an UTC Time Synchronization Service.","ref":"BACnet.Protocol.Services.UtcTimeSynchronization.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.UtcTimeSynchronization.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.UtcTimeSynchronization.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.UtcTimeSynchronization.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.UtcTimeSynchronization.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.UtcTimeSynchronization.to_apdu/2","doc":"Get the Unconfirmed Service request for the given UTC Time Synchronization Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.UtcTimeSynchronization.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.UtcTimeSynchronization.t/0","doc":"","ref":"BACnet.Protocol.Services.UtcTimeSynchronization.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.WhoHas","doc":"This module represents the BACnet Who-Has service.\n\nThe Who-Has service is used to find a specific object (by identifier or name),\neither by querying all or a subset of BACnet devices.\n\nService Description (ASHRAE 135):\n> The Who-Has service is used by a sending BACnet-user to identify the device object identifiers and network addresses of\n> other BACnet devices whose local databases contain an object with a given Object_Name or a given Object_Identifier.","ref":"BACnet.Protocol.Services.WhoHas.html"},{"type":"function","title":"BACnet.Protocol.Services.WhoHas.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into a Who-Has Service.","ref":"BACnet.Protocol.Services.WhoHas.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.WhoHas.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.WhoHas.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.WhoHas.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.WhoHas.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.WhoHas.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Who-Has Service.\n\nAdditional supported `request_data`:\n  - `encoding: atom()` - Optional. The encoding of the object name (defaults to `:utf8`).\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.WhoHas.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.WhoHas.t/0","doc":"","ref":"BACnet.Protocol.Services.WhoHas.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.WhoIs","doc":"This module represents the BACnet Who-Is service.\n\nThe Who-Is service is used to discover the BACnet network and devices in it.\n\nService Description (ASHRAE 135):\n> The Who-Is service is used by a sending BACnet-user to determine the device object identifier, the network address, or both,\n> of other BACnet devices that share the same internetwork. The Who-Is service is an unconfirmed service.\n> The Who-Is service may be used to determine the device object identifier and network addresses of all devices on the network,\n> or to determine the network address of a specific device whose device object identifier is known, but whose address is not.\n> The IAm service is also an unconfirmed service. The I-Am service is used to respond to Who-Is service requests.\n> However, the IAm service request may be issued at any time. It does not need to be preceded by the receipt\n> of a Who-Is service request. In particular, a device may wish to broadcast an I-Am service request when it powers up.\n> The network address is derived either from the MAC address associated with the I-Am service request, if the device issuing\n> the request is on the local network, or from the NPCI if the device is on a remote network.","ref":"BACnet.Protocol.Services.WhoIs.html"},{"type":"function","title":"BACnet.Protocol.Services.WhoIs.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into a Who-Is Service.","ref":"BACnet.Protocol.Services.WhoIs.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.WhoIs.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.WhoIs.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.WhoIs.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.WhoIs.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.WhoIs.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Who-Is Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.WhoIs.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.WhoIs.t/0","doc":"","ref":"BACnet.Protocol.Services.WhoIs.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.WriteGroup","doc":"This module represents the BACnet Write Group service.\n\nThe Write Group service is used to write efficiently values to a large number of devices and objects.\n\nService Description (ASHRAE 135):\n> The purpose of WriteGroup is to facilitate the efficient distribution of values to a large number of devices and objects.\n> WriteGroup provides compact representations for data values that allow rapid transfer of many values. See Clause 12-53 and\n> Figure 12-10.\n> The WriteGroup service is used by a sending BACnet-user to update arbitrary Channel objects' Present_Value properties for\n> a particular numbered control group. The WriteGroup service is an unconfirmed service. Upon receipt of a WriteGroup\n> service request, all devices that are members of the specified control group shall write to their corresponding Channel objects'\n> Present_Value properties with the value applicable to the Channel Number, if any. A device shall be considered to be a\n> member of a control group if that device has one or more Channel objects for which the 'Group Number' from the service\n> appears in its Control_Groups property. If the receiving device does not contain one or more Channel objects with matching\n> channel numbers, then those values shall be ignored.\n> The WriteGroup service may be unicast, multicast, broadcast locally, on a particular remote network, or using the global\n> BACnet network address. Since global broadcasts are generally discouraged, the use of multiple directed broadcasts is\n> preferred.","ref":"BACnet.Protocol.Services.WriteGroup.html"},{"type":"function","title":"BACnet.Protocol.Services.WriteGroup.from_apdu/1","doc":"Converts the given Unconfirmed Service Request into a Write Group Service.","ref":"BACnet.Protocol.Services.WriteGroup.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.WriteGroup.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.WriteGroup.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.WriteGroup.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.WriteGroup.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.WriteGroup.to_apdu/2","doc":"Get the Unconfirmed Service request for the given Write Group Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.WriteGroup.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.WriteGroup.t/0","doc":"","ref":"BACnet.Protocol.Services.WriteGroup.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.WriteProperty","doc":"This module represents the BACnet Write Property service.\n\nThe Write Property service is used to write to a property of an object, if commandable, with priority.\n\nService Description (ASHRAE 135):\n> The WriteProperty service is used by a client BACnet-user to modify the value of a single specified property of a BACnet\n> object. This service potentially allows write access to any property of any object, whether a BACnet-defined object or not.\n> Some implementors may wish to restrict write access to certain properties of certain objects. In such cases, an attempt to\n> modify a restricted property shall result in the return of an error of 'Error Class' PROPERTY and 'Error Code'\n> WRITE_ACCESS_DENIED. Note that these restricted properties may be accessible through the use of Virtual Terminal\n> services or other means at the discretion of the implementor.","ref":"BACnet.Protocol.Services.WriteProperty.html"},{"type":"function","title":"BACnet.Protocol.Services.WriteProperty.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Write Property Service.","ref":"BACnet.Protocol.Services.WriteProperty.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.WriteProperty.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.WriteProperty.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.WriteProperty.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.WriteProperty.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.WriteProperty.to_apdu/2","doc":"Get the Confirmed Service request for the given Write Property Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.WriteProperty.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.WriteProperty.t/0","doc":"","ref":"BACnet.Protocol.Services.WriteProperty.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.WritePropertyMultiple","doc":"This module represents the BACnet Write Property Multiple service.\n\nThe Write Property Multiple service is used to write to one or more properties of one or more objects,\nif commandable, with priority.\n\nService Description (ASHRAE 135):\n> The WriteProperty service is used by a client BACnet-user to modify the value of a single specified property of a BACnet\n> object. This service potentially allows write access to any property of any object, whether a BACnet-defined object or not.\n> Some implementors may wish to restrict write access to certain properties of certain objects. In such cases, an attempt to\n> modify a restricted property shall result in the return of an error of 'Error Class' PROPERTY and 'Error Code'\n> WRITE_ACCESS_DENIED. Note that these restricted properties may be accessible through the use of Virtual Terminal\n> services or other means at the discretion of the implementor.","ref":"BACnet.Protocol.Services.WritePropertyMultiple.html"},{"type":"function","title":"BACnet.Protocol.Services.WritePropertyMultiple.from_apdu/1","doc":"Converts the given Confirmed Service Request into a Write Property Multiple Service.","ref":"BACnet.Protocol.Services.WritePropertyMultiple.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.WritePropertyMultiple.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.WritePropertyMultiple.html#get_name/0"},{"type":"function","title":"BACnet.Protocol.Services.WritePropertyMultiple.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.WritePropertyMultiple.html#is_confirmed/0"},{"type":"function","title":"BACnet.Protocol.Services.WritePropertyMultiple.to_apdu/2","doc":"Get the Confirmed Service request for the given Write Property Multiple Service.\n\nSee the `BACnet.Protocol.Services.Protocol` function documentation for more information.","ref":"BACnet.Protocol.Services.WritePropertyMultiple.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.WritePropertyMultiple.t/0","doc":"","ref":"BACnet.Protocol.Services.WritePropertyMultiple.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.AtomicReadFileAck","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicReadFileAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.AtomicWriteFileAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck","doc":"","ref":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.ConfirmedPrivateTransferAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.CreateObjectAck","doc":"","ref":"BACnet.Protocol.Services.Ack.CreateObjectAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.CreateObjectAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.CreateObjectAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.CreateObjectAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.CreateObjectAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.CreateObjectAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.CreateObjectAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck","doc":"","ref":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.GetAlarmSummaryAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEnrollmentSummaryAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.GetEventInformationAck","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEventInformationAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.GetEventInformationAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEventInformationAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.GetEventInformationAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEventInformationAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.GetEventInformationAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.GetEventInformationAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.ReadPropertyAck","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ReadPropertyAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ReadPropertyAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.ReadPropertyAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadPropertyMultipleAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Ack.ReadRangeAck","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadRangeAck.html"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ReadRangeAck.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadRangeAck.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Ack.ReadRangeAck.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadRangeAck.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Ack.ReadRangeAck.t/0","doc":"","ref":"BACnet.Protocol.Services.Ack.ReadRangeAck.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Error.AddListElementError","doc":"","ref":"BACnet.Protocol.Services.Error.AddListElementError.html"},{"type":"function","title":"BACnet.Protocol.Services.Error.AddListElementError.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Error.AddListElementError.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Error.AddListElementError.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Error.AddListElementError.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Error.AddListElementError.t/0","doc":"","ref":"BACnet.Protocol.Services.Error.AddListElementError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError","doc":"","ref":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.html"},{"type":"function","title":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.t/0","doc":"","ref":"BACnet.Protocol.Services.Error.ConfirmedPrivateTransferError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Error.CreateObjectError","doc":"","ref":"BACnet.Protocol.Services.Error.CreateObjectError.html"},{"type":"function","title":"BACnet.Protocol.Services.Error.CreateObjectError.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Error.CreateObjectError.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Error.CreateObjectError.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Error.CreateObjectError.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Error.CreateObjectError.t/0","doc":"","ref":"BACnet.Protocol.Services.Error.CreateObjectError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Error.DeleteObjectError","doc":"","ref":"BACnet.Protocol.Services.Error.DeleteObjectError.html"},{"type":"function","title":"BACnet.Protocol.Services.Error.DeleteObjectError.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Error.DeleteObjectError.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Error.DeleteObjectError.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Error.DeleteObjectError.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Error.DeleteObjectError.t/0","doc":"","ref":"BACnet.Protocol.Services.Error.DeleteObjectError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Error.RemoveListElementError","doc":"","ref":"BACnet.Protocol.Services.Error.RemoveListElementError.html"},{"type":"function","title":"BACnet.Protocol.Services.Error.RemoveListElementError.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Error.RemoveListElementError.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Error.RemoveListElementError.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Error.RemoveListElementError.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Error.RemoveListElementError.t/0","doc":"","ref":"BACnet.Protocol.Services.Error.RemoveListElementError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.Services.Error.WritePropertyMultipleError","doc":"","ref":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.html"},{"type":"function","title":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.from_apdu/1","doc":"","ref":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.html#from_apdu/1"},{"type":"function","title":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.to_apdu/2","doc":"","ref":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.t/0","doc":"","ref":"BACnet.Protocol.Services.Error.WritePropertyMultipleError.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms","doc":"BACnet has various different types of event algorithms.\nEach of them is implemented by a different module.\n\nThe event algorithm `AccessEvent` is not supported.\n\nASHRAE 135:\n> Event algorithms monitor a value and evaluate whether the condition for\n> a transition of event state exists. The result of the evaluation,\n> indicated to the Event-State-Detection process, may be a transition to\n> a new event state, a transition to the same event state, or no transition.\n> The final determination of the Event_State property value is the responsibility\n> of the Event-State- Detection process and is subject to additional conditions. See Clause 13.2.\n>\n> Each of the event algorithms defines its input parameters, the allowable normal and\n> offnormal states, the conditions for transitions between those states,\n> and the notification parameters conveyed in event notifications for the algorithm.\n> When executing an event algorithm, all conditions defined for the algorithm shall be\n> evaluated in the order as presented for the algorithm. Some algorithms specify\n> optional conditions, marked as \"Optional:\" Whether or not an implementation uses\n> these conditions is a local matter. If no condition evaluates to true, then no\n> transition shall be indicated to the Event-State-Detection process.","ref":"BACnet.Protocol.EventAlgorithms.html"},{"type":"type","title":"BACnet.Protocol.EventAlgorithms.event_algorithm/0","doc":"Possible BACnet event algorithms.","ref":"BACnet.Protocol.EventAlgorithms.html#t:event_algorithm/0"},{"type":"module","title":"BACnet.Protocol.EventParameters","doc":"BACnet has various different types of event parameters.\nEach of them is represented by a different module.\n\nThe event algorithm `AccessEvent` is not supported.\n\nConsult the module `BACnet.Protocol.EventAlgorithms` for\ndetails about each event's algorithm.","ref":"BACnet.Protocol.EventParameters.html"},{"type":"function","title":"BACnet.Protocol.EventParameters.encode/2","doc":"","ref":"BACnet.Protocol.EventParameters.html#encode/2"},{"type":"function","title":"BACnet.Protocol.EventParameters.parse/1","doc":"","ref":"BACnet.Protocol.EventParameters.html#parse/1"},{"type":"function","title":"BACnet.Protocol.EventParameters.valid?/1","doc":"Validates whether the given event parameter is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.EventParameters.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.EventParameters.event_parameter/0","doc":"Possible BACnet event parameters.","ref":"BACnet.Protocol.EventParameters.html#t:event_parameter/0"},{"type":"module","title":"BACnet.Protocol.FaultAlgorithms","doc":"BACnet has various different types of fault algorithms.\nEach of them is implemented by a different module.\n\nASHRAE 135:\n> Certain object types may optionally support a fault algorithm which has\n> externally visible inputs and is performed as part of the object's\n> reliability-evaluation process. This clause defines the standard fault algorithms.\n> To determine which algorithm is applied by which object type, see the\n> object type definitions in Clause 12.\n>\n> Fault algorithms monitor a value and evaluate whether the condition for\ntransition of reliability exists. The result of the evaluation,\n> indicated to the reliability-evaluation process, may be a transition\n> to a new reliability, a transition to the same reliability, or no transition.\n> The final determination of the Reliability property value is the responsibility\n> of the reliability evaluation process and is subject to additional conditions.\n> See Clause 13.2.\n> Each of the fault algorithms defines its input parameters, the allowable\n> reliability values, and the conditions for transitions between those values.\n> When evaluating the monitored value, all conditions defined for the algorithm\n> shall be evaluated in the order as presented for the algorithm.\n> Some algorithms specify optional conditions, marked as \"Optional:\" whether\n> or not an implementation uses these conditions is a local matter.\n> If no condition evaluates to true, then no transition shall be indicated\n> to the reliability evaluation process.","ref":"BACnet.Protocol.FaultAlgorithms.html"},{"type":"type","title":"BACnet.Protocol.FaultAlgorithms.fault_algorithm/0","doc":"Possible BACnet fault algorithms.","ref":"BACnet.Protocol.FaultAlgorithms.html#t:fault_algorithm/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters","doc":"BACnet has various different types of fault parameters.\nEach of them is represented by a different module.\n\nConsult the module `BACnet.Protocol.FaultAlgorithms` for\ndetails about each fault's algorithm.","ref":"BACnet.Protocol.FaultParameters.html"},{"type":"function","title":"BACnet.Protocol.FaultParameters.encode/2","doc":"","ref":"BACnet.Protocol.FaultParameters.html#encode/2"},{"type":"function","title":"BACnet.Protocol.FaultParameters.parse/1","doc":"","ref":"BACnet.Protocol.FaultParameters.html#parse/1"},{"type":"function","title":"BACnet.Protocol.FaultParameters.valid?/1","doc":"Validates whether the given fault parameter is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.FaultParameters.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.FaultParameters.fault_parameter/0","doc":"Possible BACnet fault parameters.","ref":"BACnet.Protocol.FaultParameters.html#t:fault_parameter/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters","doc":"BACnet has various different types of notification parameters.\nEach of them is represented by a different module.\n\nThe event algorithm `AccessEvent` is not supported.\n\nConsult the module `BACnet.Protocol.EventAlgorithms` for\ndetails about each event's algorithms.\nConsult the module `BACnet.Protocol.EventParameters` for\ndetails about each event's parameters.","ref":"BACnet.Protocol.NotificationParameters.html"},{"type":"function","title":"BACnet.Protocol.NotificationParameters.encode/2","doc":"","ref":"BACnet.Protocol.NotificationParameters.html#encode/2"},{"type":"function","title":"BACnet.Protocol.NotificationParameters.parse/1","doc":"","ref":"BACnet.Protocol.NotificationParameters.html#parse/1"},{"type":"function","title":"BACnet.Protocol.NotificationParameters.valid?/1","doc":"Validates whether the given notification parameter is in form valid.\n\nIt only validates the struct is valid as per type specification.","ref":"BACnet.Protocol.NotificationParameters.html#valid?/1"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.notification_parameter/0","doc":"Possible BACnet notification parameters.","ref":"BACnet.Protocol.NotificationParameters.html#t:notification_parameter/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.BufferReady","doc":"Implements the BACnet event algorithm `BufferReady`.\n\nThe BufferReady event algorithm detects whether a defined number of records\nhave been added to a log buffer since start of operation or the previous event,\nwhichever is most recent.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.7.","ref":"BACnet.Protocol.EventAlgorithms.BufferReady.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.BufferReady.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`previous_count` of `EventParameters.BufferReady` gets\nautomatically updated in the state on event.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue is greater than\n> or equal to pPreviousCount, and (pMonitoredValue - pPreviousCount)\n> is greater than or equal to pThreshold and pThreshold is greater than 0,\n> then indicate a transition to the NORMAL event state.\n>\n> (b) If pCurrentState is NORMAL, and pMonitoredValue is less than\n> pPreviousCount, and (pMonitoredValue - pPreviousCount + 2^32 - 1)\n> is greater than or equal to pThreshold and pThreshold is greater than 0,\n> then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.BufferReady.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.BufferReady.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.BufferReady.html#new/3"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.BufferReady.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`).","ref":"BACnet.Protocol.EventAlgorithms.BufferReady.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.BufferReady.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.BufferReady.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring","doc":"Implements the BACnet event algorithm `ChangeOfBitstring`.\n\nThe ChangeOfBitstring event algorithm detects whether the monitored value of type\nBITSTRING equals a value that is listed as an alarm value, after applying a bitmask.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.1.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue, after applying pBitmask,\n> is equal to any of the values contained in pAlarmValues for pTimeDelay,\n> then indicate a transition to the OFFNORMAL event state.\n>\n> (b) If pCurrentState is OFFNORMAL, and pMonitoredValue, after applying pBitmask,\n> is not equal to any of the values contained in pAlarmValues for pTimeDelayNormal,\n> then indicate a transition to the NORMAL event state.\n>\n> (c) Optional: If pCurrentState is OFFNORMAL, and pMonitoredValue, after applying pBitmask,\n> is equal to one of the values contained in pAlarmValues that is different from the value\n> that caused the last transition to OFFNORMAL and remains equal to that value for pTimeDelay,\n> then indicate a transition to the OFFNORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfBitstring.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString","doc":"Implements the BACnet event algorithm `ChangeOfCharacterString`.\n\nThe ChangeOfCharacterString event algorithm detects whether the monitored value\nmatches a character string that is listed as an alarm value.\nAlarm values are of type BACnetOptionalCharacterString, and may also be NULL or\nan empty character string.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.16.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue matches any of\n> the values contained in pAlarmValues for pTimeDelay, then indicate\n> a transition to the OFFNORMAL event state.\n>\n> (b) If pCurrentState is OFFNORMAL, and pMonitoredValue does not match any\n> of the values contained in pAlarmValues for pTimeDelayNormal, then indicate\n> a transition to the NORMAL event state.\n>\n> (c) If pCurrentState is OFFNORMAL, and pMonitoredValue matches one of the\n> values contained in pAlarmValues that is different from the value that caused\n> the last transition to OFFNORMAL, and remains equal to that value for pTimeDelay,\n> then indicate a transition to the OFFNORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfCharacterString.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety","doc":"Implements the BACnet event algorithm `ChangeOfLifeSafety`.\n\nThe ChangeOfLifeSafety event algorithm detects whether the monitored value equals\na value that is listed as an alarm value or life safety alarm value.\nEvent state transitions are also indicated if the value of the mode algorithm changed\nsince the last transition indicated. In this case, any time delays are overridden\nand the transition is indicated immediately.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.8.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue is equal to any of the values\n> contained in pAlarmValues, and remains within the set of values of pAlarmValues\n> either for pTimeDelay or for pMode changes, then indicate a transition\n> to the OFFNORMAL event state.\n>\n> (b) If pCurrentState is NORMAL, and pMonitoredValue is equal to any of the values\n> contained in pLifeSafetyAlarmValues, and remains within the set of values of\n> pLifeSafetyAlarmValues either for pTimeDelay or for pMode changes,\n> then indicate a transition to the LIFE_SAFETY_ALARM event state.\n>\n> (c) If pCurrentState is NORMAL, and pMode changes, then indicate a transition\n> to the NORMAL event state.\n>\n> (d) If pCurrentState is OFFNORMAL, and pMonitoredValue is not equal to any of the\n> values contained in pAlarmValues and pLifeSafetyAlarmValues either for\n> pTimeDelayNormal or for pMode changes, then indicate a transition\n> to the NORMAL event state.\n>\n> (e) If pCurrentState is OFFNORMAL, and pMonitoredValue is equal to any of the values\n> contained in pLifeSafetyAlarmValues, and remains within the set of values of\n> pLifeSafetyAlarmValues either for pTimeDelay or for pMode changes,\n> then indicate a transition to the LIFE_SAFETY_ALARM event state.\n>\n> (f) Optional: If pCurrentState is OFFNORMAL, and pMonitoredValue is equal to one of\n> the values contained in pAlarmValues that is different from the value causing\n> the last transition to OFFNORMAL, and remains equal to that value for pTimeDelay,\n> then indicate a transition to the OFFNORMAL event state.\n>\n> (g) If pCurrentState is OFFNORMAL, and pMode changes, then indicate a transition\n> to the OFFNORMAL event state.\n>\n> (h) If pCurrentState is LIFE_SAFETY_ALARM, and pMonitoredValue is not equal to any\n> of the values contained in pAlarmValues and pLifeSafetyAlarmValues either for\n> pTimeDelayNormal or for pMode changes, then indicate a transition\n> to the NORMAL event state.\n>\n> (i) If pCurrentState is LIFE_SAFETY_ALARM, and pMonitoredValue is equal to any\n> of the values contained in pAlarmValues, and remains within the set of values\n> of pAlarmValues either for pTimeDelay or for pMode changes,\n> then indicate a transition to the OFFNORMAL event state.\n>\n> (j) Optional: If pCurrentState is LIFE_SAFETY_ALARM, and pMonitoredValue is equal\n> to one of the values contained in pLifeSafetyAlarmValues that is different\n> from the value causing the last transition to LIFE_SAFETY_ALARM,\n> and remains equal to that value for pTimeDelay,\n> then indicate a transition to the LIFE_SAFETY_ALARM event state.\n>\n> (k) If pCurrentState is LIFE_SAFETY_ALARM, and pMode changes, then indicate\n> a transition to the LIFE_SAFETY_ALARM event state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.new/4","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.html#new/4"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.update/2","doc":"Updates the state using the given parameters (`mode`, `monitored_value`,\n`operation_expected`, `parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfLifeSafety.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ChangeOfState","doc":"Implements the BACnet event algorithm `ChangeOfState`.\n\nThe ChangeOfState event algorithm detects whether the monitored value equals a value\nthat is listed as an alarm value. The monitored value may be of any discrete or\nenumerated datatype, including Boolean.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.2.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfState.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfState.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue is equal to any\n> of the values contained in pAlarmValues for pTimeDelay,\n> then indicate a transition to the OFFNORMAL event state.\n>\n> (b) If pCurrentState is OFFNORMAL, and pMonitoredValue is not equal\n> to any of the values contained in pAlarmValues for pTimeDelayNormal,\n> then indicate a transition to the NORMAL event state.\n>\n> (c) Optional: If pCurrentState is OFFNORMAL, and pMonitoredValue is\n> equal to one of the values contained in pAlarmValues that is different\n> from the value that caused the last transition to OFFNORMAL, and remains\n> equal to that value for pTimeDelay,\n> then indicate a transition to the OFFNORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfState.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfState.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfState.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfState.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfState.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.ChangeOfState.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfState.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags","doc":"Implements the BACnet event algorithm `ChangeOfStatusFlags`.\n\nThe ChangeOfStatusFlags event algorithm detects whether a significant flag of the\nmonitored value of type BACnetStatusFlags has the value TRUE.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.11.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue has a value of TRUE\n> in any of its flags that also has a value of TRUE in the corresponding\n> flag in pSelectedFlags for pTimeDelay, then indicate a transition to the\n> OFFNORMAL event state.\n>\n> (b) If pCurrentState is OFFNORMAL, and pMonitoredValue has none of its\n> flags set to TRUE that also has a value of TRUE in the corresponding flag\n> in the pSelectedFlags event parameter for pTimeDelayNormal, then indicate\n> a transition to the NORMAL event state.\n>\n> (c) If pCurrentState is OFFNORMAL, and the set of selected flags of\n> pMonitoredValue that have a value of TRUE changes, then indicate a transition\n> to the OFFNORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.html#new/3"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `present_value`).","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfStatusFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ChangeOfValue","doc":"Implements the BACnet event algorithm `ChangeOfValue`.\n\nThe ChangeOfValue event algorithm, for monitored values of datatype REAL, detects\nwhether the absolute value of the monitored value changes by an amount equal to\nor greater than a positive REAL increment.\n\nThe ChangeOfValue event algorithm, for monitored values of datatype BIT STRING,\ndetects whether the monitored value changes in any of the bits specified by a bitmask.\n\nFor detection of change, the value of the monitored value when a transition to NORMAL\nis indicated shall be used in evaluation of the conditions until the next transition\nto NORMAL is indicated. The initialization of the value used in evaluation before\nthe first transition to NORMAL is indicated is a local matter.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.3.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state (`false`),\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm, for a monitored value of type REAL, are:\n>\n> (a) If pCurrentState is NORMAL, and the absolute value of pMonitoredValue changes by an amount\n> equal to or greater than pIncrement for pTimeDelayNormal, then indicate a transition\n> to the NORMAL event state.\n>\n> The conditions evaluated by this event algorithm, for a monitored value of type BIT STRING, are:\n>\n> (a) If pCurrentState is NORMAL, and any of the significant bits of pMonitoredValue change state\n> and remain changed for pTimeDelayNormal, then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.ChangeOfValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.CommandFailure","doc":"Implements the BACnet event algorithm `CommandFailure`.\n\nThe CommandFailure event algorithm detects whether the monitored value and the feedback value\ndisagree for a time period. It may be used, for example, to verify that a process change\nhas occurred after writing a property.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.4.","ref":"BACnet.Protocol.EventAlgorithms.CommandFailure.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.CommandFailure.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pFeedbackValue is not equal to\n> pMonitoredValue for pTimeDelay, then indicate a transition to\n> the OFFNORMAL event state.\n>\n> (b) If pCurrentState is OFFNORMAL, and pMonitoredValue is equal to\n> pMonitoredValue for pTimeDelayNormal, then indicate a transition to\n> the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.CommandFailure.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.CommandFailure.new/2","doc":"Creates a new algorithm state.\n\nThe `encoding` field of `Encoding` structs is ignored.","ref":"BACnet.Protocol.EventAlgorithms.CommandFailure.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.CommandFailure.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.CommandFailure.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.CommandFailure.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.CommandFailure.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.ComplexEventType","doc":"Implements the BACnet event algorithm `ComplexEventType`.\n\nThe `ComplexEventType` algorithm is introduced to allow the addition of proprietary\nevent algorithms whose event algorithms are not necessarily network-visible.\n\nThis module has NO implementation.","ref":"BACnet.Protocol.EventAlgorithms.ComplexEventType.html"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange","doc":"Implements the BACnet event algorithm `DoubleOutOfRange`.\n\nThe DoubleOutOfRange event algorithm detects whether the monitored value exceeds\na range defined by a high limit and a low limit. Each of these limits may be\nenabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting event state,\na deadband is applied when the value is in the process of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.13.\n\nThis module uses `BACnet.Protocol.EventAlgorithms.OutOfRange` as underlying implementation.","ref":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (b) If pCurrentState is NORMAL, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (c) If pCurrentState is HIGH_LIMIT, and the HighLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (d) Optional: If pCurrentState is HIGH_LIMIT, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (e) If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less than (pHighLimit - pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.\n>\n> (f) If pCurrentState is LOW_LIMIT, and the LowLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (g) Optional: If pCurrentState is LOW_LIMIT, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (h) If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater than (pLowLimit + pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.html#new/3"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.update/2","doc":"Updates the state using the given parameters (`limit_enable`, `monitored_value`,\n`parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.DoubleOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.Extended","doc":"Implements the BACnet event algorithm `Extended`.\n\nThe Extended event algorithm detects event conditions based on a proprietary event algorithm.\nThe proprietary event algorithm uses algorithms and conditions defined by the vendor.\nThe algorithm is identified by a vendor-specific event type that is in the scope of the\nvendor's vendor identification code. The algorithm may, at the vendor's discretion,\nindicate a new event state, a transition to the same event state, or no transition to the\nEvent-State-Detection. The indicated new event states may be NORMAL, and any OffNormal event state.\nFAULT event state may not be indicated by this algorithm. For the purpose of proprietary evaluation\nof unreliability conditions that may result in FAULT event state,\na FAULT_EXTENDED fault algorithm shall be used.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.10.\n\nThis module has NO implementation.","ref":"BACnet.Protocol.EventAlgorithms.Extended.html"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.FloatingLimit","doc":"Implements the BACnet event algorithm `FloatingLimit`.\n\nThe FloatingLimit event algorithm detects whether the monitored value exceeds a range\ndefined by a setpoint, a high difference limit, a low difference limit and a deadband.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.5.","ref":"BACnet.Protocol.EventAlgorithms.FloatingLimit.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.FloatingLimit.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\nPlease note that the actual setpoint needs to be set through `update/2`,\nas no lookup will occur (and can not), so the actual active setpoint as float,\nneeds to be set in the state.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue is greater than (pSetpoint + pHighDiffLimit)\n> for pTimeDelay, then indicate a transition to the HIGH_LIMIT event state.\n>\n> (b) If pCurrentState is NORMAL, and pMonitoredValue is less than (pSetpoint - pLowDiffLimit)\n> for pTimeDelay, then indicate a transition to the LOW_LIMIT event state.\n>\n> (c) Optional: If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less than (pSetpoint - pLowDiffLimit)\n> for pTimeDelay, then indicate a transition to the LOW_LIMIT event state.\n>\n> (d) If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less than (pSetpoint + pHighDiffLimit - pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.\n>\n> (e) Optional: If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater than (pSetpoint + pHighDiffLimit)\n> for pTimeDelay, then indicate a transition to the HIGH_LIMIT event state.\n>\n> (f) If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater than (pSetpoint - pLowDiffLimit + pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.FloatingLimit.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.FloatingLimit.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.FloatingLimit.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.FloatingLimit.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`, `setpoint`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.FloatingLimit.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.FloatingLimit.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.FloatingLimit.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.OutOfRange","doc":"Implements the BACnet event algorithm `OutOfRange`.\n\nThe OutOfRange event algorithm detects whether the monitored value exceeds a range\ndefined by a high limit and a low limit. Each of these limits may be enabled or disabled.\nIf disabled, the normal range has no higher limit or no lower limit.\nIn order to reduce jitter of the resulting event state, a deadband is applied when\nthe value is in the process of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.6.","ref":"BACnet.Protocol.EventAlgorithms.OutOfRange.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.OutOfRange.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (b) If pCurrentState is NORMAL, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (c) If pCurrentState is HIGH_LIMIT, and the HighLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (d) Optional: If pCurrentState is HIGH_LIMIT, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (e) If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less than (pHighLimit - pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.\n>\n> (f) If pCurrentState is LOW_LIMIT, and the LowLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (g) Optional: If pCurrentState is LOW_LIMIT, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (h) If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater than (pLowLimit + pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.OutOfRange.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.OutOfRange.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.OutOfRange.html#new/3"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.OutOfRange.update/2","doc":"Updates the state using the given parameters (`limit_enable`, `monitored_value`,\n`parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.OutOfRange.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.OutOfRange.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.OutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange","doc":"Implements the BACnet event algorithm `SignedOutOfRange`.\n\nThe SignedOutOfRange event algorithm detects whether the monitored value exceeds a\nrange defined by a high limit and a low limit. Each of these limits may be enabled\nor disabled. If disabled, the normal range has no lower limit or no higher limit\nrespectively. In order to reduce jitter of the resulting event state, a deadband\nis applied when the value is in the process of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.14.","ref":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (b) If pCurrentState is NORMAL, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (c) If pCurrentState is HIGH_LIMIT, and the HighLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (d) Optional: If pCurrentState is HIGH_LIMIT, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (e) If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less than (pHighLimit - pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.\n>\n> (f) If pCurrentState is LOW_LIMIT, and the LowLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (g) Optional: If pCurrentState is LOW_LIMIT, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (h) If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater than (pLowLimit + pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.html#new/3"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.update/2","doc":"Updates the state using the given parameters (`limit_enable`, `monitored_value`,\n`parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.SignedOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange","doc":"Implements the BACnet event algorithm `UnsignedOutOfRange`.\n\nThe UnsignedOutOfRange event algorithm detects whether the monitored value exceeds a\nrange defined by a high limit and a low limit. Each of these limits may be enabled\nor disabled. If disabled, the normal range has no lower limit or no higher limit\nrespectively. In order to reduce jitter of the resulting event state, a deadband\nis applied when the value is in the process of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.15.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (b) If pCurrentState is NORMAL, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (c) If pCurrentState is HIGH_LIMIT, and the HighLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (d) Optional: If pCurrentState is HIGH_LIMIT, and the LowLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is less than pLowLimit for pTimeDelay, then indicate a transition\n> to the LOW_LIMIT event state.\n>\n> (e) If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less than (pHighLimit - pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.\n>\n> (f) If pCurrentState is LOW_LIMIT, and the LowLimitEnable flag of pLimitEnable is FALSE,\n> then indicate a transition to the NORMAL event state.\n>\n> (g) Optional: If pCurrentState is LOW_LIMIT, and the HighLimitEnable flag of pLimitEnable is TRUE,\n> and pMonitoredValue is greater than pHighLimit for pTimeDelay, then indicate a transition\n> to the HIGH_LIMIT event state.\n>\n> (h) If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater than (pLowLimit + pDeadband)\n> for pTimeDelayNormal, then indicate a transition to the NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.html#new/3"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.update/2","doc":"Updates the state using the given parameters (`limit_enable`, `monitored_value`,\n`parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventAlgorithms.UnsignedRange","doc":"Implements the BACnet event algorithm `UnsignedRange`.\n\nThe UnsignedRange event algorithm detects whether the monitored value exceeds a range\ndefined by a high limit and a low limit.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.9.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedRange.html"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.UnsignedRange.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\n`:delayed_event` helps identifying whether the algorithm needs\nto be called periodically in order to overcome the `time_delay`\nand trigger a state change. As soon as `:event` or `:no_event`\nis given as flag, it means the caller can go back to event\norientated calling.\n\nThe `status_flags` field of the notifications parameters is\nupdated from the state with the correct `in_alarm` state,\nhowever to ensure the Status Flags have an overall correct status,\nthe user has to make sure all bits are correctly.\n\nASHRAE 135:\n> The conditions evaluated by this event algorithm are:\n>\n> (a) If pCurrentState is NORMAL, and pMonitoredValue is greater than\n> pHighLimit for pTimeDelay, then indicate a transition to the\n> HIGH_LIMIT event state.\n\n> (b) If pCurrentState is NORMAL, and pMonitoredValue is less than pLowLimit\n> for pTimeDelay, then indicate a transition to the LOW_LIMIT event state.\n>\n> (c) Optional: If pCurrentState is HIGH_LIMIT, and pMonitoredValue is less\n> than pLowLimit for pTimeDelay, then indicate a transition to the\n> LOW_LIMIT event state.\n>\n> (d) If pCurrentState is HIGH_LIMIT, and pMonitoredValue is equal to or less\n> than pHighLimit for pTimeDelayNormal, then indicate a transition to the\n> NORMAL event state.\n> (e) Optional: If pCurrentState is LOW_LIMIT, and pMonitoredValue is greater\n> than pHighLimit for pTimeDelay, then indicate a transition to the\n> HIGH_LIMIT event state.\n>\n> (f) If pCurrentState is LOW_LIMIT, and pMonitoredValue is equal to or greater\n> than pLowLimit, for pTimeDelayNormal, then indicate a transition to the\n> NORMAL event state.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedRange.html#execute/1"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.UnsignedRange.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedRange.html#new/2"},{"type":"function","title":"BACnet.Protocol.EventAlgorithms.UnsignedRange.update/2","doc":"Updates the state using the given parameters (`monitored_value`,\n`parameters`, `status_flags`).","ref":"BACnet.Protocol.EventAlgorithms.UnsignedRange.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.EventAlgorithms.UnsignedRange.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.EventAlgorithms.UnsignedRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.BufferReady","doc":"Represents the BACnet event algorithm `BufferReady` parameters.\n\nThe BufferReady event algorithm detects whether a defined number of records have been added to a log buffer since\nstart of operation or the previous event, whichever is most recent.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.7.","ref":"BACnet.Protocol.EventParameters.BufferReady.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.BufferReady.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.BufferReady.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.ChangeOfBitstring","doc":"Represents the BACnet event algorithm `ChangeOfBitstring` parameters.\n\nThe ChangeOfBitstring event algorithm detects whether the monitored value of type BIT STRING equals a value\nthat is listed as an alarm value, after applying a bitmask.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.1.","ref":"BACnet.Protocol.EventParameters.ChangeOfBitstring.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.ChangeOfBitstring.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.ChangeOfBitstring.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.ChangeOfCharacterString","doc":"Represents the BACnet event algorithm `ChangeOfCharacterString` parameters.\n\nThe ChangeOfCharacterString event algorithm detects whether the monitored value matches a character string\nthat is listed as an alarm value. Alarm values are of type BACnetOptionalCharacterString, and may also be NULL or an\nempty character string.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.16.","ref":"BACnet.Protocol.EventParameters.ChangeOfCharacterString.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.ChangeOfCharacterString.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.ChangeOfCharacterString.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.ChangeOfLifeSafety","doc":"Represents the BACnet event algorithm `ChangeOfLifeSafety` parameters.\n\nThe ChangeOfLifeSafety event algorithm detects whether the monitored value equals a value that is listed as an\nalarm value or life safety alarm value. Event state transitions are also indicated if the value of the mode parameter changed\nsince the last transition indicated. In this case, any time delays are overridden and the transition is indicated immediately.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.8.","ref":"BACnet.Protocol.EventParameters.ChangeOfLifeSafety.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.ChangeOfLifeSafety.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.ChangeOfLifeSafety.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.ChangeOfState","doc":"Represents the BACnet event algorithm `ChangeOfState` parameters.\n\nThe ChangeOfState event algorithm detects whether the monitored value equals a value that is listed as an alarm\nvalue. The monitored value may be of any discrete or enumerated datatype, including Boolean.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.2.","ref":"BACnet.Protocol.EventParameters.ChangeOfState.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.ChangeOfState.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.ChangeOfState.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.ChangeOfStatusFlags","doc":"Represents the BACnet event algorithm `ChangeOfStatusFlags` parameters.\n\nThe ChangeOfStatusFlags event algorithm detects whether a significant flag of the monitored value of type\nBACnetStatusFlags has the value TRUE.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.11.","ref":"BACnet.Protocol.EventParameters.ChangeOfStatusFlags.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.ChangeOfStatusFlags.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.ChangeOfStatusFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.ChangeOfValue","doc":"Represents the BACnet event algorithm `ChangeOfValue` parameters.\n\nThe ChangeOfValue event algorithm, for monitored values of datatype REAL, detects whether the absolute value of\nthe monitored value changes by an amount equal to or greater than a positive REAL increment.\n\nThe ChangeOfValue event algorithm, for monitored values of datatype BIT STRING, detects whether the monitored\nvalue changes in any of the bits specified by a bitmask.\n\nFor detection of change, the value of the monitored value when a transition to NORMAL is indicated shall be used in\nevaluation of the conditions until the next transition to NORMAL is indicated. The initialization of the value used in\nevaluation before the first transition to NORMAL is indicated is a local matter.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.3.","ref":"BACnet.Protocol.EventParameters.ChangeOfValue.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.ChangeOfValue.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.ChangeOfValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.CommandFailure","doc":"Represents the BACnet event algorithm `CommandFailure` parameters.\n\nThe CommandFailure event algorithm detects whether the monitored value and the feedback value disagree for a time\nperiod. It may be used, for example, to verify that a process change has occurred after writing a property.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.4.","ref":"BACnet.Protocol.EventParameters.CommandFailure.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.CommandFailure.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.CommandFailure.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.DoubleOutOfRange","doc":"Represents the BACnet event algorithm `DoubleOutOfRange` parameters.\n\nThe DoubleOutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high\nlimit and a low limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting event state, a deadband is applied when the value is in the\nprocess of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.13.","ref":"BACnet.Protocol.EventParameters.DoubleOutOfRange.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.DoubleOutOfRange.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.DoubleOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.Extended","doc":"Represents the BACnet event algorithm `Extended` parameters.\n\nThe Extended event algorithm detects event conditions based on a proprietary event algorithm. The proprietary event\nalgorithm uses parameters and conditions defined by the vendor. The algorithm is identified by a vendor-specific event type\nthat is in the scope of the vendor's vendor identification code. The algorithm may, at the vendor's discretion, indicate a new\nevent state, a transition to the same event state, or no transition to the Event-State-Detection. The indicated new event states\nmay be NORMAL, and any OffNormal event state. FAULT event state may not be indicated by this algorithm. For the\npurpose of proprietary evaluation of unreliability conditions that may result in FAULT event state, a FAULT_EXTENDED\nfault algorithm shall be used.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.10.","ref":"BACnet.Protocol.EventParameters.Extended.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.Extended.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.Extended.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.FloatingLimit","doc":"Represents the BACnet event algorithm `FloatingLimit` parameters.\n\nThe FloatingLimit event algorithm detects whether the monitored value exceeds a range defined by a setpoint, a high\ndifference limit, a low difference limit and a deadband.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.5.","ref":"BACnet.Protocol.EventParameters.FloatingLimit.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.FloatingLimit.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.FloatingLimit.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.None","doc":"Represents the BACnet event algorithm `None` parameters.\n\nThis event algorithm has no parameters, no conditions, and does not indicate\nany transitions of event state. The NONE algorithm is used when only fault detection\nis in use by an object.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.17.","ref":"BACnet.Protocol.EventParameters.None.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.None.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.None.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.OutOfRange","doc":"Represents the BACnet event algorithm `OutOfRange` parameters.\n\nThe OutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high limit and a\nlow limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no higher limit or no lower limit.\nIn order to reduce jitter of the resulting event state, a deadband is applied when the value is in the process of returning to the\nnormal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.6.","ref":"BACnet.Protocol.EventParameters.OutOfRange.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.OutOfRange.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.OutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.SignedOutOfRange","doc":"Represents the BACnet event algorithm `SignedOutOfRange` parameters.\n\nThe SignedOutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high\nlimit and a low limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting event state, a deadband is applied when the value is in the\nprocess of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.14.","ref":"BACnet.Protocol.EventParameters.SignedOutOfRange.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.SignedOutOfRange.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.SignedOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.UnsignedOutOfRange","doc":"Represents the BACnet event algorithm `UnsignedOutOfRange` parameters.\n\nThe UnsignedOutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high\nlimit and a low limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting event state, a deadband is applied when the value is in the\nprocess of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.15.","ref":"BACnet.Protocol.EventParameters.UnsignedOutOfRange.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.UnsignedOutOfRange.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.UnsignedOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.EventParameters.UnsignedRange","doc":"Represents the BACnet event algorithm `UnsignedRange` parameters.\n\nThe UnsignedRange event algorithm detects whether the monitored value exceeds a range defined by a high limit and\na low limit.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.9.","ref":"BACnet.Protocol.EventParameters.UnsignedRange.html"},{"type":"type","title":"BACnet.Protocol.EventParameters.UnsignedRange.t/0","doc":"Representative type for the event parameter.","ref":"BACnet.Protocol.EventParameters.UnsignedRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString","doc":"Represents the BACnet fault algorithm `FaultCharacterString`.\n\nThe FAULT_CHARACTERSTRING fault algorithm detects whether the monitored value matches a\ncharacter string that is listed as a fault value. Fault values are of type\nBACnetOptionalCharacterString and may also be NULL or an empty character string.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.2.","ref":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.html"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\nASHRAE 135:\n> The conditions evaluated by this fault algorithm are:\n>\n> (a) If pCurrentReliability is NO_FAULT_DETECTED, and pMonitoredValue matches\n> one of the values in pFaultValues, then indicate a transition\n> to the MULTI_STATE_FAULT reliability.\n>\n> (b) If pCurrentReliability is MULTI_STATE_FAULT, and pMonitoredValue does not\n> match any of the values contained in pFaultValues,\n> then indicate a transition to the NO_FAULT_DETECTED reliability.\n>\n> (c) Optional: If pCurrentReliability is MULTI_STATE_FAULT, and pMonitoredValue\n> matches one of the values contained in pFaultValues that is different\n> from the value that caused the last transition to MULTI_STATE_FAULT,\n> then indicate a transition to the MULTI_STATE_FAULT reliability.","ref":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.html#execute/1"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.html#new/2"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`).","ref":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.FaultAlgorithms.FaultCharacterString.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultAlgorithms.FaultExtended","doc":"Represents the BACnet fault algorithm `FaultExtended`.\n\nThe FAULT_EXTENDED fault algorithm detects fault conditions based on a\nproprietary fault algorithm. The proprietary fault algorithm uses parameters\nand conditions defined by the vendor. The algorithm is identified by a\nvendor-specific fault type that is in the scope of the vendor's\nvendor identification code. The algorithm may, at the vendor's discretion,\nindicate a new reliability, a transition to the same reliability, or\nno transition to the reliability-evaluation process.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.3.\n\nThis module has NO implementation.","ref":"BACnet.Protocol.FaultAlgorithms.FaultExtended.html"},{"type":"module","title":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety","doc":"Represents the BACnet fault algorithm `FaultLifeSafety`.\n\nThe FAULT_LIFE_SAFETY fault algorithm detects whether the monitored value equals\na value that is listed as a fault value.\nThe monitored value is of type BACnetLifeSafetyState. If internal operational\nreliability is unreliable, then the internal reliability takes precedence over\nevaluation of the monitored value.\n\nIn addition, this algorithm monitors a life safety mode value. If reliability is\nMULTI_STATE_FAULT, then new transitions to MULTI_STATE_FAULT are indicated upon\nchange of the mode value.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.4.","ref":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.html"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\nASHRAE 135:\n> The conditions evaluated by this fault algorithm are:\n>\n> (a) If pCurrentReliability is NO_FAULT_DETECTED, and pMonitoredValue\n> is equal to any of the values in pFaultValues, then indicate\n> a transition to the MULTI_STATE_FAULT reliability.\n>\n> (b) If pCurrentReliability is MULTI_STATE_FAULT, and pMonitoredValue\n> is not equal to any of the values contained in pFaultValues,\n> then indicate a transition to the NO_FAULT_DETECTED reliability\n>\n> (c) If pCurrentReliability is MULTI_STATE_FAULT, and pMonitoredValue\n> is equal to any of the values contained in pFaultValues,\n> and pMode has changed since the last transition to MULTI_STATE_FAULT,\n> then indicate a transition to the MULTI_STATE_FAULT reliability.\n>\n> (d) Optional: If pCurrentReliability is MULTI_STATE_FAULT,\n> and pMonitoredValue is equal to one of the values contained\n> in pFaultValues that is different from the value causing the last transition\n> to MULTI_STATE_FAULT, then indicate a transition to the\n> MULTI_STATE_FAULT reliability.","ref":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.html#execute/1"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.new/3","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.html#new/3"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.update/2","doc":"Updates the state using the given parameters (`mode`, `monitored_value`, `parameters`).","ref":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.FaultAlgorithms.FaultLifeSafety.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultAlgorithms.FaultState","doc":"Represents the BACnet fault algorithm `FaultState`.\n\nThe FAULT_STATE fault algorithm detects whether the monitored value\nequals a value that is listed as a fault value. The monitored value\nmay be of any discrete or enumerated datatype, including Boolean.\nIf internal operational reliability is unreliable, then the\ninternal reliability takes precedence over evaluation of the monitored value.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.5.","ref":"BACnet.Protocol.FaultAlgorithms.FaultState.html"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultState.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\nASHRAE 135:\n> The conditions evaluated by this fault algorithm are:\n>\n> (a) If pCurrentReliability is NO_FAULT_DETECTED, and pMonitoredValue is equal\n> to any of the values in pFaultValues, then indicate a transition\n> to the MULTI_STATE_FAULT reliability.\n>\n> (b) If pCurrentReliability is MULTI_STATE_FAULT, and pMonitoredValue is not\n> equal to any of the values contained in pFaultValues, then indicate\n> a transition to the NO_FAULT_DETECTED reliability.\n>\n> (c) Optional: If pCurrentReliability is MULTI_STATE_FAULT, and pMonitoredValue\n> is equal one of the values contained in pFaultValues that is different from\n> the value that caused the last transition to MULTI_STATE_FAULT,\n> then indicate a transition to the MULTI_STATE_FAULT reliability.","ref":"BACnet.Protocol.FaultAlgorithms.FaultState.html#execute/1"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultState.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.FaultAlgorithms.FaultState.html#new/2"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultState.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`).","ref":"BACnet.Protocol.FaultAlgorithms.FaultState.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.FaultAlgorithms.FaultState.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.FaultAlgorithms.FaultState.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags","doc":"Represents the BACnet fault algorithm `FaultStatusFlags`.\n\nThe FAULT_STATUS_FLAGS fault algorithm detects whether the monitored\nstatus flags are indicating a fault condition.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.6.","ref":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.html"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.execute/1","doc":"Calculates the new state for the current state and parameters.\nPrior to this function invocation, the state should have been\nupdated with `update/2`, if any of the properties has changed.\n\nASHRAE 135:\n> The conditions evaluated by this fault algorithm are:\n>\n> (a) If pCurrentReliability is NO_FAULT_DETECTED,\n> and the FAULT bit in pMonitoredValue is TRUE, then\n> indicate a transition to the MEMBER_FAULT reliability.\n>\n> (b) If pCurrentReliability is MEMBER_FAULT,\n> and the FAULT bit in pMonitoredValue is FALSE,\n> then indicate a transition to the NO_FAULT_DETECTED reliability.","ref":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.html#execute/1"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.new/2","doc":"Creates a new algorithm state.","ref":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.html#new/2"},{"type":"function","title":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.update/2","doc":"Updates the state using the given parameters (`monitored_value`, `parameters`).","ref":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.html#update/2"},{"type":"opaque","title":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.t/0","doc":"Representative type for the event algorithm.","ref":"BACnet.Protocol.FaultAlgorithms.FaultStatusFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters.FaultCharacterString","doc":"Represents the BACnet fault algorithm `FaultCharacterString` parameters.\n\nThe FAULT_CHRACTERSTRING fault algorithm detects whether the monitored value matches a\ncharacter string that is listed as a fault value. Fault values are of type\nBACnetOptionalCharacterString and may also be NULL or an empty character string.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.2.","ref":"BACnet.Protocol.FaultParameters.FaultCharacterString.html"},{"type":"type","title":"BACnet.Protocol.FaultParameters.FaultCharacterString.t/0","doc":"Representative type for the fault parameter.","ref":"BACnet.Protocol.FaultParameters.FaultCharacterString.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters.FaultExtended","doc":"Represents the BACnet fault algorithm `FaultExtended` parameters.\n\nThe FAULT_EXTENDED fault algorithm detects fault conditions based on a\nproprietary fault algorithm. The proprietary fault algorithm uses parameters\nand conditions defined by the vendor. The algorithm is identified by a\nvendor-specific fault type that is in the scope of the vendor's\nvendor identification code. The algorithm may, at the vendor's discretion,\nindicate a new reliability, a transition to the same reliability, or\nno transition to the reliability-evaluation process.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.3.","ref":"BACnet.Protocol.FaultParameters.FaultExtended.html"},{"type":"type","title":"BACnet.Protocol.FaultParameters.FaultExtended.t/0","doc":"Representative type for the fault parameter.","ref":"BACnet.Protocol.FaultParameters.FaultExtended.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters.FaultLifeSafety","doc":"Represents the BACnet fault algorithm `FaultLifeSafety` parameters.\n\nThe FAULT_LIFE_SAFETY fault algorithm detects whether the monitored value equals\na value that is listed as a fault value.\nThe monitored value is of type BACnetLifeSafetyState. If internal operational\nreliability is unreliable, then the internal reliability takes precedence over\nevaluation of the monitored value.\n\nIn addition, this algorithm monitors a life safety mode value. If reliability is\nMULTI_STATE_FAULT, then new transitions to MULTI_STATE_FAULT are indicated upon\nchange of the mode value.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.4.","ref":"BACnet.Protocol.FaultParameters.FaultLifeSafety.html"},{"type":"type","title":"BACnet.Protocol.FaultParameters.FaultLifeSafety.t/0","doc":"Representative type for the fault parameter.","ref":"BACnet.Protocol.FaultParameters.FaultLifeSafety.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters.FaultState","doc":"Represents the BACnet fault algorithm `FaultState` parameters.\n\nThe FAULT_STATE fault algorithm detects whether the monitored value\nequals a value that is listed as a fault value. The monitored value\nmay be of any discrete or enumerated datatype, including Boolean.\nIf internal operational reliability is unreliable, then the\ninternal reliability takes precedence over evaluation of the monitored value.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.5.","ref":"BACnet.Protocol.FaultParameters.FaultState.html"},{"type":"type","title":"BACnet.Protocol.FaultParameters.FaultState.t/0","doc":"Representative type for the fault parameter.","ref":"BACnet.Protocol.FaultParameters.FaultState.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters.FaultStatusFlags","doc":"Represents the BACnet fault algorithm `FaultStatusFlags` parameters.\n\nThe FAULT_STATUS_FLAGS fault algorithm detects whether the monitored\nstatus flags are indicating a fault condition.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.6.","ref":"BACnet.Protocol.FaultParameters.FaultStatusFlags.html"},{"type":"type","title":"BACnet.Protocol.FaultParameters.FaultStatusFlags.t/0","doc":"Representative type for the fault parameter.","ref":"BACnet.Protocol.FaultParameters.FaultStatusFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.FaultParameters.None","doc":"Represents the BACnet fault algorithm `None` parameters.\n\nThe NONE fault algorithm is a placeholder for the case where no fault algorithm is applied by the object.\nThis fault algorithm has no parameters, no conditions, and does not indicate any transitions of reliability.\n\nFor more specific information about the fault algorithm, consult ASHRAE 135 13.4.1.","ref":"BACnet.Protocol.FaultParameters.None.html"},{"type":"type","title":"BACnet.Protocol.FaultParameters.None.t/0","doc":"Representative type for the fault parameter.","ref":"BACnet.Protocol.FaultParameters.None.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.BufferReady","doc":"Represents the BACnet event algorithm `BufferReady` notification parameters.\n\nThe BufferReady event algorithm detects whether a defined number of records have been added to a log buffer since\nstart of operation or the previous notification, whichever is most recent.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.7.","ref":"BACnet.Protocol.NotificationParameters.BufferReady.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.BufferReady.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.BufferReady.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfBitstring","doc":"Represents the BACnet event algorithm `ChangeOfBitstring` notification parameters.\n\nThe ChangeOfBitstring event algorithm detects whether the monitored value of type BIT STRING equals a value\nthat is listed as an alarm value, after applying a bitmask.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.1.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfBitstring.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfBitstring.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfBitstring.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfCharacterString","doc":"Represents the BACnet event algorithm `ChangeOfCharacterString` notification parameters.\n\nThe ChangeOfCharacterString event algorithm detects whether the monitored value matches a character string\nthat is listed as an alarm value. Alarm values are of type BACnetOptionalCharacterString, and may also be NULL or an\nempty character string.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.16.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfCharacterString.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfCharacterString.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfCharacterString.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfLifeSafety","doc":"Represents the BACnet event algorithm `ChangeOfLifeSafety` notification parameters.\n\nThe ChangeOfLifeSafety event algorithm detects whether the monitored value equals a value that is listed as an\nalarm value or life safety alarm value. Event state transitions are also indicated if the value of the mode parameter changed\nsince the last transition indicated. In this case, any time delays are overridden and the transition is indicated immediately.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.8.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfLifeSafety.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfLifeSafety.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfLifeSafety.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfReliability","doc":"Represents the BACnet event algorithm `ChangeOfReliability` notification parameters.\n\nFor all transitions to, or from, the FAULT state, the corresponding notification notification shall use the Event Type\nChangeOfReliability.\n\nFor more specific information about the fault notification event algorithm, consult ASHRAE 135 13.2.5.3.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfReliability.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfReliability.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfReliability.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfState","doc":"Represents the BACnet event algorithm `ChangeOfState` notification parameters.\n\nThe ChangeOfState event algorithm detects whether the monitored value equals a value that is listed as an alarm\nvalue. The monitored value may be of any discrete or enumerated datatype, including Boolean.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.2.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfState.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfState.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfState.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfStatusFlags","doc":"Represents the BACnet event algorithm `ChangeOfStatusFlags` notification parameters.\n\nThe ChangeOfStatusFlags event algorithm detects whether a significant flag of the monitored value of type\nBACnetStatusFlags has the value TRUE.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.11.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfStatusFlags.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfStatusFlags.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfStatusFlags.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ChangeOfValue","doc":"Represents the BACnet event algorithm `ChangeOfValue` notification parameters.\n\nThe ChangeOfValue event algorithm, for monitored values of datatype REAL, detects whether the absolute value of\nthe monitored value changes by an amount equal to or greater than a positive REAL increment.\n\nThe ChangeOfValue event algorithm, for monitored values of datatype BIT STRING, detects whether the monitored\nvalue changes in any of the bits specified by a bitmask.\nFor detection of change, the value of the monitored value when a transition to NORMAL is indicated shall be used in\nevaluation of the conditions until the next transition to NORMAL is indicated. The initialization of the value used in\nevaluation before the first transition to NORMAL is indicated is a local matter.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.3.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfValue.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ChangeOfValue.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ChangeOfValue.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.CommandFailure","doc":"Represents the BACnet event algorithm `CommandFailure` notification parameters.\n\nThe CommandFailure event algorithm detects whether the monitored value and the feedback value disagree for a time\nperiod. It may be used, for example, to verify that a process change has occurred after writing a property.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.4.","ref":"BACnet.Protocol.NotificationParameters.CommandFailure.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.CommandFailure.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.CommandFailure.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.ComplexEventType","doc":"Represents the BACnet event algorithm `ComplexEventType` notification parameters.\n\nThe `ComplexEventType` algorithm is introduced to allow the addition of proprietary event algorithms\nwhose notification parameters are not necessarily network-visible.","ref":"BACnet.Protocol.NotificationParameters.ComplexEventType.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.ComplexEventType.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.ComplexEventType.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.DoubleOutOfRange","doc":"Represents the BACnet event algorithm `DoubleOutOfRange` notification parameters.\n\nThe DoubleOutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high\nlimit and a low limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting notification state, a deadband is applied when the value is in the\nprocess of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.13.","ref":"BACnet.Protocol.NotificationParameters.DoubleOutOfRange.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.DoubleOutOfRange.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.DoubleOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.Extended","doc":"Represents the BACnet event algorithm `Extended` notification parameters.\n\nThe Extended event algorithm detects notification conditions based on a proprietary event algorithm. The proprietary notification\nalgorithm uses parameters and conditions defined by the vendor. The algorithm is identified by a vendor-specific notification type\nthat is in the scope of the vendor's vendor identification code. The algorithm may, at the vendor's discretion, indicate a new\nnotification state, a transition to the same notification state, or no transition to the Event-State-Detection. The indicated new notification states\nmay be NORMAL, and any OffNormal notification state. FAULT notification state may not be indicated by this algorithm. For the\npurpose of proprietary evaluation of unreliability conditions that may result in FAULT notification state, a FAULT_EXTENDED\nfault algorithm shall be used.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.10.","ref":"BACnet.Protocol.NotificationParameters.Extended.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.Extended.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.Extended.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.FloatingLimit","doc":"Represents the BACnet event algorithm `FloatingLimit` notification parameters.\n\nThe FloatingLimit event algorithm detects whether the monitored value exceeds a range defined by a setpoint, a high\ndifference limit, a low difference limit and a deadband.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.5.","ref":"BACnet.Protocol.NotificationParameters.FloatingLimit.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.FloatingLimit.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.FloatingLimit.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.OutOfRange","doc":"Represents the BACnet event algorithm `OutOfRange` notification parameters.\n\nThe OutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high limit and a\nlow limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no higher limit or no lower limit.\nIn order to reduce jitter of the resulting notification state, a deadband is applied when the value is in the process of returning to the\nnormal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.6.","ref":"BACnet.Protocol.NotificationParameters.OutOfRange.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.OutOfRange.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.OutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.SignedOutOfRange","doc":"Represents the BACnet event algorithm `SignedOutOfRange` notification parameters.\n\nThe SignedOutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high\nlimit and a low limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting notification state, a deadband is applied when the value is in the\nprocess of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.14.","ref":"BACnet.Protocol.NotificationParameters.SignedOutOfRange.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.SignedOutOfRange.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.SignedOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.UnsignedOutOfRange","doc":"Represents the BACnet event algorithm `UnsignedOutOfRange` notification parameters.\n\nThe UnsignedOutOfRange event algorithm detects whether the monitored value exceeds a range defined by a high\nlimit and a low limit. Each of these limits may be enabled or disabled. If disabled, the normal range has no lower limit or no\nhigher limit respectively. In order to reduce jitter of the resulting notification state, a deadband is applied when the value is in the\nprocess of returning to the normal range.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.15.","ref":"BACnet.Protocol.NotificationParameters.UnsignedOutOfRange.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.UnsignedOutOfRange.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.UnsignedOutOfRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.NotificationParameters.UnsignedRange","doc":"Represents the BACnet event algorithm `UnsignedRange` notification parameters.\n\nThe UnsignedRange event algorithm detects whether the monitored value exceeds a range defined by a high limit and\na low limit.\n\nFor more specific information about the event algorithm, consult ASHRAE 135 13.3.9.","ref":"BACnet.Protocol.NotificationParameters.UnsignedRange.html"},{"type":"type","title":"BACnet.Protocol.NotificationParameters.UnsignedRange.t/0","doc":"Representative type for the notification parameter.","ref":"BACnet.Protocol.NotificationParameters.UnsignedRange.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BroadcastDistributionTableEntry","doc":"","ref":"BACnet.Protocol.BroadcastDistributionTableEntry.html"},{"type":"function","title":"BACnet.Protocol.BroadcastDistributionTableEntry.decode/1","doc":"Decodes a Broadcast Distribution Table Entry from binary data.","ref":"BACnet.Protocol.BroadcastDistributionTableEntry.html#decode/1"},{"type":"function","title":"BACnet.Protocol.BroadcastDistributionTableEntry.encode/1","doc":"Encodes the Broadcast Distribution Table Entry to binary data.","ref":"BACnet.Protocol.BroadcastDistributionTableEntry.html#encode/1"},{"type":"type","title":"BACnet.Protocol.BroadcastDistributionTableEntry.t/0","doc":"","ref":"BACnet.Protocol.BroadcastDistributionTableEntry.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BvlcForwardedNPDU","doc":"","ref":"BACnet.Protocol.BvlcForwardedNPDU.html"},{"type":"function","title":"BACnet.Protocol.BvlcForwardedNPDU.decode/1","doc":"Decodes a BVLC Forwarded NPDU from binary data.","ref":"BACnet.Protocol.BvlcForwardedNPDU.html#decode/1"},{"type":"function","title":"BACnet.Protocol.BvlcForwardedNPDU.encode/1","doc":"Encodes a BVLC Forwarded NPDU to binary data.","ref":"BACnet.Protocol.BvlcForwardedNPDU.html#encode/1"},{"type":"type","title":"BACnet.Protocol.BvlcForwardedNPDU.t/0","doc":"","ref":"BACnet.Protocol.BvlcForwardedNPDU.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BvlcFunction","doc":"","ref":"BACnet.Protocol.BvlcFunction.html"},{"type":"function","title":"BACnet.Protocol.BvlcFunction.decode/2","doc":"Decodes BACnet Virtual Link Control Functions into a struct.\n\nSupported are the following BVLC functions:\n- Delete-Foreign-Device-Table-Entry\n- Read-Broadcast-Distribution-Table\n- Read-Broadcast-Distribution-Table-Ack\n- Read-Foreign-Device-Table\n- Read-Foreign-Device-Table-Ack\n- Register-Foreign-Device\n- Write-Broadcast-Distribution-Table","ref":"BACnet.Protocol.BvlcFunction.html#decode/2"},{"type":"function","title":"BACnet.Protocol.BvlcFunction.encode/1","doc":"Encodes BACnet Virtual Link Control Functions into binary data.\n\nSupported are the following BVLC functions:\n- Delete-Foreign-Device-Table-Entry\n- Read-Broadcast-Distribution-Table\n- Read-Broadcast-Distribution-Table-Ack\n- Read-Foreign-Device-Table\n- Read-Foreign-Device-Table-Ack\n- Register-Foreign-Device\n- Write-Broadcast-Distribution-Table","ref":"BACnet.Protocol.BvlcFunction.html#encode/1"},{"type":"type","title":"BACnet.Protocol.BvlcFunction.t/0","doc":"","ref":"BACnet.Protocol.BvlcFunction.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.BvlcResult","doc":"","ref":"BACnet.Protocol.BvlcResult.html"},{"type":"type","title":"BACnet.Protocol.BvlcResult.t/0","doc":"","ref":"BACnet.Protocol.BvlcResult.html#t:t/0"},{"type":"module","title":"BACnet.Protocol.ForeignDeviceTableEntry","doc":"","ref":"BACnet.Protocol.ForeignDeviceTableEntry.html"},{"type":"function","title":"BACnet.Protocol.ForeignDeviceTableEntry.decode/1","doc":"Decodes a Foreign Device Table Entry from binary data.","ref":"BACnet.Protocol.ForeignDeviceTableEntry.html#decode/1"},{"type":"function","title":"BACnet.Protocol.ForeignDeviceTableEntry.encode/1","doc":"Encodes the Foreign Device Table Entry to binary data.\n\nIf both `time_to_live` and `remaining_time` are nil,\nthey are not included in the binary\n(useful for `Delete-Foreign-Device-Table-Entry`)","ref":"BACnet.Protocol.ForeignDeviceTableEntry.html#encode/1"},{"type":"type","title":"BACnet.Protocol.ForeignDeviceTableEntry.t/0","doc":"","ref":"BACnet.Protocol.ForeignDeviceTableEntry.html#t:t/0"},{"type":"module","title":"BACnet.Stack.BBMD","doc":"The BBMD module is responsible for acting as a BACnet/IPv4 Broadcast Management Device (BBMD).\n\nIt will subscribe for BACnet/IP Virtual Link Layer messages from the `BACnet.Stack.Client`\nand act accordingly on BBMD-specific BVLC messages.\nIt will handle both Broadcast Distribution according to the Broadcast Distribution Table (BDT)\non local broadcast and Foreign Device Registration, including distributing broadcasts from those.\n\nIt allows to read the BDT and registered Foreign Devices through BVLC messages and\nthe module functions. New Foreign Device Registrations may be \"paused\" and \"resumed\" at any time.\nPausing Foreign Device Registrations will mean that new Register messages will be rejected.\n\nBBMDs allow a Foreign Device (a device not residing on the same subnet) to send broadcasts\nto the network the BBMD is connected to. More specifically, the Foreign Device will tell the BBMD\nto distribute a specific APDU as broadcast and the BBMD will forward that APDU as broadcast\non the network. BACnet devices on that network will then respond with `I-Am` APDUs directly\nto that device. As such, proper network routing is required for this to work.\n\nFor each network (client/transport) one BBMD process is required,\nif Foreign Devices should be served (enables to discover local BACnet devices).\n**Only one BBMD is allowed on a BACnet network.**","ref":"BACnet.Stack.BBMD.html"},{"type":"function","title":"BACnet.Stack.BBMD.add_bdt_entry/2","doc":"Add an entry to the Broadcast Distribution Table.","ref":"BACnet.Stack.BBMD.html#add_bdt_entry/2"},{"type":"function","title":"BACnet.Stack.BBMD.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"BACnet.Stack.BBMD.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.BBMD.get_broadcast_distribution_table/1","doc":"Get the Foreign Device Table.","ref":"BACnet.Stack.BBMD.html#get_broadcast_distribution_table/1"},{"type":"function","title":"BACnet.Stack.BBMD.get_foreign_device_table/1","doc":"Get the Foreign Device Table.","ref":"BACnet.Stack.BBMD.html#get_foreign_device_table/1"},{"type":"function","title":"BACnet.Stack.BBMD.pause_fd_registration/1","doc":"Pause Foreign Device Registration process.\n\nAll new Foreign Device Registration requests will be rejected.\nLeading to \"draining\" of the BBMD through expiration of registrations,\nas long as expiration time (TTL) are not exorbitantly large.\n\nSee also `resume_fd_registration/1` for resuming.","ref":"BACnet.Stack.BBMD.html#pause_fd_registration/1"},{"type":"function","title":"BACnet.Stack.BBMD.remove_bdt_entry/2","doc":"Removes an entry from the Broadcast Distribution Table.","ref":"BACnet.Stack.BBMD.html#remove_bdt_entry/2"},{"type":"function","title":"BACnet.Stack.BBMD.remove_foreign_device/2","doc":"Removes a Foreign Device from the Foreign Device table.\n\nThis may be used to remove known dead devices with long expiration time\nmanually without having to wait for the entries to expire.","ref":"BACnet.Stack.BBMD.html#remove_foreign_device/2"},{"type":"function","title":"BACnet.Stack.BBMD.resume_fd_registration/1","doc":"Resumes Foreign Device Registration process.\n\nAll new Foreign Device Registration requests will be processed as normal.\nThis function reverses `pause_fd_registration/1`.","ref":"BACnet.Stack.BBMD.html#resume_fd_registration/1"},{"type":"function","title":"BACnet.Stack.BBMD.start_link/1","doc":"Starts and links the BACnet Broadcast Management Device.\n\nThe following options are available, in addition to `t:GenServer.options/0`:\n  - `bdt: [BroadcastDistributionTableEntry.t()]` - Optional. The Broadcast Distribution Table to distribute broadcasts to peers.\n  - `client: client()` - Required. The client & transport information.\n  - `paused: boolean()` - Optional. Start in paused state. See also `pause_fd_registration/1` and `resume_fd_registration/1`.","ref":"BACnet.Stack.BBMD.html#start_link/1"},{"type":"type","title":"BACnet.Stack.BBMD.client/0","doc":"Represents a `BACnet.Stack.Client` process. It will be used to retrieve the\ntransport module, transport and portal through the `BACnet.Stack.Client` API.","ref":"BACnet.Stack.BBMD.html#t:client/0"},{"type":"type","title":"BACnet.Stack.BBMD.server/0","doc":"Represents a server process of the BBMD module.","ref":"BACnet.Stack.BBMD.html#t:server/0"},{"type":"type","title":"BACnet.Stack.BBMD.start_option/0","doc":"Valid start options. For a description of each, see `start_link/1`.","ref":"BACnet.Stack.BBMD.html#t:start_option/0"},{"type":"type","title":"BACnet.Stack.BBMD.start_options/0","doc":"List of start options.","ref":"BACnet.Stack.BBMD.html#t:start_options/0"},{"type":"module","title":"BACnet.Stack.Client","doc":"The BACnet client is responsible for connecting the application to the BACnet transport protocol\nand vice versa - it interfaces with the BACnet transport protocol, using the transport behaviour.\nThe client will take requests and send them to the BACnet transport protocol and ultimately listen for\nframes from the BACnet transport protocol.\n\nThe application will receive process messages on the specified `notification_receiver`. If there's no\nnotification receiver and a confirmed service request is received, the client will automatically send\na Reject APDU with reason `:other` to the remote BACnet device,\nthe application won't be informed in any way.\n\nBACnet BVLL and BACnet NPDU are directly forwarded to the application, without any processing.\n\nFor  BACnet BVLL, the following message is sent:\n```elixir\n{:bacnet_transport, protocol_id, source_address, {:bvlc, bvlc}, portal}\n```\nThis is the same as `t:BACnet.Stack.TransportBehaviour.transport_msg/0`.\n\nFor BACnet NSPDU, the following message is sent:\n```elixir\n{:bacnet_transport, protocol_id, source_address, {:network, bvlc, npci, nsdu}, portal}\n```\nThis is the same as `t:BACnet.Stack.TransportBehaviour.transport_msg/0`.\n\nFor BACnet APDU, the following message is sent:\n```elixir\n{:bacnet_client, reference() | nil, apdu, {source_address, bvlc, npci}, pid()}\n```\nThe reference is only present on confirmed service requests and is used for `reply/4`.\nAPDU is `t:BACnet.Protocol.apdu/0`. The PID is of the `Client` process.\nFor the rest, see `t:BACnet.Stack.TransportBehaviour.transport_msg/0`.\n\nBACnet APDUs are decoded, checked against the internal cache and forwarded to the application.\nThe client has an internal cache for requests for the application and replies from the application\nto the transport protocol in order to deduplicate request (i.e. when the application takes for the\nremote BACnet device far too long and re-sends the APDU).\nIn case of duplicated request, the request will not be forwarded to the application,\ninstead it will be silently dropped and the application will possibly reply in a timely fashion,\nor the APDU timeout will occur and the Client will reply instead - this situation may arise when\nthe response does not arrive at the remote BACnet device within\nthe remote BACnet device's configured APDU timeout window.\nIndividual APDU timeouts on a per-source basis can be applied using `set_apdu_timeouts/2`.\n\nThe client will also keep track of sent APDUs for confirmed service requests and re-send them\nautomatically, if no response arrives in the APDU timeout timeframe. If the maximum APDU retries\nis reached, the request will be deleted and the application will get an APDU timeout response.\n\nIf the application takes too long to respond to a remote BACnet request, the client will automatically\nsend an Abort APDU and respond to a `reply` request from the application with an app timeout response.\n\nIf the application replies to a routed request (Forwarded NPDU), the client will automatically\nset the correct destination address in `reply/4`.\n\nThe BACnet client will not automatically respond to Who-Is, Who-Has, Time-Synchronization, etc. queries,\nas this is outside of the responsibility of this low level BACnet client implementation.","ref":"BACnet.Stack.Client.html"},{"type":"function","title":"BACnet.Stack.Client.add_apdu_timeout/4","doc":"Add a source to the per-source APDU timeouts map. This is only used for receiving.\n\nEach source is identified by source address and device ID (device ID\nis only known if the source transmit it in the BACnet NPCI).","ref":"BACnet.Stack.Client.html#add_apdu_timeout/4"},{"type":"function","title":"BACnet.Stack.Client.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"BACnet.Stack.Client.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.Client.get_apdu_timeouts/1","doc":"Get the per-source APDU timeouts map. This is only used for receiving.\n\nEach source is identified by source address and device ID (device ID\nis only known if the source transmit it in the BACnet NPCI).","ref":"BACnet.Stack.Client.html#get_apdu_timeouts/1"},{"type":"function","title":"BACnet.Stack.Client.get_transport/1","doc":"Get the transport used in the client.","ref":"BACnet.Stack.Client.html#get_transport/1"},{"type":"function","title":"BACnet.Stack.Client.remove_apdu_timeout/3","doc":"Remove a source from the per-source APDU timeouts map. This is only used for receiving.\n\nEach source is identified by source address and device ID (device ID\nis only known if the source transmit it in the BACnet NPCI).","ref":"BACnet.Stack.Client.html#remove_apdu_timeout/3"},{"type":"function","title":"BACnet.Stack.Client.reply/4","doc":"Replies to a confirmed service request from a remote BACnet device.\nThe APDU frame may be segmentated by the client, depending on the\nAPDU size and maximum transmittable APDU size.\n\nThe reference identifies the request in the client. The request is hold\nin the client to be able to apply application timeout constraints and\nautomatically respond on application timeout.\nThe remote BACnet device may send the same request again within the\nconfigured APDU timeout and thus will be silently deduplicated (dropped).\nThe reference is given as part of the BACnet client notification process message.\n\nIf an automatic application timeout response has been sent (Abort APDU),\n`{:error, :app_timeout}` will be returned when trying to reply to the\nrequest.\n\nSee `send/4` for more information about `opts`.\nBoth `:max_segments` and `:segmentation_supported` of `opts` are automatically\nderived from the confirmed service request, if not explicitely given.","ref":"BACnet.Stack.Client.html#reply/4"},{"type":"function","title":"BACnet.Stack.Client.send/4","doc":"Sends the given APDU frame to the specified destination (remote BACnet device).\nThe APDU frame may be segmentated by the client.\n\nThe client will keep track of sent confirmed service requests and automatically\nre-send the APDUs, if the APDU times out, without a response from the remote\nBACnet server. If the maximum APDU retry count gets reached,\n`{:error, :apdu_timeout}` will be returned.\n\nThis function returns, for confirmed service requests, after receiving the\nresponse from the remote BACnet server, for everything else almost immediately.\n\nAs such, this function will block for maximum 60000ms, before\nthe backpressure mechanism will exit the caller.\n\nDestination depends on the transport module and is validated against the\ntransport module.\n\nBACnet Abort/Error/Reject are also returned in `:ok` tuples, not only\nacknowledgements and requests.\n\nWhen sending and the APDU is too large and thus is needed to be segmented,\nthe client will check accordinging to the given options,\nwhether segmentation can occur and how many segments are supported.\nIf the remote device does not support segmentation or a buffer overflow\nwould occur due to too many segments, this client will send an Abort APDU\nto the remote device and return an error to the caller. The same will happen\nfor too long APDUs that can not be segmented.\n\nSee the `c:BACnet.Stack.TransportBehaviour.send/4` documentation for what `opts` can be.\nIn addition the following are available:\n  - `max_apdu_length: pos_integer()` - Optional. The maximum APDU length\n    the remote BACnet device supports (defaults to the transport max APDU length).\n  - `max_segments: pos_integer()` - Optional. Maximum amount of segments the\n    remote BACnet device can accept (defaults to 2).\n  - `segmentation_supported: Constants.segmentation()` - Optional. Which kind\n    of segmentation the remote BACnet device supports (defaults to none).","ref":"BACnet.Stack.Client.html#send/4"},{"type":"function","title":"BACnet.Stack.Client.set_apdu_timeouts/2","doc":"Set the per-source APDU timeouts map. This is only used for receiving.\n\nEach source is identified by source address and device ID (device ID\nis only known if the source transmit it in the BACnet NPCI).","ref":"BACnet.Stack.Client.html#set_apdu_timeouts/2"},{"type":"function","title":"BACnet.Stack.Client.start_link/1","doc":"Starts and links the BACnet Client.\n\nThe following options are available, in addition to `t:GenServer.options/0`:\n  - `apdu_retries: pos_integer()` - Optional. The amount of APDU sending retries (defaults to 3).\n    Only applied to confirmed service requests.\n  - `apdu_timeout: pos_integer()` - Optional. The APDU timeout to be waiting for a response, in ms (defaults to 3000ms).\n    Only applied to confirmed service requests.\n  - `disable_app_timeout: boolean()` - Optional. Disables the application timeout mechanism.\n  - `notification_receiver: Process.dest() | [Process.dest()]` - Optional. The destination to send messages to.\n  - `npci_source: NpciTarget.t()` - Optional. The NPCI target to use as source for outgoing APDUs.\n  - `segmentator: Segmentator.server()` - Required. The segmentator server to use.\n  - `segments_store: SegmentsStore.server()` - Required. The segments store server to use.\n  - `segmented_rcv_window_overwrite: boolean()` - Optional. Enable to overwrite the window size to 1 for incoming\n    segmented APDUs when it is bound to be routed (i.e. subject to BACnet/IP UDP packet re-ordering).\n    If you're having difficulty receiving segmented APDUs and the packets get routed on BACnet/IP,\n    you should consider enabling this and see if it helps.\n  - `transport: module() | {module(), TransportBehaviour.transport()}` - Required. The transport to use.\n    `module` is equivalent to `{module, module}` (the module name is registered process name).\n    The given transport must implement the `BACnet.Stack.TransportBehaviour` behaviour.","ref":"BACnet.Stack.Client.html#start_link/1"},{"type":"function","title":"BACnet.Stack.Client.subscribe/2","doc":"Puts the subscriber in the `notification_receiver` list.\nThe list contains only unique elements, so this function call is idempotent.\n\nAfter this function returns, the subscriber will start to receive\nprocess messages as lined out by the module documentation.\n\nIf `subscriber` is a PID, it will be monitored and automatically removed.\nThis means for short lived processes, using the PID is recommended\nas the PID is automatically removed when the process dies.","ref":"BACnet.Stack.Client.html#subscribe/2"},{"type":"function","title":"BACnet.Stack.Client.unsubscribe/2","doc":"Removes the subscriber from the `notification_receiver` list.\n\nAfter this function returns, the subscriber will stop receiving\nprocess messages as lined out by the module documentation.","ref":"BACnet.Stack.Client.html#unsubscribe/2"},{"type":"type","title":"BACnet.Stack.Client.apdu_timeouts/0","doc":"Per-source APDU timeouts.\n\nDevice ID is only known, if the source transmits it with the APDU,\nas such, most of the time it can be nil.","ref":"BACnet.Stack.Client.html#t:apdu_timeouts/0"},{"type":"type","title":"BACnet.Stack.Client.server/0","doc":"Represents a server process of the Client module.","ref":"BACnet.Stack.Client.html#t:server/0"},{"type":"type","title":"BACnet.Stack.Client.start_option/0","doc":"Valid start options. For a description of each, see `start_link/1`.","ref":"BACnet.Stack.Client.html#t:start_option/0"},{"type":"type","title":"BACnet.Stack.Client.start_options/0","doc":"List of start options.","ref":"BACnet.Stack.Client.html#t:start_options/0"},{"type":"module","title":"BACnet.Stack.ClientHelper","doc":"BACnet stack client helper functions for executing commands/queries.","ref":"BACnet.Stack.ClientHelper.html"},{"type":"function","title":"BACnet.Stack.ClientHelper.i_am/5","doc":"Sends an I-Am service request to the destination, or optionally using\n`:broadcast` (or the real broadcast address) as local broadcast.\n\nSee also `BACnet.Protocol.Services.IAm`.\n\nThe `Client.send/4` options are available.","ref":"BACnet.Stack.ClientHelper.html#i_am/5"},{"type":"function","title":"BACnet.Stack.ClientHelper.read_object/4","doc":"Read a BACnet object from a remote BACnet device and transform it into an object.\n\nThe required properties are always as a bare minimum read, only more properties can be read, never less.\n\nThe value is casted through the `BACnet.Protocol.ObjectsUtility` module based on the object modules.\nAs such object types or properties that are not supported, will fail.\n\nIf you want to read a device object and don't know the proper device instance number,\nyou can use `4_194_303` as instance number. By the BACnet specification that instance number will be\ntreated by the remote BACnet device as if the instance number was locally correctly matched.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.ReadPropertyMultiple.to_apdu/2`.\n- All options from `BACnet.Protocol.ObjectsUtility.cast_read_properties_ack/3`.\n- All options from `BACnet.Protocol.ObjectsUtility.cast_properties_to_object/3`.\n- `properties: [:all | :required | Constants.property_identifier()]` - Optional. Select the properties to read.\n- `read_level: :all | :required` - Optional. Select how many properties should be read (defaults to `:all`).\n\n`properties` and `read_level` are mutually excluse. If both are given, `properties` takes precedence.","ref":"BACnet.Stack.ClientHelper.html#read_object/4"},{"type":"function","title":"BACnet.Stack.ClientHelper.read_property/6","doc":"Read a single property from a remote BACnet object and transform the value.\n\nThe value is casted through the `BACnet.Protocol.ObjectsUtility` module based on the object modules.\nAs such object types or properties that are not supported, will fail, unless you specify\nthe `raw` options, which will give you the `Encoding` struct (or list of) to handle yourself.\nArray indexes of 0 will return the array size as `{:ok, non_neg_integer()}`, if successfully read.\n\nIf you want to read a device object's property without needing to know before hand which instance number,\nyou can use `4_194_303` as instance number. By the BACnet specification that instance number will be\ntreated by the remote BACnet device as if the instance number was locally correctly matched.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.ReadProperty.to_apdu/2`.\n- `raw: boolean()` - Optional. Returns the `t:Encoding.t/0` (or list of) instead of trying to transform the value.","ref":"BACnet.Stack.ClientHelper.html#read_property/6"},{"type":"function","title":"BACnet.Stack.ClientHelper.read_property_multiple/5","doc":"Read multiple properties from a remote BACnet object at once and transform each value.\n\nThe values are casted through the `BACnet.Protocol.ObjectsUtility` module based on the object modules.\nAs such object types or properties that are not supported, will fail, unless you specify\nthe `raw` options, which will give you a list of `ReadAccessResult`s to handle yourself.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.ReadPropertyMultiple.to_apdu/2`.\n- `raw: boolean()` - Optional. Returns the results instead of trying to transform each value.","ref":"BACnet.Stack.ClientHelper.html#read_property_multiple/5"},{"type":"function","title":"BACnet.Stack.ClientHelper.reinitialize_device/5","doc":"Send a Reinitialize-Device service request to a remote BACnet device.\n\nPassword must be an ASCII string between 1 to 20 characters, inclusive, or nil.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.ReinitializeDevice.to_apdu/2`.","ref":"BACnet.Stack.ClientHelper.html#reinitialize_device/5"},{"type":"function","title":"BACnet.Stack.ClientHelper.scan_device/4","doc":"Scan the given device for available objects and read all objects. A map of objects will be returned on success.\n\nIf you don't know the device object identifier of the BACnet device in question, but you know the\nBACnet network address (i.e. the IP address and port for BACnet/IP), you can use the Who-Is service\nwith the destination address being the device's network address, to discover the object identifier.\nYou can also use `read_property/6` to read the `:object_identifier` property.\n\nThe scan process is parallelized through `Task.async_stream/3` and thus the `invoke_id` is\nautomatically being set. You need to be aware to not invoke/have parallel other requests to\nthe same destination, as the `invoke_id` could be duplicated.\nThis function is only recommended for development purposes. Instead the functionality should be\nimplemented manually to ensure `invoke_id` safety - an alternative would be to use a `Client` that\nensures the safety.\n\nThe values are casted through the `BACnet.Protocol.ObjectsUtility` module based on the object modules.\nAs such object types or properties that are not supported, will fail the operation.\n\nThe following options are available:\n- All options from `read_object/4`.\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.ReadPropertyMultiple.to_apdu/2`, except `invoke_id`.\n- All options from `BACnet.Protocol.ObjectsUtility.cast_read_properties_ack/3`.\n- All options from `BACnet.Protocol.ObjectsUtility.cast_properties_to_object/3`.\n- `exit_on_error: boolean()` - Optional. Whether to exit the process on first error.\n- `ignore_errors: boolean()` - Optional. Whether to ignore errors and continue with the rest.\n- `ignore_unsupported_object_types: boolean()` - Optional. Whether to ignore unknown/unsupported object types.\n- `task_max_concurrency: pos_integer()` - Optional. The maximum task concurrency to use (limited to 255).\n- `task_supervisor: Supervisor.supervisor()` - Optional. The task supervisor to use for spawning tasks.\n- `task_timeout: timeout()` - Optional. The timeout to use for the task async stream (defaults to `30_000`).\n\n`exit_on_error` and `ignore_errors` are mutually excluse. `ignore_errors` takes precedence, if set to `true`.","ref":"BACnet.Stack.ClientHelper.html#scan_device/4"},{"type":"function","title":"BACnet.Stack.ClientHelper.send_time_synchronization/3","doc":"Send a (UTC) Time Synchronization service APDU to the destination.\n\n`:broadcast` will be resolved to the local broadcast address.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.TimeSynchronziation.to_apdu/2` respectively\n  `BACnet.Protocol.Services.UtcTimeSynchronziation.to_apdu/2`.\n- `datetime: DateTime.t()` - Optional. The timestamp to use for synchronization.\n  It will be automatically shifted to UTC, if necessary.\n  If omitted, `DateTime.now!(\"Etc/UTC\")` will be used with UTC Time Synchronization.\n- `utc: boolean()` - Optional. Whether to use UTC Time Synchronization.","ref":"BACnet.Stack.ClientHelper.html#send_time_synchronization/3"},{"type":"function","title":"BACnet.Stack.ClientHelper.subscribe_cov_property/5","doc":"Subscribes for COV notification for a remote BACnet object property.\n\nWhen using confirmed COV notifications, the remote BACnet device requires\nyou to send confirmations of the reception (`BACnet.Protocol.Services.SimpleACK`) -\nthis is not done automatically.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.SubscribeCovProperty.to_apdu/2`.\n- `confirmed: boolean()` - Optional. Request confirmed COV notifications.\n  By default, COV notifications are requested to be unconfirmed.\n- `cov_increment: float()` - Optional. The COV increment to use for float properties.\n- `lifetime: non_neg_integer() | nil` - Optional. The COV subscription lifetime to use\n  in seconds (defaults to 3600). To unsubscribe, use `nil`.\n- `pid: non_neg_integer()` - Optional. The process identifier to use. By default,\n  this will be calculated from the caller PID (`node bits 0-3 << 28 + pid_number << 13 + pid_serial`).","ref":"BACnet.Stack.ClientHelper.html#subscribe_cov_property/5"},{"type":"function","title":"BACnet.Stack.ClientHelper.who_is/3","doc":"Sends a Who-Is service request to the network (local broadcast).\nThe I-Am responses will be collected and returned.\n\nSee also `BACnet.Protocol.Services.WhoIs`.\n\nBy default, it will collect all responses received until `timeout`.\nBy using `max` opts, one can tell the function how many to receive\nand then stop prematurely. Either `max` or `timeout` will stop\nthe collecting. Timeout must be minimum `100`ms.\n\nThis function will by default spawn a new task and subscribe for\nBACnet notification messages and afterwards unsubscribe.\nThis behaviour can be disabled through `no_subscribe` opts.\n\nThe following options are available, in addition the `Client.send/4` options:\n- `apdu_destination: term()` - Optional. Overrides the APDU destination address.\n- `high_limit: pos_integer()` - Optional. The maximum BACnet device ID for the Who-Is query.\n- `low_limit: pos_integer()` - Optional. The minimum BACnet device ID for the Who-Is query.\n- `max: pos_integer()` - Optional. The maximum amount of IAm responses to collect.\n- `no_subscribe: boolean()` - Optional. Whether to spawn a new task.","ref":"BACnet.Stack.ClientHelper.html#who_is/3"},{"type":"function","title":"BACnet.Stack.ClientHelper.write_property/6","doc":"Write to a single property from a remote BACnet object.\n\nEither the actual value of the property can be given and then the value will\nbe automatically encoded through `BACnet.Protocol.ObjectsUtility`.\nOr an `Encoding` struct (or list of) can be given, which will be used\ndirectly without validation.\n\nThe following options are available:\n- All options from `BACnet.Stack.Client.send/4`.\n- All options from `BACnet.Protocol.Services.WriteProperty.to_apdu/2`.\n- `array_index: non_neg_integer() | nil` - Optional. The property array index to write to.\n- `priority: 1..16 | nil` - Optional. The BACnet priority to write to.","ref":"BACnet.Stack.ClientHelper.html#write_property/6"},{"type":"protocol","title":"BACnet.Stack.EncoderProtocol","doc":"This protocol is used inside the BACnet stack (transport modules) to encode APDU structs into binary BACnet APDUs,\nwhich then are sent through the transport layer.","ref":"BACnet.Stack.EncoderProtocol.html"},{"type":"function","title":"BACnet.Stack.EncoderProtocol.encode/1","doc":"Encodes the struct into a BACnet APDU binary packet.\n\nAny information that is additionally required by the transport layer,\nmust be added by the transport layer.\n\nAny segmentation that needs to be applied, can not and will not be\nrespected by this function.","ref":"BACnet.Stack.EncoderProtocol.html#encode/1"},{"type":"function","title":"BACnet.Stack.EncoderProtocol.encode_segmented/2","doc":"Same as `encode/1`, but respects the APDU maximum size.\n\nIt will output a list of segmented binaries, that can be sent ordered to the transport layer. Rules around segmentation\n(such as Segment ACK) still apply for the transport layer.\n\nConventionally, this function simply takes the encoded body and splits it apart into individual segments\nand adds the header.","ref":"BACnet.Stack.EncoderProtocol.html#encode_segmented/2"},{"type":"function","title":"BACnet.Stack.EncoderProtocol.expects_reply/1","doc":"Whether the struct expects a reply (i.e. Confirmed Service Request).\n\nThis is useful for NPCI calculation.","ref":"BACnet.Stack.EncoderProtocol.html#expects_reply/1"},{"type":"function","title":"BACnet.Stack.EncoderProtocol.is_request/1","doc":"Whether the struct is a request.","ref":"BACnet.Stack.EncoderProtocol.html#is_request/1"},{"type":"function","title":"BACnet.Stack.EncoderProtocol.is_response/1","doc":"Whether the struct is a response.","ref":"BACnet.Stack.EncoderProtocol.html#is_response/1"},{"type":"function","title":"BACnet.Stack.EncoderProtocol.supports_segmentation/1","doc":"Whether the struct can be segmented (supported by the BACnet protocol).","ref":"BACnet.Stack.EncoderProtocol.html#supports_segmentation/1"},{"type":"type","title":"BACnet.Stack.EncoderProtocol.t/0","doc":"All the types that implement this protocol.","ref":"BACnet.Stack.EncoderProtocol.html#t:t/0"},{"type":"module","title":"BACnet.Stack.ForeignDevice","doc":"The Foreign Device module is a server process that takes care of registering the application\n(client/transport) as a Foreign Device in a BACnet/IPv4 Broadcast Management Device (BBMD).\n\nIt will automatically renew the registration in the BBMD, as long as this\nForeign Device process is alive. The default Time-To-Live (TTL) is a\ndevelopment value and should always be overwritten in a production environment\nto lessen network traffic caused by Foreign Device registration.\n\nIt also allows to read the BBMD's Broadcast Distribution Table,\nForeign Device Table and distribute Unconfirmed Service Request APDUs\nthrough it.\n\nIf registration in the BBMD fails, it will automatically retry to\nregister in the BBMD at a later point in time (10 seconds).\nCurrently this value can not be changed and is hardcoded.\n\nFor each BBMD (client/transport) one Foreign Device process is required.\nThis allows to register in many BBMDs as Foreign Device.","ref":"BACnet.Stack.ForeignDevice.html"},{"type":"function","title":"BACnet.Stack.ForeignDevice.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"BACnet.Stack.ForeignDevice.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.ForeignDevice.distribute_broadcast/3","doc":"Distributes the given APDU as broadcast through the BBMD.\nOnly unconfirmed service requests can be sent as broadcast.\n\nIt will spawn a new `Task` to temporarily subscribe for\n`BACnet.Stack.Client` notifications to receive BVLL/BVLC messages.\n\nIt uses `BACnet.Stack.Client` to send the APDU,\nall `opts` will be given to `BACnet.Stack.Client.send/4`,\nin addition, the following are available for this function only:\n- `receive_timeout: non_neg_integer()` - Optional. The timeout to use to await\n  BVLL/BVLC NAK response from the BBMD. Defaults to `1_000`.","ref":"BACnet.Stack.ForeignDevice.html#distribute_broadcast/3"},{"type":"function","title":"BACnet.Stack.ForeignDevice.get_status/1","doc":"Get the status of Foreign Device registration.","ref":"BACnet.Stack.ForeignDevice.html#get_status/1"},{"type":"function","title":"BACnet.Stack.ForeignDevice.read_broadcast_distribution_table/2","doc":"Reads the Broadcast Distribution Table of the BBMD.\n\nThis function will only read the BBMD address from the Foreign Device server,\nall communication to the BBMD is done in the caller process using a `Task`.\nThe new `Task` will temporarily subscribe for `BACnet.Stack.Client` notifications\nto be able to process BVLL/BVLC messages.\n\nThe following options are available:\n- `timeout: non_neg_integer() | :infinity` - Optional.\n  The timeout to use for waiting for the BBMD reply.","ref":"BACnet.Stack.ForeignDevice.html#read_broadcast_distribution_table/2"},{"type":"function","title":"BACnet.Stack.ForeignDevice.read_foreign_device_table/2","doc":"Reads the Foreign Device Table of the BBMD.\n\nThis function will only read the BBMD address from the Foreign Device server,\nall communication to the BBMD is done in the caller process using a `Task`.\nThe new `Task` will temporarily subscribe for `BACnet.Stack.Client` notifications\nto be able to process BVLL/BVLC messages.\n\nThe following options are available:\n- `timeout: non_neg_integer() | :infinity` - Optional.\n  The timeout to use for waiting for the BBMD reply.","ref":"BACnet.Stack.ForeignDevice.html#read_foreign_device_table/2"},{"type":"function","title":"BACnet.Stack.ForeignDevice.renew/1","doc":"Explicitely renews the Foreign Device Registration in the BBMD.\n\nThis function returns `:ok` almost immediately,\nwithout waiting for a response from the BBMD.","ref":"BACnet.Stack.ForeignDevice.html#renew/1"},{"type":"function","title":"BACnet.Stack.ForeignDevice.send_whois/3","doc":"Sends a Who-Is APDU to the BBMD for local broadcast.\n\nIt uses `distribute_broadcast/3` to do the broadcast\nand then collects the incoming `BACnet.Protocol.Services.IAm` messages.\nThis function will always spawn a new `Task`\nto send and collect messages.\n\nIt accepts the same options as `BACnet.Stack.ClientHelper.who_is/3`,\nexcept `apdu_destination` and `no_subscribe`.","ref":"BACnet.Stack.ForeignDevice.html#send_whois/3"},{"type":"function","title":"BACnet.Stack.ForeignDevice.start_link/1","doc":"Starts and links the BACnet Foreign Device.\n\nThe following options are available,\nin addition to `t:GenServer.options/0`:\n  - `bbmd: {:inet.ip4_address(), 1..65_535}` - Required. The BBMD address to register itself as Foreign Device with.\n  - `client: client()` - Required. The client & transport information.\n  - `reply_rfd: boolean()` - Optional. Enables replying to `Register-Foreign-Device` packets from other BACnet clients.\n    Defaults to `true`. If multiple `ForeignDevice` processes are running on the same client/transport,\n    all except for one MUST have this option disabled.\n  - `ttl: pos_integer()` - Optional. The time in seconds until the Foreign Device Registration expires. Defaults to `60`.","ref":"BACnet.Stack.ForeignDevice.html#start_link/1"},{"type":"function","title":"BACnet.Stack.ForeignDevice.stop/1","doc":"Stops and shuts down the Foreign Device.\n\nIf a registration is active, it will try to delete it in the BBMD.","ref":"BACnet.Stack.ForeignDevice.html#stop/1"},{"type":"function","title":"BACnet.Stack.ForeignDevice.write_broadcast_distribution_table/3","doc":"Writes the Broadcast Distribution Table of the BBMD.\n\nThis function will only read the BBMD address from the Foreign Device server,\nall communication to the BBMD is done in the caller process using a `Task`.\nThe new `Task` will temporarily subscribe for `BACnet.Stack.Client` notifications\nto be able to process BVLL/BVLC messages.\n\nThe following options are available:\n- `timeout: non_neg_integer() | :infinity` - Optional.\n  The timeout to use for waiting for the BBMD reply.","ref":"BACnet.Stack.ForeignDevice.html#write_broadcast_distribution_table/3"},{"type":"type","title":"BACnet.Stack.ForeignDevice.client/0","doc":"Represents a `BACnet.Stack.Client` process. It will be used to retrieve the\ntransport module, transport and portal through the `BACnet.Stack.Client` API.","ref":"BACnet.Stack.ForeignDevice.html#t:client/0"},{"type":"type","title":"BACnet.Stack.ForeignDevice.server/0","doc":"Represents a server process of the Foreign Device module.","ref":"BACnet.Stack.ForeignDevice.html#t:server/0"},{"type":"type","title":"BACnet.Stack.ForeignDevice.start_option/0","doc":"Valid start options. For a description of each, see `start_link/1`.","ref":"BACnet.Stack.ForeignDevice.html#t:start_option/0"},{"type":"type","title":"BACnet.Stack.ForeignDevice.start_options/0","doc":"List of start options.","ref":"BACnet.Stack.ForeignDevice.html#t:start_options/0"},{"type":"module","title":"BACnet.Stack.LogBuffer","doc":"Simple log buffer implementation for event and trend logs.\nThe type of the item is not enforced.\n\nThe log buffer can maintain a maximum buffer size by dropping the oldest item\non overflow (ring buffer).","ref":"BACnet.Stack.LogBuffer.html"},{"type":"function","title":"BACnet.Stack.LogBuffer.checkin/2","doc":"Checks in an item.\n\nIf the log buffer has a max size, the max size will be maintained (meaning\nthe oldest item gets dropped on overflow).","ref":"BACnet.Stack.LogBuffer.html#checkin/2"},{"type":"function","title":"BACnet.Stack.LogBuffer.checkout/1","doc":"Checks out the oldest item in the log buffer.\n\nIf the log buffer is empty, `nil` will be returned as item.","ref":"BACnet.Stack.LogBuffer.html#checkout/1"},{"type":"function","title":"BACnet.Stack.LogBuffer.drop/2","doc":"Drops the specified amount of oldest items from the log buffer.","ref":"BACnet.Stack.LogBuffer.html#drop/2"},{"type":"function","title":"BACnet.Stack.LogBuffer.from_list/2","doc":"Creates a new log buffer from the given list, with an optional max size.\nThe head of the list will be the oldest entry in the log buffer.\n\nIf a max size is specified, the list will be truncated to the max size (from the end).\nThe queue length will be calculated in any case. This operation is O(n).","ref":"BACnet.Stack.LogBuffer.html#from_list/2"},{"type":"function","title":"BACnet.Stack.LogBuffer.get_size/1","doc":"Get the size of the log buffer.","ref":"BACnet.Stack.LogBuffer.html#get_size/1"},{"type":"function","title":"BACnet.Stack.LogBuffer.new/1","doc":"Creates a new log buffer with an optional max size.","ref":"BACnet.Stack.LogBuffer.html#new/1"},{"type":"function","title":"BACnet.Stack.LogBuffer.peek/1","doc":"Peeks into the log buffer and returns the oldest item without removing it.","ref":"BACnet.Stack.LogBuffer.html#peek/1"},{"type":"function","title":"BACnet.Stack.LogBuffer.peek_r/1","doc":"Peeks into the log buffer and returns the newest item without removing it.","ref":"BACnet.Stack.LogBuffer.html#peek_r/1"},{"type":"function","title":"BACnet.Stack.LogBuffer.read_range/3","doc":"Reads the specified count, starting from the given position (offset), from the log buffer.","ref":"BACnet.Stack.LogBuffer.html#read_range/3"},{"type":"function","title":"BACnet.Stack.LogBuffer.to_list/1","doc":"Creates a list from the log buffer.","ref":"BACnet.Stack.LogBuffer.html#to_list/1"},{"type":"function","title":"BACnet.Stack.LogBuffer.truncate/1","doc":"Truncates the log buffer to size zero.","ref":"BACnet.Stack.LogBuffer.html#truncate/1"},{"type":"type","title":"BACnet.Stack.LogBuffer.item/0","doc":"Log buffer item type.","ref":"BACnet.Stack.LogBuffer.html#t:item/0"},{"type":"opaque","title":"BACnet.Stack.LogBuffer.items/0","doc":"Implementation detail and thus private API. Changes to it do not count\ntowards Semantic Versioning.","ref":"BACnet.Stack.LogBuffer.html#t:items/0"},{"type":"type","title":"BACnet.Stack.LogBuffer.t/0","doc":"Representative type for the log buffer.","ref":"BACnet.Stack.LogBuffer.html#t:t/0"},{"type":"behaviour","title":"BACnet.Stack.LogBufferBehaviour","doc":"A behaviour for log buffer implementations, most notably for the `BACnet.Stack.TrendLogger` module.\n\nThe behaviour contains the functions from the `BACnet.Stack.LogBuffer` module,\nthe default log buffer implementation used by `BACnet.Stack.TrendLogger`.\n\nUsing a behaviour allows exchanging the implementation with a different one,\nfor example backed by SQLite.","ref":"BACnet.Stack.LogBufferBehaviour.html"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.checkin/2","doc":"Checks in an item.\n\nIf the log buffer has a max size, the max size will be maintained (meaning\nthe oldest item gets dropped on overflow).","ref":"BACnet.Stack.LogBufferBehaviour.html#c:checkin/2"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.checkout/1","doc":"Checks out the oldest item in the log buffer.\n\nIf the log buffer is empty, `nil` will be returned as item.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:checkout/1"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.drop/2","doc":"Drops the specified amount of oldest items from the log buffer.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:drop/2"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.from_list/2","doc":"Creates a new log buffer from the given list, with an optional max size.\nThe head of the list will be the oldest entry in the log buffer.\n\nIf a max size is specified, the list will be truncated to the max size (from the end).\nThe queue length will be calculated in any case. This operation is O(n).","ref":"BACnet.Stack.LogBufferBehaviour.html#c:from_list/2"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.get_size/1","doc":"Get the size of the log buffer.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:get_size/1"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.new/1","doc":"Creates a new log buffer with an optional max size.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:new/1"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.peek/1","doc":"Peeks into the log buffer and returns the oldest item without removing it.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:peek/1"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.peek_r/1","doc":"Peeks into the log buffer and returns the newest item without removing it.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:peek_r/1"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.read_range/3","doc":"Reads the specified count, starting from the given position (offset), from the log buffer.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:read_range/3"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.to_list/1","doc":"Creates a list from the log buffer.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:to_list/1"},{"type":"callback","title":"BACnet.Stack.LogBufferBehaviour.truncate/1","doc":"Truncates the log buffer to size zero.","ref":"BACnet.Stack.LogBufferBehaviour.html#c:truncate/1"},{"type":"type","title":"BACnet.Stack.LogBufferBehaviour.item/0","doc":"The item that gets check in into the log buffer.","ref":"BACnet.Stack.LogBufferBehaviour.html#t:item/0"},{"type":"type","title":"BACnet.Stack.LogBufferBehaviour.mod/0","doc":"A module implementing the Log Buffer Behaviour.","ref":"BACnet.Stack.LogBufferBehaviour.html#t:mod/0"},{"type":"type","title":"BACnet.Stack.LogBufferBehaviour.t/0","doc":"The data structure representing the log buffer.","ref":"BACnet.Stack.LogBufferBehaviour.html#t:t/0"},{"type":"module","title":"BACnet.Stack.Segmentator","doc":"The Segmentator module is responsible for sending segmented requests or responses.\nIncoming segments need to be handled manually or through the `BACnet.Stack.SegmentsStore` module.\n\nThe Segmentator segments the given APDU (`ComplexACK` or `ConfirmedServiceRequest`) into segments\nof maximum APDU size and checks if the remote device supports the amount of segments.\nBoth parameters need to be discovered by the user and given to this module, when creating a segmented sequence.\n\nThe Segmentator will automatically send segments in the window size given by the remote device and\nwait for their acknowledgement. Timeouts and retransmissions are handled automatically.\nResponses and retransmissions to the destination of a segmented request or response are automatically sent.\n\nWhen the remote device is outside of the local network (packets are routed through a router),\nthis module will automatically overwrite the \"Proposed Window Size\" with 1, to ensure segments ordering.\nDue to the nature of the UDP protocol (which BACnet/IP is based on), UDP re-ordering can occur and thus\nsegments may arrive out-of-order.\nRe-ordering through the network may not occurr on other transport mediums. Whether a destination is outside\nof the local network is determined through the `BACnet.Stack.TransportBehaviour` module.\n\nThe Segmentator module is transport layer agnostic due to the nature of using the `TransportBehaviour`.\n\nUsers of this module need to route incoming `Abort`, `Error`, `Reject` and `SegmentACK` APDUs to this module,\nso the Segmentator can function properly. See the `handle_apdu/3` documentation.\n\nThis module is written to not require one instance per destination or transport layer protocol, as such when creating\na new sequence, the transport module, transport, portal, and destination parameters need to be given.\n\nWhen wanting to send a new segmented request or response, first a new sequence must be created. As soon as the sequence\nis created, transmitting the segments, retransmissions and timeouts are handled automatically.","ref":"BACnet.Stack.Segmentator.html"},{"type":"function","title":"BACnet.Stack.Segmentator.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"BACnet.Stack.Segmentator.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.Segmentator.create_sequence/7","doc":"Creates a new Sequence for an APDU.\n\nThis module will automatically send the segments or abort APDUs.\nReceived `Abort` and `SegmentACK` APDUs need to be piped into this module through `handle_apdu/3`.\n\nThe `opts` argument will be passed on to the transport module's send function without modification.","ref":"BACnet.Stack.Segmentator.html#create_sequence/7"},{"type":"function","title":"BACnet.Stack.Segmentator.handle_apdu/3","doc":"Handles incoming `Abort`, `Error`, `Reject` and `SegmentACK` APDUs.\n\nReceived `Abort`, `Error`, `Reject` and `SegmentACK` APDUs need to be piped into this module using this function.\nOnly then this module can automatically function correctly and transmit or retransmit the segments.\n\nUnknown destination-invoke ID mappings are silently ignored. As such the user can simply call this function\nwith all matching APDUs. Although if there is a lot of traffic, the user should consider filtering and only\ncall this function with interesting APDUs (APDUs for segmented requests/responses).","ref":"BACnet.Stack.Segmentator.html#handle_apdu/3"},{"type":"function","title":"BACnet.Stack.Segmentator.start_link/1","doc":"Starts and links the Segmentator.\n\nThe following options need to be given, in addition to `t:GenServer.options/0`:\n  - `apdu_retries: pos_integer()` - Optional. The amount of APDU sending retries (defaults to 3).\n  - `apdu_timeout: pos_integer()` - Optional. The APDU timeout to be waiting for a response, in ms (defaults to 3000ms).","ref":"BACnet.Stack.Segmentator.html#start_link/1"},{"type":"type","title":"BACnet.Stack.Segmentator.server/0","doc":"Represents a server process of the Segmentator module.","ref":"BACnet.Stack.Segmentator.html#t:server/0"},{"type":"type","title":"BACnet.Stack.Segmentator.start_option/0","doc":"Valid start options. For a description of each, see `start_link/1`.","ref":"BACnet.Stack.Segmentator.html#t:start_option/0"},{"type":"type","title":"BACnet.Stack.Segmentator.start_options/0","doc":"List of start options.","ref":"BACnet.Stack.Segmentator.html#t:start_options/0"},{"type":"module","title":"BACnet.Stack.SegmentsStore","doc":"The Segments Store module handles incoming segments of a segmented request or response.\nOutgoing segments need to be handled manually or through the `BACnet.Stack.Segmentator` module.\n\nNew segment sequences are automatically created when receiving a segmented request or response,\nthrough the `segment/6` function. Responses to the source of a segmented request or response are\nautomatically sent.\n\nUsers of this module need to route incoming `Abort`, `Error`, `Reject` and segmented APDUs\n(identified by the `:incomplete` tuple of `BACnet.APDU.decode/1`) to this module,\nso the Segments Store can function properly. See the `cancel/3` and `segment/6` documentation.\n\nThe Segments Store module is transport layer agnostic due to the nature of using\nthe `BACnet.Stack.TransportBehaviour`.\n\nThis module is written to not require one instance per destination or transport layer protocol,\nas such when handling a segment, the transport module, portal, and source address need to be given.\n\nPlease note that in some circumstances, such as BACnet/IP and IP routing, the packets are under subject\nto packet re-ordering. To address this, you may overwrite the window size field for packets outside\nof the local network using `BACnet.IncompleteAPDU.set_window_size/2` before calling `segment/6`.\nThe value should be set to `1`, so for each segment an acknowledge needs to be sent (thus preventing\npacket re-ordering and packets arriving out of order).","ref":"BACnet.Stack.SegmentsStore.html"},{"type":"function","title":"BACnet.Stack.SegmentsStore.cancel/3","doc":"Cancels a segment sequence in the Store.\n\nThis function must be called by the user when one of the following conditions is met:\n  - Abort PDU received with the same invoke ID\n  - Error PDU received with the same invoke ID\n  - Reject PDU received with the same invoke ID\n  - SimpleACK PDU received with the same invoke ID\n\nThis function does nothing if no sequence exists in the Store, thus it is safe to call it,\neven if no segmentation is in progress. Although if there is a lot of traffic, the user\nshould consider filtering and only call this function with interesting\nAPDUs (APDUs for segmented requests/responses).","ref":"BACnet.Stack.SegmentsStore.html#cancel/3"},{"type":"function","title":"BACnet.Stack.SegmentsStore.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"BACnet.Stack.SegmentsStore.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.SegmentsStore.segment/6","doc":"Sends a segment to the Store to be handled. `cancel` specifies whether segmentation is aborted/cancelled.\n\nIf no segment sequence for the source address and invoke ID exist yet, one will be created automatically. Sequences\naborted by the Store are automatically removed from it and the remote BACnet device is notified.\n\nOnce all segments have been received, an ok-tuple is returned with the complete APDU binary data,\nwhich then can be decoded using the `BACnet.Protocol` module.\n\nThis module sends answers directly to the remote BACnet device, as such the transport module and portal needs to be specified.\n\nThe `opts` argument will be passed on to the transport module's send function without modification.","ref":"BACnet.Stack.SegmentsStore.html#segment/6"},{"type":"function","title":"BACnet.Stack.SegmentsStore.start_link/1","doc":"Starts and links the Segments Store.\n\nThe following options are available, in addition to `t:GenServer.options/0`:\n  - `apdu_retries: pos_integer()` - Optional. The amount of APDU sending retries (defaults to 3).\n  - `apdu_timeout: pos_integer()` - Optional. The APDU timeout to be waiting for a response, in ms (defaults to 3000ms).\n  - `max_segments: Constants.max_segments()` - Optional. The maximum amount of segments to allow (defaults to `:more_than_64`).\n    While `:unspecified` is allowed here, it shouldn't be used anywhere, because it makes it for the server unable to determine\n    if the response is transmittable. Since this setting here does not go to the server, `:unspecified` is allowed here.","ref":"BACnet.Stack.SegmentsStore.html#start_link/1"},{"type":"type","title":"BACnet.Stack.SegmentsStore.server/0","doc":"Represents a server process of the Segments Store module.","ref":"BACnet.Stack.SegmentsStore.html#t:server/0"},{"type":"type","title":"BACnet.Stack.SegmentsStore.start_option/0","doc":"Valid start options. For a description of each, see `start_link/1`.","ref":"BACnet.Stack.SegmentsStore.html#t:start_option/0"},{"type":"type","title":"BACnet.Stack.SegmentsStore.start_options/0","doc":"List of start options.","ref":"BACnet.Stack.SegmentsStore.html#t:start_options/0"},{"type":"module","title":"BACnet.Stack.Telemetry","doc":"Contains functions for easier interaction with telemetry.\n\nFor full functionality, `:telemetry` dependency must be installed.\nIf you want to disable emitting telemetry events even if telemetry is installed,\nset the environment `:bacstack` key `:no_telemetry` to true and recompile.\nFor recompiling when bacstack is a dependency, use `mix deps.compile --force`.\n\nAll measurements contain at least `monotonic_time` (native units) and `system_time`.\nThe event metadata will depend on the event, but will at least contain the following keys:\n- `self: GenServer.server()`\n- `transport_module: module()` (only for client messages)\n- `portal: TransportBehaviour.portal()` (only for client messages)\n- `client: Client.server()` (only for BBMD/foreign device messages)","ref":"BACnet.Stack.Telemetry.html"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_add_fd_registration/4","doc":"Executes telemetry for new foreign device registration\nas `[:bacstack, :bbmd, :foreign_device, :add]`.\n\nThe arguments `source_adress` and `registration` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_add_fd_registration/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_del_fd_registration/4","doc":"Executes telemetry for deleting foreign device registration\nas `[:bacstack, :bbmd, :foreign_device, :delete]`.\n\nThis function is only called for BACnet interactions,\nnot for local interactions through the `BBMD` public API.\nHowever this function is called for expiring registrations (source_address = nil).\n\nThe arguments `source_adress` and `registration` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_del_fd_registration/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_distribute_broadcast/6","doc":"Executes telemetry for distributing broadcasts\nas `[:bacstack, :bbmd, :broadcast_distribution, :distribute]`.\n\nThe arguments `source_adress`, `apdu` and `npci` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_distribute_broadcast/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_exception/6","doc":"Executes telemetry for an error or exception as `[:bacstack, :bbmd, :exception]`.\n\nThe arguments `kind`, `reason` and `stacktrace` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_exception/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_read_bdt/4","doc":"Executes telemetry for reading broadcast distribution table\nas `[:bacstack, :bbmd, :broadcast_distribution, :read_table]`.\n\nThis function is only called for BACnet interactions,\nnot for local interactions through the `BBMD` public API.\n\nThe arguments `source_adress` and `bdt` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_read_bdt/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_read_fd_table/4","doc":"Executes telemetry for reading foreign device table\nas `[:bacstack, :bbmd, :foreign_device, :read_table]`.\n\nThis function is only called for BACnet interactions,\nnot for local interactions through the `BBMD` public API.\n\nThe arguments `source_adress` and `registrations` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_read_fd_table/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_bbmd_write_bdt/4","doc":"Executes telemetry for writing broadcast distribution table\nas `[:bacstack, :bbmd, :broadcast_distribution, :write_table]`.\n\nThis function is only called for BACnet interactions,\nnot for local interactions through the `BBMD` public API.\n\nThe arguments `source_adress` and `bdt` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_bbmd_write_bdt/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_exception/6","doc":"Executes telemetry for an error or exception as `[:bacstack, :client, :exception]`.\n\nThe arguments `kind`, `reason` and `stacktrace` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_exception/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu/6","doc":"Executes telemetry for incoming APDU (decoded) as `[:bacstack, :client, :incoming_apdu]`.\n\nThe arguments `source_address`, `bvlc`, `npci` and `apdu` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_decode_error/7","doc":"Executes telemetry for incoming APDU decode error as `[:bacstack, :client, :incoming_apdu, :error]`.\n\nThe arguments `source_address`, `bvlc`, `npci`, `raw_apdu` and `error` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_decode_error/7"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_duplicated/6","doc":"Executes telemetry for incoming APDU (duplicated)\nas`[:bacstack, :client, :incoming_apdu, :duplicated]`.\nThe APDU has been detected as being deduplicated and is not passed on to the application.\n\nThe arguments `source_address`, `bvlc`, `npci` and `apdu` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_duplicated/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_handled/6","doc":"Executes telemetry for incoming APDU (handled) as `[:bacstack, :client, :incoming_apdu, :start]`.\nHandled refers to the APDU not being deduplicated and passed on to the application,\nif a notification receiver is registered.\n\nThe arguments `source_address`, `bvlc`, `npci` and `apdu` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_handled/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_rejected/7","doc":"Executes telemetry for incoming APDU rejected as `[:bacstack, :client, :incoming_apdu, :error]`.\n\nRejected means there is no configured notification receiver (listener) and as such can not\nrespond to APDU requests expecting reply.\n\nThe arguments `source_address`, `bvlc`, `npci`, `reject_apdu` and `original_apdu` are part\nof the event metadata. Additionally, key `reason` will be set to `:no_listener`.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_rejected/7"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_reply/5","doc":"Executes telemetry for APDU application response\nas `[:bacstack, :client, :incoming_apdu, :stop]`.\nA `duration` key will be set in measurements using monotonic time native units.\n\nThe arguments `apdu` and `send_opts` are part of the events metadata.\nAdditionally, the following keys are set:\n- `source_address: term()`\n- `ref: reference()`","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_reply/5"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_segmentation_completed/8","doc":"Executes telemetry for incoming APDU segmented completed\nas `[:bacstack, :client, :incoming_apdu, :segmented, :completed]`.\n\nThe arguments `source_address`, `bvlc`, `npci`, `raw_apdu`, `complete_apdu`\nand `incomplete`are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_segmentation_completed/8"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_segmentation_error/9","doc":"Executes telemetry for incoming APDU segmented error\nas `[:bacstack, :client, :incoming_apdu, :segmented, :error]`.\n\nThe arguments `source_address`, `bvlc`, `npci`, `raw_apdu`, `incomplete`, `error` and\n`cancelled` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_segmentation_error/9"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_segmentation_incomplete/7","doc":"Executes telemetry for incoming APDU segmented incomplete\nas `[:bacstack, :client, :incoming_apdu, :segmented, :incomplete]`.\n\nThe arguments `source_address`, `bvlc`, `npci`, `raw_apdu` and `incomplete`\nare part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_segmentation_incomplete/7"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_inc_apdu_timeout/3","doc":"Executes telemetry for APDU application response timeout\nas `[:bacstack, :client, :incoming_apdu, :stop]`.\nA `duration` key will be set in measurements using monotonic time native units.\n\nThe following keys are exposed as part of the event metadata:\n- `source_address: term()`\n- `bvlc: Protocol.bvlc()`\n- `npci: NPCI.t()`\n- `apdu: Protocol.apdu()`\n- `ref: reference()`\n- `error: :reply_timeout`","ref":"BACnet.Stack.Telemetry.html#execute_client_inc_apdu_timeout/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_request_apdu_timer/3","doc":"Executes telemetry for APDU request timeout as `[:bacstack, :client, :request, :stop]`.\nA `duration` key will be set in measurements using monotonic time native units.\n\nThe arguments `destination`, `bvlc`, `npci` and `apdu` are part of the event metadata.\nAdditionally, the following keys are set:\n- `original_apdu: Protocol.apdu()`\n- `retry_count: non_neg_integer()`","ref":"BACnet.Stack.Telemetry.html#execute_client_request_apdu_timer/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_request_start/6","doc":"Executes telemetry for request start as `[:bacstack, :client, :request, :start]`.\nRequests are started by sending APDU with `expect_reply: true`.\nResponses will be emitted for the request through `:stop`.\n\nThe arguments `destination`, `apdu` and `send_opts` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_request_start/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_request_stop/7","doc":"Executes telemetry for request stop as `[:bacstack, :client, :request, :stop]`.\nA `duration` key will be set in measurements using monotonic time native units.\n\nBVLC, NPCI and APDU are the response and belong to the request that got started.\nSee also `execute_client_request_start/6`.\n\nThe arguments `destination`, `bvlc`, `npci` and `apdu` are part of the event metadata.\nAdditionally, the following keys are set:\n- `original_apdu: Protocol.apdu()`\n- `retry_count: non_neg_integer()`","ref":"BACnet.Stack.Telemetry.html#execute_client_request_stop/7"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_send/6","doc":"Executes telemetry for sending APDUs as `[:bacstack, :client, :send]`.\nSegmented will indicate whether segmenting and sending the APDU has been\nhanded off to `BACnet.Stack.Segmentator`.\n\nThe arguments `destination`, `apdu`, `send_opts` and `segmented` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_send/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_send_error/7","doc":"Executes telemetry for send error as `[:bacstack, :client, :send, :error]`.\nSend errors are encountered for APDU too long (no segmentation) or\nrecipient device does not support segmentation.\n\nThe arguments `destination`, `original_apdu`, `send_opts`, `reply_apdu` and\n`reason` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_send_error/7"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_client_transport_message/3","doc":"Executes telemetry for an error or exception as `[:bacstack, :client, :transport, :message]`.\n\nThe argument `transport_msg` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_client_transport_message/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_add_fd_registration/4","doc":"Executes telemetry for adding the foreign device registration in the remote BBMD\nas `[:bacstack, :foreign_device, :foreign_device, :add]`.\n\nThe registration is always about ourself - status may not be registered\nwhen this metric event gets called.\n\nThe arguments `bbmd` and `registration` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_add_fd_registration/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_del_fd_registration/4","doc":"Executes telemetry for deleting the foreign device registration in the remote BBMD\nas `[:bacstack, :foreign_device, :foreign_device, :delete]`.\n\nThe arguments `bbmd` and `registration` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_del_fd_registration/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_distribute_broadcast/5","doc":"Executes telemetry for distributing broadcast through the remote BBMD\nas `[:bacstack, :foreign_device, :broadcast_distribution, :distribute]`.\n\nThe arguments `bbmd`, `apdu` and `send_opts` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_distribute_broadcast/5"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_exception/6","doc":"Executes telemetry for an error or exception as `[:bacstack, :foreign_device, :exception]`.\n\nThe arguments `kind`, `reason` and `stacktrace` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_exception/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_read_bdt/4","doc":"Executes telemetry for reading the broadcast distribution table from the remote BBMD\nas `[:bacstack, :foreign_device, :broadcast_distribution, :read_table]`.\n\nThe arguments `bbmd` and `bdt` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_read_bdt/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_read_fd_table/4","doc":"Executes telemetry for reading the foreign device table from the remote BBMD\nas `[:bacstack, :foreign_device, :foreign_device, :read_table]`.\n\nThe arguments `bbmd` and `registrations` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_read_fd_table/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_foreign_device_write_bdt/4","doc":"Executes telemetry for writing the broadcast distribution table to the remote BBMD\nas `[:bacstack, :foreign_device, :broadcast_distribution, :write_table]`.\n\nThe arguments `bbmd` and `bdt` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_foreign_device_write_bdt/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segmentator_exception/6","doc":"Executes telemetry for an error or exception as `[:bacstack, :segmentator, :exception]`.\n\nThe arguments `kind`, `reason` and `stacktrace` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segmentator_exception/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segmentator_sequence_ack/4","doc":"Executes telemetry for sequence ack as `[:bacstack, :segmentator, :sequence, :ack]`.\nA segment ACK has been sent from the remote BACnet client.\n\nThe arguments `sequence` and `ack` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segmentator_sequence_ack/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segmentator_sequence_error/10","doc":"Executes telemetry for sequence error as `[:bacstack, :segmentator, :sequence, :error]`.\n\nThe arguments `transport_module`, `transport`, `portal`, `destination`, `original_apdu`,\n`send_opts`, `reply_apdu` and `reason` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segmentator_sequence_error/10"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segmentator_sequence_segment/4","doc":"Executes telemetry for sequence segment as `[:bacstack, :segmentator, :sequence, :segment]`.\nAn individual segment has been sent to the remote BACnet client.\n\nThe arguments `sequence` and `segment_number` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segmentator_sequence_segment/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segmentator_sequence_start/3","doc":"Executes telemetry for sequence start as `[:bacstack, :segmentator, :sequence, :start]`.\n\nThe argument `sequence` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segmentator_sequence_start/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segmentator_sequence_stop/4","doc":"Executes telemetry for sequence stop as `[:bacstack, :segmentator, :sequence, :stop]`.\nA `duration` key will be set in measurements using monotonic time native units.\n\nThe arguments `sequence` and `reason` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segmentator_sequence_stop/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segments_store_exception/6","doc":"Executes telemetry for an error or exception as `[:bacstack, :segments_store, :exception]`.\n\nThe arguments `kind`, `reason` and `stacktrace` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segments_store_exception/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segments_store_sequence_ack/4","doc":"Executes telemetry for sequence ack as `[:bacstack, :segments_store, :sequence, :ack]`.\nA segment ACK has been sent to the remote BACnet client.\n\nThe arguments `sequence` and `ack` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segments_store_sequence_ack/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segments_store_sequence_error/9","doc":"Executes telemetry for sequence error as `[:bacstack, :segments_store, :sequence, :error]`.\n\nThe arguments `transport_module`, `portal`, `destination`, `incomplete_apdu`,\n`send_opts`, `reply_apdu` and `reason` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segments_store_sequence_error/9"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segments_store_sequence_segment/4","doc":"Executes telemetry for sequence segment as `[:bacstack, :segments_store, :sequence, :segment]`.\nAn individual segment has been received from the remote BACnet client.\n\nThe arguments `sequence` and `segment_number` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segments_store_sequence_segment/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segments_store_sequence_start/3","doc":"Executes telemetry for sequence start as `[:bacstack, :segments_store, :sequence, :start]`.\n\nThe argument `sequence` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segments_store_sequence_start/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_segments_store_sequence_stop/4","doc":"Executes telemetry for sequence stop as `[:bacstack, :segments_store, :sequence, :stop]`.\nA `duration` key will be set in measurements using monotonic time native units.\n\nThe arguments `sequence` and `reason` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_segments_store_sequence_stop/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_cov_sub/2","doc":"Executes telemetry for subscribing COV\nas `[:bacstack, :trend_logger, :lookup_object, :cov_sub]`.\nThis function is called when subscribing for COV\nin the Trend Logger. Most notably for COV logs.\n\nThe argument `object_ref` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_cov_sub/2"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_cov_unsub/2","doc":"Executes telemetry for unsubscribing COV\nas `[:bacstack, :trend_logger, :lookup_object, :cov_unsub]`.\nThis function is called when unsubscribing for COV\nin the Trend Logger. Most notably for COV logs.\n\nThe argument `object_ref` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_cov_unsub/2"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_exception/6","doc":"Executes telemetry for an error or exception as `[:bacstack, :trend_logger, :exception]`.\n\nThe arguments `kind`, `reason` and `stacktrace` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_exception/6"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_log_notify/4","doc":"Executes telemetry for notifications of the log object\nas `[:bacstack, :trend_logger, :log_object, :notify]`.\nThis function is called when a log object produces\nnotifications in the Trend Logger.\nNotify types can happen concurrently, so be prepared.\n\nThe arguments `log` and `notify_type` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_log_notify/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_log_start/3","doc":"Executes telemetry for log object start as `[:bacstack, :trend_logger, :log_object, :start]`.\nThis function is called when a log object gets added to the Trend Logger.\n\nThe argument `log` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_log_start/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_log_stop/3","doc":"Executes telemetry for log object stop as `[:bacstack, :trend_logger, :log_object, :stop]`.\nThis function is called when a log object gets removed from the Trend Logger.\n\nThe argument `log` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_log_stop/3"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_log_trigger/4","doc":"Executes telemetry for trigger of the log object\nas `[:bacstack, :trend_logger, :log_object, :notify]`.\nThis function is called when a log object gets\ntriggered to log in the Trend Logger.\n\nThe argument `log` and `log_entry` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_log_trigger/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_log_update/4","doc":"Executes telemetry for updates to the log object\nas `[:bacstack, :trend_logger, :log_object, :update]`.\nThis function is called when a log object gets updated in the Trend Logger.\nUpdates may happen explicitely by the user (changing properties,\nenabling/disabling, etc.), or by updates to the buffer\nproduced by the logging algorithm.\n\nThe arguments `log` and `type` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_log_update/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_lookup_object_error/4","doc":"Executes telemetry for error during look up objects\nas `[:bacstack, :trend_logger, :lookup_object, :error]`.\n\nA `duration` measurement is present in monotonic native units.\nFor the calculation of duration, separate monotonic time is used\nand may differ a bit from both monotonic time present in start\nand stop metrics.\n\nThe arguments `object_ref` and `error` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_lookup_object_error/4"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_lookup_object_start/2","doc":"Executes telemetry for looking up objects\nas `[:bacstack, :trend_logger, :lookup_object, :start]`.\nThis function is called when objects are looked up\nin the Trend Logger. Most notably for poll logs.\n\nThe argument `object_ref` is part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_lookup_object_start/2"},{"type":"function","title":"BACnet.Stack.Telemetry.execute_trend_logger_lookup_object_stop/4","doc":"Executes telemetry for stop looking up objects\nas `[:bacstack, :trend_logger, :lookup_object, :stop]`.\n\nA `duration` measurement is present in monotonic native units.\nFor the calculation of duration, separate monotonic time is used\nand may differ a bit from both monotonic time present in start\nand stop metrics.\n\nThe arguments `object_ref` and `result` are part of the event metadata.","ref":"BACnet.Stack.Telemetry.html#execute_trend_logger_lookup_object_stop/4"},{"type":"function","title":"BACnet.Stack.Telemetry.get_telemetry_measurements/1","doc":"Get basic telemetry measurements, such as `monotonic_time` and `system_time`.\nThe given map will be merged into the basic measurements map.","ref":"BACnet.Stack.Telemetry.html#get_telemetry_measurements/1"},{"type":"function","title":"BACnet.Stack.Telemetry.make_stacktrace_from_env/1","doc":"Makes a single stacktrace entry from the environment.\n\nUse case is calling `execute_*_exception` functions here without a real stacktrace.","ref":"BACnet.Stack.Telemetry.html#make_stacktrace_from_env/1"},{"type":"behaviour","title":"BACnet.Stack.TransportBehaviour","doc":"Defines the BACnet transport protocol behaviour.\n\nIt ensures all implemented transport layer can be easily integrated\ninto the Elixir BACnet client, indepedently of the underlying\nphysical transport layer (IP, MS/TP, etc.).","ref":"BACnet.Stack.TransportBehaviour.html"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.bacnet_protocol/0","doc":"Get the BACnet transport protocol this transport implements.","ref":"BACnet.Stack.TransportBehaviour.html#c:bacnet_protocol/0"},{"type":"function","title":"BACnet.Stack.TransportBehaviour.build_bacnet_packet/3","doc":"Builds the BACnet packet common parts. It is used in transports for common tasks.\n\nIt encodes the given APDU (if struct), encodes the NPDU (if not skipping headers)\nand validates common grounds between all transports.\n\nThe NPCI is not present in `opts`, it will be calculated from the payload.\n`NPCI.new/1` is used to create the NPCI with `destination`, `expects_reply`\nand `source` set.\n\nThe following gets validated:\n- `expects_reply` in NPCI is not set if broadcast\n- Valid `destination` option (is a `NpciTarget` struct - `address` is not validated)\n- Valid `source` option (is a `NpciTarget` struct - `address` is not validated)\n\nThe following options of `c:send/4` are used:\n- `destination: NpciTarget.t()`\n- `npci: NPCI.t()`\n- `skip_headers: boolean()`\n- `source: NpciTarget.t()`","ref":"BACnet.Stack.TransportBehaviour.html#build_bacnet_packet/3"},{"type":"function","title":"BACnet.Stack.TransportBehaviour.child_spec/4","doc":"Produces a supervisor child spec based on the BACnet transport `open` callback, as such\nit will take the `callback` and `opts` for `c:open/2`.\n\nSee also `Supervisor.child_spec/2` for the rest of the behaviour.","ref":"BACnet.Stack.TransportBehaviour.html#child_spec/4"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.close/1","doc":"Closes the Transport module.","ref":"BACnet.Stack.TransportBehaviour.html#c:close/1"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.get_broadcast_address/1","doc":"Get the broadcast address.","ref":"BACnet.Stack.TransportBehaviour.html#c:get_broadcast_address/1"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.get_local_address/1","doc":"Get the local address.","ref":"BACnet.Stack.TransportBehaviour.html#c:get_local_address/1"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.get_portal/1","doc":"Get the transport module portal for the given transport PID/port.\nTransport modules may return the input as output, if the same\nPID or port is used for sending.\n\nThis is used to get the portal before having received data from\nthe transport module, so data can be sent prior to reception.","ref":"BACnet.Stack.TransportBehaviour.html#c:get_portal/1"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.is_destination_routed/2","doc":"Checks whether the given destination is an address that needs to be routed.","ref":"BACnet.Stack.TransportBehaviour.html#c:is_destination_routed/2"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.is_valid_destination/1","doc":"Verifies whether the given destination is valid for the transport module.","ref":"BACnet.Stack.TransportBehaviour.html#c:is_valid_destination/1"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.max_apdu_length/0","doc":"Get the maximum APDU length for this transport.","ref":"BACnet.Stack.TransportBehaviour.html#c:max_apdu_length/0"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.max_npdu_length/0","doc":"Get the maximum NPDU length for this transport.\n\nThe NPDU length contains the maximum transmittable size\nof the NPDU, including the APDU, without violating\nthe maximum transmission unit of the underlying transport.\n\nAny necessary transport header (i.e. BVLL, LLC) must have\nbeen taken into account when calculating this number.","ref":"BACnet.Stack.TransportBehaviour.html#c:max_npdu_length/0"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.open/2","doc":"Opens/starts the Transport module. If a process is started, it is linked to the caller process.\n\nThe callback argument can be one of PID (resp. `t:Process.dest/0`), MFA tuple or a three arity function.\nIn case of a PID, the `t:transport_msg/0` structure is sent as message. Otherwise the function or MFA tuple\ngets invoked with the arguments: `source_address :: term(), frame :: transport_cb_frame(), portal :: portal()`.\nThe function or MFA tuple may be run under a standalone task or a supervisored task.\n\nThe source address is any term and depends on the transport protocol. The portal is a term, where\nthe BACnet data is received from and sent to. The portal may be the same as the transport, but must\nnot be assumed it is. Sending data must always be directed to the portal and not to the transport.\nSome transports may use \"grouping data structures\" to avoid going through processes and build\nbottlenecks on busy networks.","ref":"BACnet.Stack.TransportBehaviour.html#c:open/2"},{"type":"callback","title":"BACnet.Stack.TransportBehaviour.send/4","doc":"Sends data to the BACnet network.\n\nSegmentation and respect to APDU length needs to be handled by the caller. The transport module will raise,\nif the maximum APDU/NPDU length is exceeded.\n\nThe data is a struct implementing the Encoder Protocol, or must be already encoded (iodata).\n\nBy default, the BACnet Virtual Link Layer, or similar, and Network Protocol Data Unit are added,\nif either of those are required by the transport.\n\nThe following options are available:\n- `destination: NpciTarget.t()` - Optional. Sets the `destination` (DNET, DADDR, DLEN) in the\n  NPCI header accordingly (defaults to absent). A value of `nil` should be treated as option absent.\n- `npci: NPCI.t() | false` - Optional. The NPCI to use. If omitted, the NPCI will be calculated.\n  If the `npci` option is present, options `destination` and `source` will be ignored.\n  `false` can be used to omit the NPCI completely from the BACnet packet (i.e. for pure BVLL packets).\n- `skip_headers: boolean()` - Optional. Skips adding all headers for the transport protocol (i.e. BVLL, NPCI).\n- `source: NpciTarget.t()` - Optional. Sets the `source` (SNET, SADDR, SLEN) in the\n  NPCI header accordingly (defaults to absent). A value of `nil` should be treated as option absent.","ref":"BACnet.Stack.TransportBehaviour.html#c:send/4"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.portal/0","doc":"Represents a transport module portal.","ref":"BACnet.Stack.TransportBehaviour.html#t:portal/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport/0","doc":"Represents a transport module reference.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport_callback/0","doc":"Transport callback.\n\nCallback may be a Module-Function-Arity tuple, a PID (where the data is sent to as a message)\nor an anonymous function.\nThe MFA has the same arguments as the anonymous function. As such, the arity needs to be 3.\nThe return value is ignored.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport_callback/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport_cb_frame/0","doc":"Transport Callback Frames. The callback may ignore any non-APDU frames, if they do not\nwish to handle them.\n\nThe APDU is uninterpreted binary data and needs to be decoded first, through the `BACnet.Protocol` module.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport_cb_frame/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport_id/0","doc":"BACnet transport identifier, represented by the protocol and the implementing transport module.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport_id/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport_msg/0","doc":"Transport message structure.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport_msg/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport_protocol/0","doc":"BACnet transport protocols.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport_protocol/0"},{"type":"type","title":"BACnet.Stack.TransportBehaviour.transport_send_option/0","doc":"Valid transport send options. For a description of each, see `c:send/4`.","ref":"BACnet.Stack.TransportBehaviour.html#t:transport_send_option/0"},{"type":"module","title":"BACnet.Stack.TrendLogger","doc":"The Trend Logger module is responsible for handling event and trend logging\nand keeping a log buffer.\n\nEvent logging can only occur in one mode: triggered. As per BACnet standard\nthere's no defined mechanism how it gets decided which events go to which\nevent log, the only way to do event logging is by explicitely triggering\nevent logging with `trigger_log/3`.\n\nTrend logging can occur in three different modes as per BACnet standard:\n- `:triggered` - Logging has to be manually triggered through BACnet.\n- `:polled` - Logging is done periodically and for each poll, the object is read.\n- `:cov` - Logging is done through COV reporting.\n\nFor COV reporting, COV subscription will only occur on remote object, when `cov_cb`\nis in the `opts` of `start_link/1` and if `cov_resubscription_interval` on\nthe object is present and not zero.\nCOV subscription does not mean the COV notifications get automatically routed\nto this module (however they can, if the given `cov_cb` callback does the routing).\nThe COV callback must use confirmed COV subscriptions, as per BACnet standard.\n\nFor COV reporting on the local device, the user has to route COV notifications\nto this module manually and invoke the `notify/2` function.\n\nPlease note that clock-aligned logging is currently not supported by this module.\n\nWhenever the buffer reaches its max size, a notification can be sent to the\nspecified notification receiver (an atom (registered name) or PID). Additionally,\nfor Intrinsic Reporting-enabled objects, intrinsic reporting will occur and\nprovide notifications once the algorithm `BUFFER_READY` triggers.\n\nEvents occur as messages: `{:bacnet_trend_logger, nil, object(), metadata}`\n\nThe object received is not updated when updates happen in BACnet or otherwise\nin the application. The only changes are when using `change_log_state/3` or\nwhen logging gets stopped due to `stop_when_full: true` (buffer is full),\nthus the object is otherwise in the same state as when it was added or updated.\n\n`metadata` is a map of:\n- `buffer: {module(), LogBufferBehaviour.t()}`\n- `event: :buffer_full | :intrinsic_reporting`\n- `intrinsic: NotificationParameters.BufferReady.t() | nil`\n\nTo trigger `time_change` log data in the log buffer, these need to be manually\ntriggered by the user. There's no clock time tracking in this module.\nTheoretically this can be implemented by monitoring time offsets using\n`:erlang.monitor(:time_offset, :clock_service)` and process those message.\nUpon processing these messages, one can trigger `time_change` using `trigger_log/3`.","ref":"BACnet.Stack.TrendLogger.html"},{"type":"function","title":"BACnet.Stack.TrendLogger.add_object/2","doc":"Adds an EventLog, TrendLog or TrendLogMultiple object to the trend logger.\n\nFor EventLog objects, the logging must be triggered manually (as the logging is a local matter).","ref":"BACnet.Stack.TrendLogger.html#add_object/2"},{"type":"function","title":"BACnet.Stack.TrendLogger.change_log_state/3","doc":"Change the log state for a single object or globally (all) to `state`.\n\nA log status change record will be logged.","ref":"BACnet.Stack.TrendLogger.html#change_log_state/3"},{"type":"function","title":"BACnet.Stack.TrendLogger.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"BACnet.Stack.TrendLogger.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.TrendLogger.get_buffer/2","doc":"Get the log buffer contents for the given object.","ref":"BACnet.Stack.TrendLogger.html#get_buffer/2"},{"type":"function","title":"BACnet.Stack.TrendLogger.notify/2","doc":"Submits a COV notification to the trend logger.\nAny notification for unknown object(s) will be ignored.\n\nThe logger will handle the notification and trigger a log for\nany trendlogs, where necessary.\n\nFor event logs, only `trigger_log/3` can be used, as there's\nno defined mechanism to decide which events go to which event log.","ref":"BACnet.Stack.TrendLogger.html#notify/2"},{"type":"function","title":"BACnet.Stack.TrendLogger.prune_buffer/2","doc":"Prunes the buffer for the specified object, or all buffers.\n\nA buffer purged record will be logged after pruning.","ref":"BACnet.Stack.TrendLogger.html#prune_buffer/2"},{"type":"function","title":"BACnet.Stack.TrendLogger.remove_object/2","doc":"Removes an EventLog, TrendLog or TrendLogMultiple object from the trend logger.\n\nThis function is idempotent, meaning multiple calls for the same object will be ignored.","ref":"BACnet.Stack.TrendLogger.html#remove_object/2"},{"type":"function","title":"BACnet.Stack.TrendLogger.resubscribe_cov/2","doc":"Triggers a COV re-subscription for the given object or all objects.\n\nThis function call will invoke async trend logger processing,\nthe return value does not indicate completion of operation.","ref":"BACnet.Stack.TrendLogger.html#resubscribe_cov/2"},{"type":"function","title":"BACnet.Stack.TrendLogger.start_link/1","doc":"Starts and links the trend logger.\n\nFollowing options are available, in addition to `t:GenServer.options/0`:\n- `cov_cb: (pid(), DeviceObjectPropertyRef.t(), :sub | :unsub, non_neg_integer(), float() | nil -> :ok | {:error, term()})` - Optional.\n\n  The given function will be used to subscribe, resubscribe and unsubscribe confirmed COV subscriptions for remote objects.\n  If it is missing, no COV subscription will occur and needs to be manually handled by the user.\n\n  The function will receive the trend logger PID, a device object property reference, the operation to subscribe or unsubscribe,\n  the COV subscription lifetime and the requested client COV increment (or nil).\n\n  The callback should automatically route COV notifications to this module's function `notify/2`. This however\n  depends on the callback and the implementation details.\n\n  For local objects, the user needs to take care of notifying the trend logger of changes (COV notifications).\n\n- `log_buffer_module: module()` - Optional. Set the Log Buffer implementation to use. It needs to implement the `LogBufferBehaviour`.\n\n- `lookup_cb: (DeviceObjectRef.t() -> {:ok, ObjectsUtility.bacnet_object()} | {:error, BACnetError.t()})` - Required.\n\n  The given function will be used to look up objects (such as discovering the current state),\n  for both local and remote objects.\n\n  The function will receive the device object reference.\n\n- `notification_receiver: Process.dest()` - Optional. The recipient of notifications when either reaching\n  buffer size or when Intrinsic Reporting reports an event. It may be optional, but for Intrinsic Reporting\n  compliance, it is important to receive notifications and update the object state in the device server,\n  including reporting events to BACnet recipients.\n\n- `state: State.t()` - Optional. Can be used to reinitialize the trend logger with\n  pre-existing state (i.e. after restart to not lose the buffers).\n  This option needs to be used with care, as a wrong value can crash the process.\n  `opts` of `state` will be overwritten.\n\n- `supervisor: Supervisor.supervisor()` - Optional. The task supervisor to use to spawn tasks under.\n  Tasks are spawned to invoke the given callback. If no supervisor is given,\n  the tasks will be spawned unsupervised.\n\n- `timezone: Calendar.time_zone()` - Optional. The timezone to use for timestamps. Defaults to `Etc/UTC`.","ref":"BACnet.Stack.TrendLogger.html#start_link/1"},{"type":"function","title":"BACnet.Stack.TrendLogger.trigger_log/3","doc":"Triggers a log for the given object. The given log will be used for the log buffer record.\n\nWhen the log is disabled, this call is ignored (returns `:ok`).\n\nWhen the function returns, it does not necessarily mean the operation was fully completed -\nfor remote objects which need to be polled, the function returns before completion.\nFor local objects, the function returns after completion.\n\nSee the table below for valid argument combinations:\n\n| Object             | COV Notification | Event Notification | BACnet Object | List of BACnet Objects | `:interrupted` | Time Change |\n|:-------------------|:----------------:|:------------------:|:-------------:|:----------------------:|:--------------:|:-----------:|\n| Event Log          |                  |          X         |       X       |                        |        X       |      X      |\n| Trend Log          |         X        |                    |       X       |                        |        X       |      X      |\n| Trend Log Multiple |                  |                    |               |            X           |        X       |      X      |","ref":"BACnet.Stack.TrendLogger.html#trigger_log/3"},{"type":"function","title":"BACnet.Stack.TrendLogger.update_object/2","doc":"Updates the following properties of the object in the trend logger:\n- buffer_size\n- cov_resubscription_interval (trend logs only)\n- enable\n- Intrinsic Reporting (notification threshold)\n- log_interval (trend logs only)\n- logging_type (trend logs only)\n- start_time and stop_time\n- stop_when_full\n\nWhen updating `buffer_size`, the records in the buffer will transfer\nover to the new buffer, discarding any oldest records that would\noverfill the new buffer.","ref":"BACnet.Stack.TrendLogger.html#update_object/2"},{"type":"type","title":"BACnet.Stack.TrendLogger.object/0","doc":"Represents valid BACnet objects. These can be handled by the trend logger.","ref":"BACnet.Stack.TrendLogger.html#t:object/0"},{"type":"type","title":"BACnet.Stack.TrendLogger.server/0","doc":"Represents a server process of the Trend Logger module.","ref":"BACnet.Stack.TrendLogger.html#t:server/0"},{"type":"type","title":"BACnet.Stack.TrendLogger.start_option/0","doc":"Valid start options. For a description of each, see `start_link/1`.","ref":"BACnet.Stack.TrendLogger.html#t:start_option/0"},{"type":"type","title":"BACnet.Stack.TrendLogger.start_options/0","doc":"List of start options.","ref":"BACnet.Stack.TrendLogger.html#t:start_options/0"},{"type":"module","title":"BACnet.Stack.Transport.EthernetTransport","doc":"The BACnet transport for BACnet/Ethernet.\n\nThis module uses the `:socket` module and requires `NET_RAW`\ncapabilities to use raw ethernet sockets.\n\nWindows does not support raw ethernet sockets as part of its API\nand thus trying to start an Ethernet transport will fail at socket level.\n\nThe Linux kernel/driver will re-calculate the ethernet frame size\nand not honor the ethernet frame size in the ethernet frame itself,\nthus all padding zeros will be included in the frame and APDU.\nThis may lead to unexpected behaviour in some edge cases.\nUse the IP transport or use BSD as an operating system instead,\nif you're having issues due to padding zeros being in the payload.","ref":"BACnet.Stack.Transport.EthernetTransport.html"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.bacnet_protocol/0","doc":"Get the BACnet transport protocol this transport implements.","ref":"BACnet.Stack.Transport.EthernetTransport.html#bacnet_protocol/0"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.child_spec/1","doc":"Produces a supervisor child spec.\nIt will call `child_spec(callback, opts)` with the given 2-element list elements.\n\nSee also `Supervisor.child_spec/2` for the rest of the behaviour.","ref":"BACnet.Stack.Transport.EthernetTransport.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.child_spec/2","doc":"Produces a supervisor child spec based on the BACnet transport `open` callback, as such\nit will take the `callback` and `opts` for `open/2`.\n\nSee also `Supervisor.child_spec/2` for the rest of the behaviour.","ref":"BACnet.Stack.Transport.EthernetTransport.html#child_spec/2"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.close/1","doc":"Closes the Transport module.","ref":"BACnet.Stack.Transport.EthernetTransport.html#close/1"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.get_broadcast_address/1","doc":"Get the broadcast address.","ref":"BACnet.Stack.Transport.EthernetTransport.html#get_broadcast_address/1"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.get_local_address/1","doc":"Get the local address.","ref":"BACnet.Stack.Transport.EthernetTransport.html#get_local_address/1"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.get_portal/1","doc":"Get the transport module portal for the given transport PID/port.\nTransport modules may return the input as output, if the same\nPID or port is used for sending.\n\nThis is used to get the portal before having received data from\nthe transport module, so data can be sent prior to reception.","ref":"BACnet.Stack.Transport.EthernetTransport.html#get_portal/1"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.is_destination_routed/2","doc":"Checks whether the given destination is an address that needs to be routed.","ref":"BACnet.Stack.Transport.EthernetTransport.html#is_destination_routed/2"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.is_valid_destination/1","doc":"Verifies whether the given destination is valid for the transport module.","ref":"BACnet.Stack.Transport.EthernetTransport.html#is_valid_destination/1"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.max_apdu_length/0","doc":"Get the maximum APDU length for this transport.","ref":"BACnet.Stack.Transport.EthernetTransport.html#max_apdu_length/0"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.max_npdu_length/0","doc":"Get the maximum NPDU length for this transport.\n\nThe NPDU length contains the maximum transmittable size\nof the NPDU, including the APDU, without violating\nthe maximum transmission unit of the underlying transport.\n\nAny necessary transport header (i.e. BVLL, LLC) must have\nbeen taken into account when calculating this number.","ref":"BACnet.Stack.Transport.EthernetTransport.html#max_npdu_length/0"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.open/2","doc":"Opens/starts the Transport module. A process is started, that is linked to the caller process.\n\nSee the `BACnet.Stack.TransportBehaviour` documentation for more information.\n\nIn case of this BACnet/Ethernet transport, the transport is a PID,\ndue to the GenServer receiving and processing Ethernet frames.\nThe portal is a tuple of the underlying socket, the ethernet interface index and the MAC address of the interface,\nso that there's no need to go through the GenServer. The BACnet/Ethernet transport module makes sure\nthe data is correctly wrapped for the BACnet/Ethernet protocol.\nSource and destination address is a binary containing the MAC address.\n\nThis transport takes the following options, in addition to `t:GenServer.options/0`:\n- `eth_ifname: binary()` - Optional. The ethernet interface to use. Defaults to the first one (normally loopback).\n- `supervisor: Supervisor.supervisor()` - Optional. The task supervisor to use to spawn tasks under.\n  Tasks are spawned to invoke the given callback. If no supervisor is given,\n  the tasks will be spawned unsupervised.","ref":"BACnet.Stack.Transport.EthernetTransport.html#open/2"},{"type":"function","title":"BACnet.Stack.Transport.EthernetTransport.send/4","doc":"Sends data to the BACnet network.\n\nSee the `BACnet.Stack.TransportBehaviour` documentation for more information.","ref":"BACnet.Stack.Transport.EthernetTransport.html#send/4"},{"type":"type","title":"BACnet.Stack.Transport.EthernetTransport.open_option/0","doc":"Valid open options. For a description of each, see `open/2`.","ref":"BACnet.Stack.Transport.EthernetTransport.html#t:open_option/0"},{"type":"type","title":"BACnet.Stack.Transport.EthernetTransport.open_options/0","doc":"List of open options.","ref":"BACnet.Stack.Transport.EthernetTransport.html#t:open_options/0"},{"type":"type","title":"BACnet.Stack.Transport.EthernetTransport.send_option/0","doc":"Valid send options. For a description of each, see `send/4`.","ref":"BACnet.Stack.Transport.EthernetTransport.html#t:send_option/0"},{"type":"type","title":"BACnet.Stack.Transport.EthernetTransport.send_options/0","doc":"List of send options.","ref":"BACnet.Stack.Transport.EthernetTransport.html#t:send_options/0"},{"type":"module","title":"BACnet.Stack.Transport.IPv4Transport","doc":"The BACnet transport for BACnet/IP on IPv4.\n\nBACnet/IPv4 uses UDP/IPv4 for communication. It uses both unicast and broadcast.\nBroadcast is used for unconfirmed services, such as discovery.\n\nThe BACnet specification allows for using multicast, however multicast is not implemented,\nas the majority of the commercial devices solely use unicast and broadcast.","ref":"BACnet.Stack.Transport.IPv4Transport.html"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.bacnet_protocol/0","doc":"Get the BACnet transport protocol this transport implements.","ref":"BACnet.Stack.Transport.IPv4Transport.html#bacnet_protocol/0"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.child_spec/1","doc":"Produces a supervisor child spec.\nIt will call `child_spec(callback, opts)` with the given 2-element list elements.\n\nSee also `Supervisor.child_spec/2` for the rest of the behaviour.","ref":"BACnet.Stack.Transport.IPv4Transport.html#child_spec/1"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.child_spec/2","doc":"Produces a supervisor child spec based on the BACnet transport `open` callback, as such\nit will take the `callback` and `opts` for `open/2`.\n\nSee also `Supervisor.child_spec/2` for the rest of the behaviour.","ref":"BACnet.Stack.Transport.IPv4Transport.html#child_spec/2"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.close/1","doc":"Closes the Transport module.","ref":"BACnet.Stack.Transport.IPv4Transport.html#close/1"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.get_broadcast_address/1","doc":"Get the broadcast address.","ref":"BACnet.Stack.Transport.IPv4Transport.html#get_broadcast_address/1"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.get_local_address/1","doc":"Get the local address.","ref":"BACnet.Stack.Transport.IPv4Transport.html#get_local_address/1"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.get_portal/1","doc":"Get the transport module portal for the given transport PID/port.\nTransport modules may return the input as output, if the same\nPID or port is used for sending.\n\nThis is used to get the portal before having received data from\nthe transport module, so data can be sent prior to reception.","ref":"BACnet.Stack.Transport.IPv4Transport.html#get_portal/1"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.is_destination_routed/2","doc":"Checks whether the given destination is an address that needs to be routed.","ref":"BACnet.Stack.Transport.IPv4Transport.html#is_destination_routed/2"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.is_valid_destination/1","doc":"Verifies whether the given destination is valid for the transport module.","ref":"BACnet.Stack.Transport.IPv4Transport.html#is_valid_destination/1"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.max_apdu_length/0","doc":"Get the maximum APDU length for this transport.","ref":"BACnet.Stack.Transport.IPv4Transport.html#max_apdu_length/0"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.max_npdu_length/0","doc":"Get the maximum NPDU length for this transport.\n\nThe NPDU length contains the maximum transmittable size\nof the NPDU, including the APDU, without violating\nthe maximum transmission unit of the underlying transport.\n\nAny necessary transport header (i.e. BVLL, LLC) must have\nbeen taken into account when calculating this number.","ref":"BACnet.Stack.Transport.IPv4Transport.html#max_npdu_length/0"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.open/2","doc":"Opens/starts the Transport module. A process is started, that is linked to the caller process.\n\nSee the `BACnet.Stack.TransportBehaviour` documentation for more information.\n\nIn the case of this BACnet/IPv4 transport, the transport PID/port is a `GenServer` receiving the UDP unicast\nand broadcast packets.\nHowever the portal is the UDP port where the data is sent to directly, without going through the `GenServer`.\nThe BACnet/IPv4 transport module makes sure the data is correctly wrapped for the BACnet/IPv4 protocol.\nSource and destination address is a tuple of IP address and port.\n\nThis transport takes the following options, in addition to `t:GenServer.options/0`:\n- `bacnet_port: 47808..65535` - Optional. The port number to use for BACnet. Defaults to `0xBAC0` (47808).\n- `inet_backend: :inet | :socket` - Optional. Allows to switch the inet (gen_udp) backend.\n- `local_ip: :inet.ip4_address()` - Optional. The local IP address to bind to. If not specified,\n  the first private IP address will be discovered. As private IP addresses count the IANA private IP range -\n  `10.0.0.0/8`, `172.16.0.0/12` and `192.168.0.0/16`.\n- `reuseaddr: boolean()` - Optional. Allows to set `SO_REUSEADDR` on the UDP socket.\n- `reuseport: boolean()` - Optional. Allows to set `SO_REUSEPORT` on the UDP socket - only with socket backend.\n- `supervisor: Supervisor.supervisor()` - Optional. The task supervisor to use to spawn tasks under.\n  Tasks are spawned to invoke the given callback. If no supervisor is given,\n  the tasks will be spawned unsupervised.","ref":"BACnet.Stack.Transport.IPv4Transport.html#open/2"},{"type":"function","title":"BACnet.Stack.Transport.IPv4Transport.send/4","doc":"Sends data to the BACnet network.\n\nSee the `BACnet.Stack.TransportBehaviour` documentation for more information.\n\nIn addition, the following options are available:\n- `bvlc: binary()` - Optional. The BACnet/IP Virtual Link Control to use.\n  This needs to be the binary representation of any BVLC (i.e. of `BACnet.Protocol.BvlcForwardedNPDU`),\n  including the BVLC function. The BVLC function gets automatically extracted and placed at the correct position.","ref":"BACnet.Stack.Transport.IPv4Transport.html#send/4"},{"type":"type","title":"BACnet.Stack.Transport.IPv4Transport.open_option/0","doc":"Valid open options. For a description of each, see `open/2`.","ref":"BACnet.Stack.Transport.IPv4Transport.html#t:open_option/0"},{"type":"type","title":"BACnet.Stack.Transport.IPv4Transport.open_options/0","doc":"List of open options.","ref":"BACnet.Stack.Transport.IPv4Transport.html#t:open_options/0"},{"type":"type","title":"BACnet.Stack.Transport.IPv4Transport.send_option/0","doc":"Valid send options. For a description of each, see `send/4`.","ref":"BACnet.Stack.Transport.IPv4Transport.html#t:send_option/0"},{"type":"type","title":"BACnet.Stack.Transport.IPv4Transport.send_options/0","doc":"List of send options.","ref":"BACnet.Stack.Transport.IPv4Transport.html#t:send_options/0"},{"type":"module","title":"BACnet.Internal","doc":"Internal module for working with various things.","ref":"BACnet.Internal.html"},{"type":"function","title":"BACnet.Internal.check_type/2","doc":"Checks the type of value and verifies more complex type it is of the same type as the given type.","ref":"BACnet.Internal.html#check_type/2"},{"type":"function","title":"BACnet.Internal.generate_valid_clause/2","doc":"Generates `valid?/1` clause body based on the given module's `:t` typespec,\nit must reference a struct.","ref":"BACnet.Internal.html#generate_valid_clause/2"},{"type":"macro","title":"BACnet.Internal.is_dest/1","doc":"Checks whether the given argument is `Process.dest()`.","ref":"BACnet.Internal.html#is_dest/1"},{"type":"macro","title":"BACnet.Internal.is_server/1","doc":"Checks whether the given argument is `GenServer.server()`,\nit also includes the `{:via, mod, term}` format,\nas `GenServer.call/3` uses `GenServer.whereis/1` to resolve the server argument.","ref":"BACnet.Internal.html#is_server/1"},{"type":"function","title":"BACnet.Internal.resolve_struct_type/4","doc":"Resolves a type (struct) to a map of fields to typespecs (`resolve_type/2`-like).\n\nThis function only works with BACnet data structures and not with types, such as\nexposed by the module `ApplicationTags`. Since `tuples` are used in that module to\nstructure data together, `tuples` are used in BACnet data structures as bitstrings\n(as seen in `ApplicationTags` bitstrings).\nAs such wrong typespecs will be generated and cannot be used for validation.\n\nFor structs that do not define any fields, an empty map will be returned.\n\nTuple types such as `{binary(), integer()}` will be resolved to `{:tuple, [:octet_string, :integer]}`.\n\n```elixir\niex(1)> resolve_struct_type(BACnet.Protocol.EventParameters.ChangeOfBitstring, :t, __ENV__)\n%{\n  alarm_values: {:list, :bitstring},\n  bitmask: :bitstring,\n  time_delay: :unsigned_integer,\n  time_delay_normal: {:type_list, [:unsigned_integer, {:literal, nil}]}\n}\n```\n\nAvailable options:\n- `ignore_underlined_keys: boolean()` - Ignores/skips keys starting with `_`, as such the\n  resolved types will exclude types for underline-prefixed keys.","ref":"BACnet.Internal.html#resolve_struct_type/4"},{"type":"function","title":"BACnet.Internal.resolve_type/2","doc":"Resolves an AST type to something `check_type/2` works with.","ref":"BACnet.Internal.html#resolve_type/2"},{"type":"function","title":"BACnet.Internal.tuple_to_int/1","doc":"Calculates the integer bitmask of a tuple of booleans.","ref":"BACnet.Internal.html#tuple_to_int/1"},{"type":"type","title":"BACnet.Internal.typechecker_types/0","doc":"Valid type checker types. This is mostly used for BACnet object properties.\n\nFollowing types are supported:\n- `nil` - `nil`\n- `:any` - `any()`/`term()`\n- `:boolean` - `boolean()`\n- `:string` - `String.t()`\n- `:octet_string` - `binary()`\n- `:signed_integer` - `integer()`\n- `:unsigned_integer` - `non_neg_integer()`\n- `:real` - `float()`, also allowing `:NaN`, `:inf`, `:infn`\n- `:double` - value check same as `:real` (for `bac_object/2`, this type must be explicitely specified)\n- `:bitstring` - tuple of booleans\n- `{:array, subtype}` (validates a `BACnetArray` and every value of it being of `subtype`)\n- `{:array, subtype, fixed_size}` (validates a `BACnetArray` with fixed size of `fixed_size` and every value of it being of `subtype`)\n- `{:constant, type}` - `Constants.type()`\n- `{:in_list, values}`\n- `{:in_range, low, high}` - `x..y`\n- `{:list, type}` - `[type()]`\n- `{:literal, value_check}` (checks if `value` equals to `value_check` using the match `===/2` operator)\n- `{:struct, module}` (calls the module's `valid?/1` function, if exported)\n- `{:tuple, [type]}` (checks in sequence if the tuple element matches to the type in the same index)\n- `{:type_list, [type]}` - `type_a()|type_b()` (checks if the value passes one of the type checks in `types` list)\n- `{:with_validator, type, validator_function_ast}` - First checks the type and then calls the validator function,\n   which is AST that gets first evaluated and then called with the value. The AST must evaluate to a single arity function.","ref":"BACnet.Internal.html#t:typechecker_types/0"},{"type":"module","title":"BACnet.Protocol.ObjectsMacro","doc":"This is an internal module for defining BACnet objects.\n\nIf you're a library user, there's no need for you to ever deal with this module.\n\nIf you want to store the BACnet object definition AST as a persistent module\nattribute (`:bacobj_ast`) in each BACnet object module, you can set the key `:store_bacobj_ast`\nto `true` for the `:bacstack` application. If `:bacstack` is a dependency of your\nMix project, you will need to recompile bacstack with `mix deps.compile bacstack --force`.\n\nThe following has to be taken care of when trying decode/encode properties:\n- Check the annotations for decoder/encoder functions (single argument - the plain value (no tag encoding))\n- Check the annotations for `encode_as` primitive type declaration (i.e. is used to declare enumerated booleans)\n- Check the properties types map - 99% should be covered by this (1% is covered by annoations)\n- Custom decoding/encoding by hand for special properties (not yet supported properties/objects)","ref":"BACnet.Protocol.ObjectsMacro.html"},{"type":"macro","title":"BACnet.Protocol.ObjectsMacro.__using__/1","doc":"Inserts an `import` for the `bac_object/2` macro.","ref":"BACnet.Protocol.ObjectsMacro.html#__using__/1"},{"type":"macro","title":"BACnet.Protocol.ObjectsMacro.bac_object/2","doc":"Defines a BACnet object.\n\nThis macro generates the struct, the necessary functions, helpers, types\nand module documentation and inserts these into the AST of the module.\n\nUse `define_bacnet_object/3` to use something that can be used outside of a module\n(it produces AST for `bac_object/2`).\n\nThe following functions for working with objects get generated:\n- `add_property/3`\n- `create/4`\n- `cov_reporting?/1`\n- `get_object_identifier/1`\n- `get_properties/1`\n- `has_property?/2`\n- `intrinsic_reporting?/1`\n- `property_writable?/2`\n- `remove_property/2`\n- `update_property/3`\n\nThe `property_writable/2` function should be overridden by modules to set certain\nproperties writable only during certain conditions, if this is required by the object.\n\nThe following functions get generated based on the available properties (priority_array):\n- `get_priority_value/1`\n- `set_priority/3`\n\nThe following helper functions get generated:\n- `get_all_properties/0`\n- `get_cov_properties/0`\n- `get_intrinsic_properties/0`\n- `get_optional_properties/0`\n- `get_properties_type_map/0`\n- `get_protected_properties/0`\n- `get_readonly_properties/0`\n- `get_required_properties/0`\n- `supports_intrinsic/0`\n\nThe following types get generated:\n- `common_object_opts/0` (for basic BACnet object options)\n- `property_name/0`\n- `property_update_error/0`\n- `t/0`\n\nFor convenience, the `fetch/2` function will be implemented for use with the `Access` behaviour.\nAll other `Access` behaviour callbacks/functions will not be implemented.\n\nTo use this macro, you need to pass it the BACnet object type (`t:Constants.object_type/0`) and\nthe definition of the object in a `do` block.\n\nThe definition is built up using the following macros:\n- `services/1` - Defines which services are available in keyword notation (services: `intrinsic`).\n- `field/3` - Defines each field/property of the object. First the name, then the Elixir typespec,\n  following options. When writing typespecs, the typespec will be resolved. It must be noted, not\n  all types are supported (i.e. plain maps). The following options are available:\n  - `annotation` - Can be used multiple times. Allows to add annotations to the field which can be retrieved\n    using `get_annotation/1`. The return value is always a list. The given argument must be allowed to be\n    escaped (such as no evaluated functions).\n    The given argument should be `{:field_name, value}` or `[field_name: value]`.\n    The whole annotations list is flattened, to allow keyword based access through `get_annotation/1`.\n  - `bac_type` - Used to override the inherited type from the typespec,\n    which is then used for property value typechecks. The value of this field is to be a valid type of\n    `t:Internal.typechecker_types/0` or\n    `{:with_validator, type of Internal.typechecker_types/0, validator function quote block or capture}`.\n    Types given through this option will not be further validated and may lead to runtime errors when\n    incorrectly used.\n  - `cov` - Property is part of COV Reporting (the \"main\" property for reporting changes).\n  - `default` - Default value for the property. This can be a constant value, function call,\n    anonymous function or capture expression (arity 0!).\n    Function calls, definitions and captures are executed at compile time.\n  - `implicit_relationship` - Implicit relationship between two properties.\n    The other property gets automatically added, if one of the relationship gets added.\n  - `init_fun` - Used to initialize the property with an initial value\n    (only remote function captures with arity 0 allowed). Properties with an `init_fun` get added to the property\n    as if the property was required and had a default value, if it's not a remote object.\n  - `intrinsic` - Property is part of Intrinsic Reporting.\n  - `protected` - The property can not be changed through the functions (i.e. `object_instance` can not be mutated).\n  - `readonly` - Annotation that the property should only be readonly (write protected from the BACnet side).\n  - `required` - Required property, must always be present.\n  - `validator_fun` - Used to verify the property value before inserting.\n    This function can accept, zero, one or two arguments (the value and the object itself). During object creation,\n    the function will get a plain map of the currently accumulated properties as object.\n\nThe macro will verify the structure. Fields with implicit relationships should always have a default value.\nObject creation will otherwise fail.\n\nWhen creating an object and a required property has no default and no value is given at creation,\nobject creation will fail.\n\nIf an object gets created and only one property gets specified of an implicit relationship, the other\nproperty gets automatically added (which explains why it should have a default value).\n\nAn example definition looks like this:\n```elixir\nbac_object :analog_input do\n  services(intrinsic: true)\n\n  field(:description, String.t()) # Optional property\n  field(:device_type, String.t()) # Optional property\n  field(:out_of_service, boolean(), required: true) # Required property, has an implicit default value\n  field(:present_value, boolean(), required: true, default: false) # Required property, has a default value\nend\n```\n\nThe following properties have an implicit default value:\n- event_state (`:normal`)\n- out_of_service (`false`)\n- status_flags (all bits `false`)\n\nThe following implicit relationships exist and do not need to be manually defined:\n- priority_array <-> relinquish_default\n\nThe following properties are implicitely protected:\n- object_identifier (does not exist on the struct)\n- object_type (does not exist on the struct)\n- properties_list (does not exist as property on the struct - properties are tracked in metadata)\n\nBoth properties which do not exist are inherited from the module. Properties list is tracked internally\nand thus protected from mutation through the functions. These properties need to be dynamically\ninherited through the device server for the BACnet side to conform to the BACnet standard.\n\nFor input objects, the device server needs to implement the present value write protection for when\nthe object is not out of service. The object itself does not provide such a mechanism as it does\nnot know from where the write is happening (locally from the device or through BACnet).\n\nThe following properties are required for all objects and are automatically defined:\n- object_instance (annotated as readonly)\n- object_name (annotated as readonly)\n\nFor intrinsic objects, the following properties are automatically defined (with a default value):\n- acked_transitions (annotated as readonly)\n- event_algorithm_inhibit\n- event_algorithm_inhibit_ref\n- event_detection_enable\n- event_enable\n- event_message_texts (annotated as readonly)\n- event_message_texts_config\n- event_timestamps (annotated as readonly)\n- limit_enable\n- notify_type\n- notification_class\n- time_delay\n- time_delay_normal\n\nFor commandable objects (objects with a priority array), the present value property is protected,\nunless out of service is active. For the duration of out of service, updates to the present value\nusing `update_property/3` are allowed. Once out of service is disabled, the present value is once\nagain protected from updates, as the present value is updated through the relinquish_default and\npriority_array properties.\n\nLastly, when using annotations, annotations with the key name `required_when` will be respected,\nif their value is supported. `required_when` can be used to conditionally require certain properties.\nThe following values are supported:\n  - `{:property, Constants.property_identifier()}` - The given property must be present in the object.\n  - `{:property, Constants.property_identifier(), value}` - The given property must be present\n    in the object and have the specified value.\n  - `{:property, Constants.property_identifier(), operator, value}` - The given property must be present\n    in the object and have the specified value. The value is compared using the given operator from\n    the `Kernel` module (must be a function in said module).\n  - `{:opts, atom()}` - The given option must be present in the object options (given in `create/4`)\n    and have the value `true`.\n  - `{:opts, atom(), value}` - The given option must be present in the object options\n    and have the specified value.\n  - `{:opts, atom(), operator, value}` - The given option must be present\n    in the object options and have the specified value. The value is compared using the given\n    operator from the `Kernel` module (must be a function in said module).\n  - `(map() -> boolean())` - Function with arity 1, receives the currently\n    accumulated properties. Returning `true` means the property is required.\n  - `(map(), map() -> boolean())` - Function with arity 2, receives the currently\n    accumulated properties and the metadata map. Returning `true` means the property is required.\n\nOther values than the supported values get simply ignored - there's no error or warning.\n\nFor example, to have the following field being marked as required (than by default being optional),\nit requires the option `:supports_restart` to be `true`:\n\n```elixir\nfield(\n  :last_restart_reason,\n  Constants.restart_reason(),\n  annotation: [required_when: {:opts, :supports_restart}]\n)\n```\n\nWhen instantiating the instance the said option is given with the value `true`,\nthen the property is required and must either have a default value or be explicitely given.\nIf the property does not have a default value or is not given, the instantiation fails with an error.\nIf the said option is not given (or with value `false`), then the property stays optional.\n\nTo have the property only present and can only be instantiated when the property is required,\nto meet BACnet requirements to have some properties only present when some condition is met,\nthe annotation `only_when` is supported. It supports the same values as `required_when`.\n\nThat means, the optional property can not be used unless the `required_when` test passes true.\nThe exception being remote objects, where all optional properties can always be used,\nas these our outside of our responsibility.","ref":"BACnet.Protocol.ObjectsMacro.html#bac_object/2"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.define_bacnet_object/3","doc":"Defines a BACnet object. This function produces AST from the given BACnet object definition.\nFor a description of what it does, see the `bac_object/2` macro.","ref":"BACnet.Protocol.ObjectsMacro.html#define_bacnet_object/3"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.get_default_bacnet_datetime/0","doc":"Get a default BACnet DateTime with every field `:unspecified`.","ref":"BACnet.Protocol.ObjectsMacro.html#get_default_bacnet_datetime/0"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.get_default_bacnet_timestamp/0","doc":"Get a default BACnet Timestamp with a `DateTime` and every field `:unspecified`.","ref":"BACnet.Protocol.ObjectsMacro.html#get_default_bacnet_timestamp/0"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.get_default_dev_object_ref/0","doc":"Get a default BACnet Device Object Property Reference. References a BI object with the\nhighest instance number, referencing the highest property identifier.\n\nThe highest instance number usually represents an uninitialized property.","ref":"BACnet.Protocol.ObjectsMacro.html#get_default_dev_object_ref/0"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.get_default_event_message_texts/0","doc":"Get a default BACnet Event Message Texts with default English strings.","ref":"BACnet.Protocol.ObjectsMacro.html#get_default_event_message_texts/0"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.get_default_event_transbits/1","doc":"Get a default BACnet Event Transition Bits with each bit set to a specific value.","ref":"BACnet.Protocol.ObjectsMacro.html#get_default_event_transbits/1"},{"type":"function","title":"BACnet.Protocol.ObjectsMacro.get_default_object_ref/0","doc":"Get a default BACnet Object Property Reference. References a BI object with the\nhighest instance number, referencing the highest property identifier.\n\nThe highest instance number usually represents an uninitialized property\n(such as in the case for `event_algorithm_inhibit_ref`).","ref":"BACnet.Protocol.ObjectsMacro.html#get_default_object_ref/0"},{"type":"module","title":"BACnet.Protocol.Utility","doc":"Various utility functions to help with the BACnet protocol.","ref":"BACnet.Protocol.Utility.html"},{"type":"macro","title":"BACnet.Protocol.Utility.pattern_extract_tags/4","doc":"Helper function to extract and unfold the tag from a linked list of BACnet application tags.\n\nReturns `{:ok, value, rest}` if the tag was found and successfully unfolded (if needed to),\nreturns `{:error, :missing_pattern}` if tag was not found and is not optional,\nreturns `{:error, term}` otherwise. `value` is unwrapped and does not contain the tag tuple,\nif the tag value was unfolded. Otherwise it's the complete tag encoding tuple.\n\nIt also allows to give an anonymous function or capture with arity 1,\nwhich transforms the complete tag encoding tuple (if found).\nIt must return `{:ok, value}` or `{:error, term}`. In case of `:ok`,\nthis will be transformed to `{:ok, value, rest}`.","ref":"BACnet.Protocol.Utility.html#pattern_extract_tags/4"},{"type":"behaviour","title":"BACnet.Protocol.Services.Behaviour","doc":"","ref":"BACnet.Protocol.Services.Behaviour.html"},{"type":"callback","title":"BACnet.Protocol.Services.Behaviour.get_name/0","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.Behaviour.html#c:get_name/0"},{"type":"callback","title":"BACnet.Protocol.Services.Behaviour.is_confirmed/0","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.Behaviour.html#c:is_confirmed/0"},{"type":"callback","title":"BACnet.Protocol.Services.Behaviour.to_apdu/2","doc":"Get a service request APDU for this service.\n\nFor confirmed service requests, the following keys default to specific values, if not specified:\n  - `segmented_response_accepted: true`\n  - `max_segments: :more_than_64`\n  - `max_apdu: 1476`\n  - `invoke_id: 0`\n\nThese keys can be overriden through `request_data`. `request_data` may be ignored for unconfirmed services.\n\nWhen setting `max_segments`, do not use `:unspecified` because it makes it for the server unable to determine\nif the response is transmittable or not. Thus `:unspecified` might be as low as maximum two segments.\nFor that reason, always use a specific max segments or `:more_than_64`.","ref":"BACnet.Protocol.Services.Behaviour.html#c:to_apdu/2"},{"type":"module","title":"BACnet.Protocol.Services.Common","doc":"This module implements the parsing for some services, which are available as both confirmed\nand unconfirmed. So instead of implementing the same parsing and encoding twice, this module\nis the common ground for these services.","ref":"BACnet.Protocol.Services.Common.html"},{"type":"function","title":"BACnet.Protocol.Services.Common.after_encode_convert/4","doc":"After encode, this function can be used to turn the request parameters into a service request.\n\nThis function is used in the `Services.*` modules. Any wrong usage can only be blamed onto the user themself.","ref":"BACnet.Protocol.Services.Common.html#after_encode_convert/4"},{"type":"function","title":"BACnet.Protocol.Services.Common.decode_cov_notification/1","doc":"Decodes the unconfirmed or confirmed cov notification service into a base map.\n\nThis function is used by the `ConfirmedCovNotification` and `UnconfirmedCovNotification` modules.","ref":"BACnet.Protocol.Services.Common.html#decode_cov_notification/1"},{"type":"function","title":"BACnet.Protocol.Services.Common.decode_event_notification/1","doc":"Decodes the unconfirmed or confirmed event notification service into a base map.\n\nThis function is used by the `ConfirmedEventNotification` and `UnconfirmedEventNotification` modules.","ref":"BACnet.Protocol.Services.Common.html#decode_event_notification/1"},{"type":"function","title":"BACnet.Protocol.Services.Common.decode_private_transfer/1","doc":"Decodes the unconfirmed or confirmed private transfer service into a base map.\n\nThis function is used by the `ConfirmedPrivateTransfer` and `UnconfirmedPrivateTransfer` modules.","ref":"BACnet.Protocol.Services.Common.html#decode_private_transfer/1"},{"type":"function","title":"BACnet.Protocol.Services.Common.decode_text_message/1","doc":"Decodes the unconfirmed or confirmed text message service into a base map.\n\nThis function is used by the `ConfirmedTextMessage` and `UnconfirmedTextMessage` modules.","ref":"BACnet.Protocol.Services.Common.html#decode_text_message/1"},{"type":"function","title":"BACnet.Protocol.Services.Common.encode_cov_notification/2","doc":"Encodes the unconfirmed or confirmed COV notification service into a base map.\n\nThis function is used by the `ConfirmedCovNotification` and `UnconfirmedCovNotification` modules.","ref":"BACnet.Protocol.Services.Common.html#encode_cov_notification/2"},{"type":"function","title":"BACnet.Protocol.Services.Common.encode_event_notification/2","doc":"Encodes the unconfirmed or confirmed event notification service into a base map.\n\nThis function is used by the `ConfirmedEventNotification` and `UnconfirmedEventNotification` modules.","ref":"BACnet.Protocol.Services.Common.html#encode_event_notification/2"},{"type":"function","title":"BACnet.Protocol.Services.Common.encode_private_transfer/2","doc":"Encodes the unconfirmed or confirmed private transfer service into a base map.\n\nThis function is used by the `ConfirmedPrivateTransfer` and `UnconfirmedPrivateTransfer` modules.","ref":"BACnet.Protocol.Services.Common.html#encode_private_transfer/2"},{"type":"function","title":"BACnet.Protocol.Services.Common.encode_text_message/2","doc":"Encodes the unconfirmed or confirmed text message service into a base map.\n\nThis function is used by the `ConfirmedTextMessage` and `UnconfirmedTextMessage` modules.","ref":"BACnet.Protocol.Services.Common.html#encode_text_message/2"},{"type":"protocol","title":"BACnet.Protocol.Services.Protocol","doc":"","ref":"BACnet.Protocol.Services.Protocol.html"},{"type":"function","title":"BACnet.Protocol.Services.Protocol.get_name/1","doc":"Get the service name atom.","ref":"BACnet.Protocol.Services.Protocol.html#get_name/1"},{"type":"function","title":"BACnet.Protocol.Services.Protocol.is_confirmed/1","doc":"Whether the service is of type confirmed or unconfirmed.","ref":"BACnet.Protocol.Services.Protocol.html#is_confirmed/1"},{"type":"function","title":"BACnet.Protocol.Services.Protocol.to_apdu/2","doc":"Get a service request APDU for this service.\n\nFor confirmed service requests, the following keys default to specific values, if not specified:\n  - `segmented_response_accepted: true`\n  - `max_segments: :more_than_64`\n  - `max_apdu: 1476`\n  - `invoke_id: 0`\n\nThese keys can be overriden through `request_data`. `request_data` may be ignored for unconfirmed services.\n\nWhen setting `max_segments`, do not use `:unspecified` because it makes it for the server unable to determine\nif the response is transmittable or not. Thus `:unspecified` might be as low as maximum two segments.\nFor that reason, always use a specific max segments or `:more_than_64`.","ref":"BACnet.Protocol.Services.Protocol.html#to_apdu/2"},{"type":"type","title":"BACnet.Protocol.Services.Protocol.t/0","doc":"All the types that implement this protocol.","ref":"BACnet.Protocol.Services.Protocol.html#t:t/0"},{"type":"module","title":"BACnet.Stack.BBMD.ClientRef","doc":"Internal module for `BACnet.Stack.BBMD`.\n\nIt is used to keep track of the necessary\nclient and transport information.","ref":"BACnet.Stack.BBMD.ClientRef.html"},{"type":"type","title":"BACnet.Stack.BBMD.ClientRef.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.BBMD.ClientRef.html#t:t/0"},{"type":"module","title":"BACnet.Stack.BBMD.Registration","doc":"Internal module for `BACnet.Stack.BBMD`.\n\nIt is used to track registration of Foreign Device\ninside the BBMD.","ref":"BACnet.Stack.BBMD.Registration.html"},{"type":"type","title":"BACnet.Stack.BBMD.Registration.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.BBMD.Registration.html#t:t/0"},{"type":"module","title":"BACnet.Stack.BBMD.State","doc":"Internal module for `BACnet.Stack.BBMD`.\n\nIt is used as `GenServer` state.","ref":"BACnet.Stack.BBMD.State.html"},{"type":"type","title":"BACnet.Stack.BBMD.State.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.BBMD.State.html#t:t/0"},{"type":"module","title":"BACnet.Stack.Client.ApduTimer","doc":"Internal module for `BACnet.Stack.Client`.\n\nIt is used as APDU timer for outgoing APDUs.\nIt holds together all the necessary information\nto track the APDU, time, retry count and contains\ninformation that is used to reply to the application.","ref":"BACnet.Stack.Client.ApduTimer.html"},{"type":"type","title":"BACnet.Stack.Client.ApduTimer.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.Client.ApduTimer.html#t:t/0"},{"type":"module","title":"BACnet.Stack.Client.ReplyTimer","doc":"Internal module for `BACnet.Stack.Client`.\n\nIt is used as reply timer for incoming APDUs.\nIt holds together all the necessary information\nto fire when the application does not respond\nfast enough and will reply negatively to the\nremote BACnet client.","ref":"BACnet.Stack.Client.ReplyTimer.html"},{"type":"type","title":"BACnet.Stack.Client.ReplyTimer.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.Client.ReplyTimer.html#t:t/0"},{"type":"module","title":"BACnet.Stack.Client.State","doc":"Internal module for `BACnet.Stack.Client`.\n\nIt is used as `GenServer` state.","ref":"BACnet.Stack.Client.State.html"},{"type":"type","title":"BACnet.Stack.Client.State.app_timer_key/0","doc":"Key for the application reply timer.","ref":"BACnet.Stack.Client.State.html#t:app_timer_key/0"},{"type":"type","title":"BACnet.Stack.Client.State.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.Client.State.html#t:t/0"},{"type":"module","title":"BACnet.Stack.ForeignDevice.Registration","doc":"Internal module for `BACnet.Stack.ForeignDevice`.\n\nIt is used to track registration as Foreign Device\nin a remote BBMD.","ref":"BACnet.Stack.ForeignDevice.Registration.html"},{"type":"type","title":"BACnet.Stack.ForeignDevice.Registration.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.ForeignDevice.Registration.html#t:t/0"},{"type":"module","title":"BACnet.Stack.ForeignDevice.State","doc":"Internal module for `BACnet.Stack.ForeignDevice`.\n\nIt is used as `GenServer` state.","ref":"BACnet.Stack.ForeignDevice.State.html"},{"type":"type","title":"BACnet.Stack.ForeignDevice.State.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.ForeignDevice.State.html#t:t/0"},{"type":"module","title":"BACnet.Stack.Segmentator.Sequence","doc":"Internal module for `BACnet.Stack.Segmentator`.\n\nIt is used to keep track of segmentation status and information,\nsegmentation segments and transport information.","ref":"BACnet.Stack.Segmentator.Sequence.html"},{"type":"type","title":"BACnet.Stack.Segmentator.Sequence.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.Segmentator.Sequence.html#t:t/0"},{"type":"module","title":"BACnet.Stack.Segmentator.State","doc":"Internal module for `BACnet.Stack.Segmentator`.\n\nIt is used as `GenServer` state.","ref":"BACnet.Stack.Segmentator.State.html"},{"type":"type","title":"BACnet.Stack.Segmentator.State.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.Segmentator.State.html#t:t/0"},{"type":"module","title":"BACnet.Stack.SegmentsStore.Sequence","doc":"Internal module for `BACnet.Stack.SegmentsStore`.\n\nIt is used to keep track of segmentation status and information,\nsegmentation segments and transport information.","ref":"BACnet.Stack.SegmentsStore.Sequence.html"},{"type":"type","title":"BACnet.Stack.SegmentsStore.Sequence.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.SegmentsStore.Sequence.html#t:t/0"},{"type":"module","title":"BACnet.Stack.SegmentsStore.State","doc":"Internal module for `BACnet.Stack.SegmentsStore`.\n\nIt is used as `GenServer` state.","ref":"BACnet.Stack.SegmentsStore.State.html"},{"type":"type","title":"BACnet.Stack.SegmentsStore.State.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.SegmentsStore.State.html#t:t/0"},{"type":"module","title":"BACnet.Stack.TrendLogger.Log","doc":"Internal module for `BACnet.Stack.TrendLogger`.\n\nIt is used to keep track of logging objects,\nthe log buffer, intrinsic reporting and other\nnecessary information.","ref":"BACnet.Stack.TrendLogger.Log.html"},{"type":"type","title":"BACnet.Stack.TrendLogger.Log.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.TrendLogger.Log.html#t:t/0"},{"type":"module","title":"BACnet.Stack.TrendLogger.State","doc":"Internal module for `BACnet.Stack.TrendLogger`.\n\nIt is used as `GenServer` state.","ref":"BACnet.Stack.TrendLogger.State.html"},{"type":"type","title":"BACnet.Stack.TrendLogger.State.t/0","doc":"Representative type for its purpose.","ref":"BACnet.Stack.TrendLogger.State.html#t:t/0"},{"type":"exception","title":"BACnet.Protocol.ApplicationTags.Encoding.Error","doc":"`ApplicationTags.Encoding` errors.","ref":"BACnet.Protocol.ApplicationTags.Encoding.Error.html"},{"type":"exception","title":"BACnet.Protocol.Constants.ConstantError","doc":"Constants exception.","ref":"BACnet.Protocol.Constants.ConstantError.html"}],"content_type":"text/markdown","producer":{"name":"ex_doc","version":[48,46,51,52,46,50]}}